!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
01210582f58915857edb99295eb934c0	html/generic__structs_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="01210582f58915857edb99295eb934c0"><\/a><!-- doxytag: member="generic_structs.h::list_node" ref="01210582f58915857edb99295eb934c0" args="" -->$/;"	a
01210582f58915857edb99295eb934c0	html/linked__list_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="01210582f58915857edb99295eb934c0"><\/a><!-- doxytag: member="linked_list.h::list_node" ref="01210582f58915857edb99295eb934c0" args="" -->$/;"	a
0129c9f37aa20931a2c54a337af06161	html/hashtable_8h.html	/^<a class="anchor" name="0129c9f37aa20931a2c54a337af06161"><\/a><!-- doxytag: member="hashtable.h::create_hashtable" ref="0129c9f37aa20931a2c54a337af06161" args="(unsigned int minsize, unsigned int(*hashfunction)(void *), int(*key_eq_fn)(void *, void *), void(*vff)(void *))" -->$/;"	a
0183a63584b8edb3bd33aff9c9a6de8d	html/flat_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0183a63584b8edb3bd33aff9c9a6de8d"><\/a><!-- doxytag: member="flat.h::RENDERER_FLAT_IMAGE_WIDTH" ref="0183a63584b8edb3bd33aff9c9a6de8d" args="" -->$/;"	a
01c63cfd495a5c0ad22047f8803a0b61	html/flat_8h.html	/^<a class="anchor" name="01c63cfd495a5c0ad22047f8803a0b61"><\/a><!-- doxytag: member="flat.h::renderer_flat_get_chunk" ref="01c63cfd495a5c0ad22047f8803a0b61" args="(renderer *r, int32_t coord_x, int32_t coord_z)" -->$/;"	a
03db3ba4c2d8fe65f87dc611b5c0a845	html/structchunk__cache.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="03db3ba4c2d8fe65f87dc611b5c0a845"><\/a><!-- doxytag: member="chunk_cache::empty" ref="03db3ba4c2d8fe65f87dc611b5c0a845" args=")(void *)" -->$/;"	a
03ea45110967b845fe3c509e6b26940f	html/chunk_8h.html	/^<a class="anchor" name="03ea45110967b845fe3c509e6b26940f"><\/a><!-- doxytag: member="chunk.h::chunk_get_coords_from_filename" ref="03ea45110967b845fe3c509e6b26940f" args="(char *filename, int32_t *x_coord, int32_t *z_coord)" -->$/;"	a
048ef9e4ece0b81034cdc11d0e03950b	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="048ef9e4ece0b81034cdc11d0e03950b"><\/a><!-- doxytag: member="nbt.h::NBT_TAG_HASH_BUCKETS" ref="048ef9e4ece0b81034cdc11d0e03950b" args="" -->$/;"	a
051302be51760309c540e01fe884fd43	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="051302be51760309c540e01fe884fd43"><\/a><!-- doxytag: member="nbt_file::last_inflate_retcode" ref="051302be51760309c540e01fe884fd43" args="" -->$/;"	a
05bc9b9456318d1018d17729894a7b45	html/hashtable_8h.html	/^<a class="anchor" name="05bc9b9456318d1018d17729894a7b45"><\/a><!-- doxytag: member="hashtable.h::hashtable_insert" ref="05bc9b9456318d1018d17729894a7b45" args="(struct hashtable *h, void *k, void *v)" -->$/;"	a
06fcc4d5b5a58db30e21212f46ccc073	html/structlist__node.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="06fcc4d5b5a58db30e21212f46ccc073"><\/a><!-- doxytag: member="list_node::next" ref="06fcc4d5b5a58db30e21212f46ccc073" args="" -->$/;"	a
070d5cd330993d497bc24fedc80a5aac	html/chunk_8h.html	/^<a class="anchor" name="070d5cd330993d497bc24fedc80a5aac"><\/a><!-- doxytag: member="chunk.h::chunk_key_eqfn" ref="070d5cd330993d497bc24fedc80a5aac" args="(void *key1, void *key2)" -->$/;"	a
085080bd9fb1ee1f52d21023b3cf661d	html/structchunk__cache.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="085080bd9fb1ee1f52d21023b3cf661d"><\/a><!-- doxytag: member="chunk_cache::data" ref="085080bd9fb1ee1f52d21023b3cf661d" args="" -->$/;"	a
0a83029a7e6e663529322c95a940448f	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0a83029a7e6e663529322c95a940448f"><\/a><!-- doxytag: member="chunk::coord_x" ref="0a83029a7e6e663529322c95a940448f" args="" -->$/;"	a
0be01e38a1018d07b10f96a38e9bfd4c	html/nbt_8h.html	/^<a class="anchor" name="0be01e38a1018d07b10f96a38e9bfd4c"><\/a><!-- doxytag: member="nbt.h::nbt_get_payload_size" ref="0be01e38a1018d07b10f96a38e9bfd4c" args="(uint8_t tag_type)" -->$/;"	a
0c004f2a440b956639119bff50f3a32a	html/nbt_8h.html	/^<a class="anchor" name="0c004f2a440b956639119bff50f3a32a"><\/a><!-- doxytag: member="nbt.h::print_indent" ref="0c004f2a440b956639119bff50f3a32a" args="(int indent)" -->$/;"	a
0d2799a9ed4fa60f1c2e66b14eaa26b9	html/cache_8h.html	/^<a class="anchor" name="0d2799a9ed4fa60f1c2e66b14eaa26b9"><\/a><!-- doxytag: member="cache.h::cache_empty" ref="0d2799a9ed4fa60f1c2e66b14eaa26b9" args="(chunk_cache *cache)" -->$/;"	a
0d78036d2c09dadc4c7afa5270ca5641	html/patricia_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0d78036d2c09dadc4c7afa5270ca5641"><\/a><!-- doxytag: member="patricia.h::trie_free_func" ref="0d78036d2c09dadc4c7afa5270ca5641" args=")(void *)" -->$/;"	a
0d78036d2c09dadc4c7afa5270ca5641	html/trie_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0d78036d2c09dadc4c7afa5270ca5641"><\/a><!-- doxytag: member="trie.h::trie_free_func" ref="0d78036d2c09dadc4c7afa5270ca5641" args=")(void *)" -->$/;"	a
0e90aaebd6c01dd33adcb8c28172bfda	html/hashtable__itr_8h.html	/^<a class="anchor" name="0e90aaebd6c01dd33adcb8c28172bfda"><\/a><!-- doxytag: member="hashtable_itr.h::hashtable_iterator_search" ref="0e90aaebd6c01dd33adcb8c28172bfda" args="(struct hashtable_itr *itr, struct hashtable *h, void *k)" -->$/;"	a
0ee84d6fa5971f7c1ee577fc43e896d7	html/structcolor__map__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0ee84d6fa5971f7c1ee577fc43e896d7"><\/a><!-- doxytag: member="color_map_s::color_depth" ref="0ee84d6fa5971f7c1ee577fc43e896d7" args="" -->$/;"	a
0f2e86575a8ddbce836354cc8d6c7416	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0f2e86575a8ddbce836354cc8d6c7416"><\/a><!-- doxytag: member="hashtable::loadlimit" ref="0f2e86575a8ddbce836354cc8d6c7416" args="" -->$/;"	a
0f86da1747cf66f61c1d66a81bd3e8c3	html/maths_8h.html	/^<a class="anchor" name="0f86da1747cf66f61c1d66a81bd3e8c3"><\/a><!-- doxytag: member="maths.h::base36_error_codes" ref="0f86da1747cf66f61c1d66a81bd3e8c3" args="" -->$/;"	a
0f86da1747cf66f61c1d66a81bd3e8c38aae0da0f2b0f466c39ba4b8b56d3ca3	html/maths_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="0f86da1747cf66f61c1d66a81bd3e8c38aae0da0f2b0f466c39ba4b8b56d3ca3"><\/a><!-- doxytag: member="BASE36_OK" ref="0f86da1747cf66f61c1d66a81bd3e8c38aae0da0f2b0f466c39ba4b8b56d3ca3" args="" -->BASE36_OK<\/em>&nbsp;<\/td><td>$/;"	a
0f86da1747cf66f61c1d66a81bd3e8c39cfbe700e67d63f2bba8b6f9aa6e346f	html/maths_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="0f86da1747cf66f61c1d66a81bd3e8c39cfbe700e67d63f2bba8b6f9aa6e346f"><\/a><!-- doxytag: member="BASE36_INVALID_CHAR" ref="0f86da1747cf66f61c1d66a81bd3e8c39cfbe700e67d63f2bba8b6f9aa6e346f" args="" -->BASE36_INVALID_CHAR<\/em>&nbsp;<\/td><td>$/;"	a
0fd8326c7027d07ed3ad87c00788f78f	html/hashtable__private_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0fd8326c7027d07ed3ad87c00788f78f"><\/a><!-- doxytag: member="hashtable_private.h::freekey" ref="0fd8326c7027d07ed3ad87c00788f78f" args="(X)" -->$/;"	a
10a1a61733bcba77158ea9906f49055b	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="10a1a61733bcba77158ea9906f49055b"><\/a><!-- doxytag: member="read_nbt.h::UTF8_QUAD_MAX" ref="10a1a61733bcba77158ea9906f49055b" args="" -->$/;"	a
129f8550c077a9757a82d2355c251db3	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="129f8550c077a9757a82d2355c251db3"><\/a><!-- doxytag: member="renderer::tile_x" ref="129f8550c077a9757a82d2355c251db3" args="" -->$/;"	a
140a6e847f6d3b554b8e67b3d1179ebb	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="140a6e847f6d3b554b8e67b3d1179ebb"><\/a><!-- doxytag: member="level::smallest_x" ref="140a6e847f6d3b554b8e67b3d1179ebb" args="" -->$/;"	a
140f4698ea158f4f7f8880f0252e7d2f	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="140f4698ea158f4f7f8880f0252e7d2f"><\/a><!-- doxytag: member="chunk::blocks" ref="140f4698ea158f4f7f8880f0252e7d2f" args="" -->$/;"	a
156fb73f81cfdef76154b7dd88719eec	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="156fb73f81cfdef76154b7dd88719eec"><\/a><!-- doxytag: member="u_payload::long_payload" ref="156fb73f81cfdef76154b7dd88719eec" args="" -->$/;"	a
158df4421c0c60d8064ff580870ab0bd	html/nbt_8h.html	/^<a class="anchor" name="158df4421c0c60d8064ff580870ab0bd"><\/a><!-- doxytag: member="nbt.h::hex_dump" ref="158df4421c0c60d8064ff580870ab0bd" args="(void *string, int string_length, int indent, int flags)" -->$/;"	a
1697518331e1ec5be4d84163ed44a0b0	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1697518331e1ec5be4d84163ed44a0b0"><\/a><!-- doxytag: member="u_payload::list_payload" ref="1697518331e1ec5be4d84163ed44a0b0" args="" -->$/;"	a
176b3d0c7d88d44f3b43addca3e177d5	html/structrenderer__funcs.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="176b3d0c7d88d44f3b43addca3e177d5"><\/a><!-- doxytag: member="renderer_funcs::dimensions" ref="176b3d0c7d88d44f3b43addca3e177d5" args=")(int *, int *)" -->$/;"	a
17c6c6e770ceba25da9b74c041939d30	html/cache_8h.html	/^<a class="anchor" name="17c6c6e770ceba25da9b74c041939d30"><\/a><!-- doxytag: member="cache.h::cache_set" ref="17c6c6e770ceba25da9b74c041939d30" args="(chunk_cache *cache, int64_t key, chunk *payload)" -->$/;"	a
1a501067ae6b62c849c04968242713b9	html/flat_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1a501067ae6b62c849c04968242713b9"><\/a><!-- doxytag: member="flat.h::RENDERER_FLAT_IMAGE_HEIGHT" ref="1a501067ae6b62c849c04968242713b9" args="" -->$/;"	a
1bc531c663ef76cb4f5e2541170c2e6a	html/nbt_8h.html	/^<a class="anchor" name="1bc531c663ef76cb4f5e2541170c2e6a"><\/a><!-- doxytag: member="nbt.h::nbt_hash_fn" ref="1bc531c663ef76cb4f5e2541170c2e6a" args="(void *name)" -->$/;"	a
1bdae46631ed1c470d4b51a8486ca4a6	html/chunk_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1bdae46631ed1c470d4b51a8486ca4a6"><\/a><!-- doxytag: member="chunk.h::CHUNK_SIZE_X" ref="1bdae46631ed1c470d4b51a8486ca4a6" args="" -->$/;"	a
1c06d20b99fa830f7ea72b59a1badea0	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1c06d20b99fa830f7ea72b59a1badea0"><\/a><!-- doxytag: member="u_tag_payload::byte_array_payload" ref="1c06d20b99fa830f7ea72b59a1badea0" args="" -->$/;"	a
1c734ec5a441273daa90379dc8c14380	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1c734ec5a441273daa90379dc8c14380"><\/a><!-- doxytag: member="u_payload::byte_array_payload" ref="1c734ec5a441273daa90379dc8c14380" args="" -->$/;"	a
1ff81f826c5618c761e991aae07195d8	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1ff81f826c5618c761e991aae07195d8"><\/a><!-- doxytag: member="u_tag_payload::int_payload" ref="1ff81f826c5618c761e991aae07195d8" args="" -->$/;"	a
2024814451ff0fd3327d9c10fb18eeef	html/structconfiguration.html	/^<a class="anchor" name="2024814451ff0fd3327d9c10fb18eeef"><\/a><!-- doxytag: member="configuration::free_output_filename" ref="2024814451ff0fd3327d9c10fb18eeef" args="" -->$/;"	a
2046cbb3e8acdab8ad02546cbbed0e54	html/chunk_8h.html	/^<a class="anchor" name="2046cbb3e8acdab8ad02546cbbed0e54"><\/a><!-- doxytag: member="chunk.h::chunk_new" ref="2046cbb3e8acdab8ad02546cbbed0e54" args="(char *filepath, int32_t coord_x, int32_t coord_z)" -->$/;"	a
2074d46b7983a19b8f639b675216c8c8	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2074d46b7983a19b8f639b675216c8c8"><\/a><!-- doxytag: member="read_nbt.h::UTF8_MASK_TRIPLE" ref="2074d46b7983a19b8f639b675216c8c8" args="" -->$/;"	a
21d0879e4efb21c1c22cebd344f6f8cb	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="21d0879e4efb21c1c22cebd344f6f8cb"><\/a><!-- doxytag: member="nbt_file::compressed" ref="21d0879e4efb21c1c22cebd344f6f8cb" args="[CHUNK_SIZE]" -->$/;"	a
220b248d83784b7ec776f9080fea18e3	html/read__nbt_8h.html	/^<a class="anchor" name="220b248d83784b7ec776f9080fea18e3"><\/a><!-- doxytag: member="read_nbt.h::nbt_read_errors" ref="220b248d83784b7ec776f9080fea18e3" args="" -->$/;"	a
220b248d83784b7ec776f9080fea18e30b9860dbb0e49b9386df792b7e5ecccc	html/read__nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="220b248d83784b7ec776f9080fea18e30b9860dbb0e49b9386df792b7e5ecccc"><\/a><!-- doxytag: member="NBT_READ_MALFORMED_INPUT" ref="220b248d83784b7ec776f9080fea18e30b9860dbb0e49b9386df792b7e5ecccc" args="" -->NBT_READ_MALFORMED_INPUT<\/em>&nbsp;<\/td><td>$/;"	a
220b248d83784b7ec776f9080fea18e35bfe852e86771a8c9d1b15d27ec46159	html/read__nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="220b248d83784b7ec776f9080fea18e35bfe852e86771a8c9d1b15d27ec46159"><\/a><!-- doxytag: member="NBT_READ_OUT_OF_MEM" ref="220b248d83784b7ec776f9080fea18e35bfe852e86771a8c9d1b15d27ec46159" args="" -->NBT_READ_OUT_OF_MEM<\/em>&nbsp;<\/td><td>$/;"	a
220b248d83784b7ec776f9080fea18e37eae134e048bafc1e0f9293263d44c9a	html/read__nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="220b248d83784b7ec776f9080fea18e37eae134e048bafc1e0f9293263d44c9a"><\/a><!-- doxytag: member="NBT_READ_INVALID_UTF8" ref="220b248d83784b7ec776f9080fea18e37eae134e048bafc1e0f9293263d44c9a" args="" -->NBT_READ_INVALID_UTF8<\/em>&nbsp;<\/td><td>$/;"	a
220b248d83784b7ec776f9080fea18e3ac99ef583c89662450830bd57206f7d9	html/read__nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="220b248d83784b7ec776f9080fea18e3ac99ef583c89662450830bd57206f7d9"><\/a><!-- doxytag: member="NBT_READ_OK" ref="220b248d83784b7ec776f9080fea18e3ac99ef583c89662450830bd57206f7d9" args="" -->NBT_READ_OK<\/em>&nbsp;<\/td><td>$/;"	a
220b248d83784b7ec776f9080fea18e3bb024b0f562f5b200530b663faca49b0	html/read__nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="220b248d83784b7ec776f9080fea18e3bb024b0f562f5b200530b663faca49b0"><\/a><!-- doxytag: member="NBT_READ_GZREAD_ERROR" ref="220b248d83784b7ec776f9080fea18e3bb024b0f562f5b200530b663faca49b0" args="" -->NBT_READ_GZREAD_ERROR<\/em>&nbsp;<\/td><td>$/;"	a
220b248d83784b7ec776f9080fea18e3d89bf1ef8012666ae8c8058647c160a4	html/read__nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="220b248d83784b7ec776f9080fea18e3d89bf1ef8012666ae8c8058647c160a4"><\/a><!-- doxytag: member="NBT_READ_PREMATURE_EOF" ref="220b248d83784b7ec776f9080fea18e3d89bf1ef8012666ae8c8058647c160a4" args="" -->NBT_READ_PREMATURE_EOF<\/em>&nbsp;<\/td><td>$/;"	a
231f3a0856354a4351f981cb76c72f49	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="231f3a0856354a4351f981cb76c72f49"><\/a><!-- doxytag: member="nbt.h::nbt_new_short_tag" ref="231f3a0856354a4351f981cb76c72f49" args="(name, name_len, payload)" -->$/;"	a
2344174e410a88e15e092a44a3b50239	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2344174e410a88e15e092a44a3b50239"><\/a><!-- doxytag: member="nbt_file::decompressed_pos" ref="2344174e410a88e15e092a44a3b50239" args="" -->$/;"	a
2747cfcc5c1db389c8072a2566c3ab3c	html/flat_8h.html	/^<a class="anchor" name="2747cfcc5c1db389c8072a2566c3ab3c"><\/a><!-- doxytag: member="flat.h::renderer_flat_draw_row" ref="2747cfcc5c1db389c8072a2566c3ab3c" args="(void *_r, png_bytep buffer, int row_number)" -->$/;"	a
2a1406b351996638c5b70eabf4049814	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2a1406b351996638c5b70eabf4049814"><\/a><!-- doxytag: member="u_payload::double_payload" ref="2a1406b351996638c5b70eabf4049814" args="" -->$/;"	a
2a1a02be2666c6a25a4e08cd10bd6896	html/structtrie__node__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2a1a02be2666c6a25a4e08cd10bd6896"><\/a><!-- doxytag: member="trie_node_s::payload" ref="2a1a02be2666c6a25a4e08cd10bd6896" args="" -->$/;"	a
2add19fa09360f4b96f0a4672c96eb78	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2add19fa09360f4b96f0a4672c96eb78"><\/a><!-- doxytag: member="hashtable::hashfn" ref="2add19fa09360f4b96f0a4672c96eb78" args=")(void *k)" -->$/;"	a
2c37585a1de9793c997dbd21eb7b9395	html/level_8h.html	/^<a class="anchor" name="2c37585a1de9793c997dbd21eb7b9395"><\/a><!-- doxytag: member="level.h::level_get_chunk_at" ref="2c37585a1de9793c997dbd21eb7b9395" args="(level *lvl, int coord_x, int coord_z)" -->$/;"	a
30d04c477aa911060758f5588090a6cb	html/colors_8h.html	/^<a class="anchor" name="30d04c477aa911060758f5588090a6cb"><\/a><!-- doxytag: member="colors.h::color_map_free" ref="30d04c477aa911060758f5588090a6cb" args="(color_map *doomed)" -->$/;"	a
31126dd7e8f24b2f530d2e3f7a906406	html/colors_8h.html	/^<a class="anchor" name="31126dd7e8f24b2f530d2e3f7a906406"><\/a><!-- doxytag: member="colors.h::color_map_new" ref="31126dd7e8f24b2f530d2e3f7a906406" args="(png_byte *colors, uint16_t block_count, uint8_t color_depth, color_get_func get)" -->$/;"	a
31db5e3b7ffacc9a73d6b899b9b7052a	html/structcolor__map__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="31db5e3b7ffacc9a73d6b899b9b7052a"><\/a><!-- doxytag: member="color_map_s::block_count" ref="31db5e3b7ffacc9a73d6b899b9b7052a" args="" -->$/;"	a
31e6fb6df3823a3045c517ec5c88c49f	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="31e6fb6df3823a3045c517ec5c88c49f"><\/a><!-- doxytag: member="level::chunk_count" ref="31e6fb6df3823a3045c517ec5c88c49f" args="" -->$/;"	a
322d6ab30c77b6eee312ede8a1f080c6	html/nbt_8h.html	/^<a class="anchor" name="322d6ab30c77b6eee312ede8a1f080c6"><\/a><!-- doxytag: member="nbt.h::nbt_new_simple_tag" ref="322d6ab30c77b6eee312ede8a1f080c6" args="(uint8_t tag_type, wchar_t *name, uint16_t name_len, void *payload_value)" -->$/;"	a
353dfd3a411d580849eedfdb1f2bd026	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="353dfd3a411d580849eedfdb1f2bd026"><\/a><!-- doxytag: member="level::data" ref="353dfd3a411d580849eedfdb1f2bd026" args="" -->$/;"	a
367516db0bffcc1b7efa46bc1890fd77	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="367516db0bffcc1b7efa46bc1890fd77"><\/a><!-- doxytag: member="hashtable::primeindex" ref="367516db0bffcc1b7efa46bc1890fd77" args="" -->$/;"	a
37b687d3851398103c4c94f803787167	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="37b687d3851398103c4c94f803787167"><\/a><!-- doxytag: member="chunk::heightmap" ref="37b687d3851398103c4c94f803787167" args="" -->$/;"	a
395cd2a64f0e682a1396b8648230bbc5	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="395cd2a64f0e682a1396b8648230bbc5"><\/a><!-- doxytag: member="renderer::map" ref="395cd2a64f0e682a1396b8648230bbc5" args="" -->$/;"	a
3a169b438c335788a3a37814e7c7bc69	html/slab_8h.html	/^<a class="anchor" name="3a169b438c335788a3a37814e7c7bc69"><\/a><!-- doxytag: member="slab.h::cache_slab_get" ref="3a169b438c335788a3a37814e7c7bc69" args="(void *_cache, int64_t key)" -->$/;"	a
3bbfd653343e8d54e3ff8403acc718a4	html/chunk_8h.html	/^<a class="anchor" name="3bbfd653343e8d54e3ff8403acc718a4"><\/a><!-- doxytag: member="chunk.h::chunk_generate_key" ref="3bbfd653343e8d54e3ff8403acc718a4" args="(chunk *c)" -->$/;"	a
3bcea62cc9ade95d90667fb16741c793	html/nbt_8h.html	/^<a class="anchor" name="3bcea62cc9ade95d90667fb16741c793"><\/a><!-- doxytag: member="nbt.h::nbt_print" ref="3bcea62cc9ade95d90667fb16741c793" args="(nbt_tag *tag)" -->$/;"	a
3c6e3ccec21d363f86400619e53b6bed	html/structrenderer__s.html	/^<a class="anchor" name="3c6e3ccec21d363f86400619e53b6bed"><\/a><!-- doxytag: member="renderer_s::funcs" ref="3c6e3ccec21d363f86400619e53b6bed" args="" -->$/;"	a
3d3a182b2fad7a585ed47c725b6544d8	html/hardcoded_8h.html	/^<a class="anchor" name="3d3a182b2fad7a585ed47c725b6544d8"><\/a><!-- doxytag: member="hardcoded.h::color_map_hardcoded_new" ref="3d3a182b2fad7a585ed47c725b6544d8" args="(uint16_t block_count, uint8_t color_depth)" -->$/;"	a
3e50020eb23b7deeaf64eb1c52405dd0	html/hashtable_8h.html	/^<a class="anchor" name="3e50020eb23b7deeaf64eb1c52405dd0"><\/a><!-- doxytag: member="hashtable.h::hashtable_destroy" ref="3e50020eb23b7deeaf64eb1c52405dd0" args="(struct hashtable *h, int free_values)" -->$/;"	a
3ec2f63fdfb5d7946eb6188091e9bea0	html/chunk_8h.html	/^<a class="anchor" name="3ec2f63fdfb5d7946eb6188091e9bea0"><\/a><!-- doxytag: member="chunk.h::chunk_free" ref="3ec2f63fdfb5d7946eb6188091e9bea0" args="(void *doomed)" -->$/;"	a
3f2903d50e811ae1bc6e096d476047dc	html/structchunk__cache.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3f2903d50e811ae1bc6e096d476047dc"><\/a><!-- doxytag: member="chunk_cache::set" ref="3f2903d50e811ae1bc6e096d476047dc" args=")(void *, int64_t, chunk *)" -->$/;"	a
404f46f60845acdba5f470f9395cd925	html/utf8_8h.html	/^<a class="anchor" name="404f46f60845acdba5f470f9395cd925"><\/a><!-- doxytag: member="utf8.h::wchar_to_utf8" ref="404f46f60845acdba5f470f9395cd925" args="(const wchar_t *in, size_t insize, char *out, size_t outsize, int flags)" -->$/;"	a
4148a70349dd98b751115408a51fde62	html/renderer_8h.html	/^<a class="anchor" name="4148a70349dd98b751115408a51fde62"><\/a><!-- doxytag: member="renderer.h::renderer_free" ref="4148a70349dd98b751115408a51fde62" args="(renderer *doomed)" -->$/;"	a
415024f243f9d499f47cdae44e23afd4	html/hardcoded_8h.html	/^<a class="anchor" name="415024f243f9d499f47cdae44e23afd4"><\/a><!-- doxytag: member="hardcoded.h::color_map_hardcoded_assign" ref="415024f243f9d499f47cdae44e23afd4" args="(png_byte *colors, uint16_t block_type, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)" -->$/;"	a
416ab588483346263a9fac324b52998c	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="416ab588483346263a9fac324b52998c"><\/a><!-- doxytag: member="nbt.h::NBT_TAG_TYPE_SIMPLE_MAX" ref="416ab588483346263a9fac324b52998c" args="" -->$/;"	a
4272021273ee6ce86c74a572eaa97bb4	html/nbt_8h.html	/^<a class="anchor" name="4272021273ee6ce86c74a572eaa97bb4"><\/a><!-- doxytag: member="nbt.h::nbt_new_compound_tag" ref="4272021273ee6ce86c74a572eaa97bb4" args="(wchar_t *name, uint16_t name_len)" -->$/;"	a
428dc5ede9eea9e34b26d1b1e4fb4ccb	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="428dc5ede9eea9e34b26d1b1e4fb4ccb"><\/a><!-- doxytag: member="nbt_file::decompressed_size" ref="428dc5ede9eea9e34b26d1b1e4fb4ccb" args="" -->$/;"	a
42d358fc6ac94727bbaf296063eb3a27	html/hashtable__itr_8h.html	/^<a class="anchor" name="42d358fc6ac94727bbaf296063eb3a27"><\/a><!-- doxytag: member="hashtable_itr.h::hashtable_iterator" ref="42d358fc6ac94727bbaf296063eb3a27" args="(struct hashtable *h)" -->$/;"	a
436d4d9bef1f9b3182cd6dd2e34a275e	html/nbt_8h.html	/^<a class="anchor" name="436d4d9bef1f9b3182cd6dd2e34a275e"><\/a><!-- doxytag: member="nbt.h::nbt_is_valid_tag_type" ref="436d4d9bef1f9b3182cd6dd2e34a275e" args="(uint8_t tag_type)" -->$/;"	a
44179751fbc46b222f154029ea582b35	html/structtrie.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="44179751fbc46b222f154029ea582b35"><\/a><!-- doxytag: member="trie::root" ref="44179751fbc46b222f154029ea582b35" args="" -->$/;"	a
452bd87ae4cf3e94f7735762ced90e8a	html/unionu__tag__meta.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="452bd87ae4cf3e94f7735762ced90e8a"><\/a><!-- doxytag: member="u_tag_meta::child_tag_type" ref="452bd87ae4cf3e94f7735762ced90e8a" args="" -->$/;"	a
45458fbc61f0d7c1d97673f84070c0e1	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="45458fbc61f0d7c1d97673f84070c0e1"><\/a><!-- doxytag: member="nbt_file::decompressed" ref="45458fbc61f0d7c1d97673f84070c0e1" args="[CHUNK_SIZE]" -->$/;"	a
456d09a77fa2de3c732fd9c7c0c04ebe	html/chunk_8h.html	/^<a class="anchor" name="456d09a77fa2de3c732fd9c7c0c04ebe"><\/a><!-- doxytag: member="chunk.h::chunk_generate_key_from_coords" ref="456d09a77fa2de3c732fd9c7c0c04ebe" args="(int32_t coord_x, int32_t coord_z)" -->$/;"	a
47064c4c60c646e284f33520d61f6bbf	html/read__nbt_8h.html	/^<a class="anchor" name="47064c4c60c646e284f33520d61f6bbf"><\/a><!-- doxytag: member="read_nbt.h::nbt_read_gzread" ref="47064c4c60c646e284f33520d61f6bbf" args="(gzFile file, void *buffer, int length)" -->$/;"	a
4727c534657b9de386ba9e82b621774a	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4727c534657b9de386ba9e82b621774a"><\/a><!-- doxytag: member="level::largest_x" ref="4727c534657b9de386ba9e82b621774a" args="" -->$/;"	a
473e53e32991f335336526efa5763fb3	html/structhashtable__itr.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="473e53e32991f335336526efa5763fb3"><\/a><!-- doxytag: member="hashtable_itr::index" ref="473e53e32991f335336526efa5763fb3" args="" -->$/;"	a
475a2980460550121093110581e80db0	html/maths_8h.html	/^<a class="anchor" name="475a2980460550121093110581e80db0"><\/a><!-- doxytag: member="maths.h::uint64_ror" ref="475a2980460550121093110581e80db0" args="(uint64_t number, int count)" -->$/;"	a
47be2cc0ef8ac47221e4aaf9892d8836	html/cache_8h.html	/^<a class="anchor" name="47be2cc0ef8ac47221e4aaf9892d8836"><\/a><!-- doxytag: member="cache.h::cache_new" ref="47be2cc0ef8ac47221e4aaf9892d8836" args="()" -->$/;"	a
4b1002fd4f7d5376d63b3bb39d2e37ba	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4b1002fd4f7d5376d63b3bb39d2e37ba"><\/a><!-- doxytag: member="u_tag_payload::short_payload" ref="4b1002fd4f7d5376d63b3bb39d2e37ba" args="" -->$/;"	a
4b4a460b9d1feaa67c4f6cd73d4e9e25	html/structconfiguration.html	/^<a class="anchor" name="4b4a460b9d1feaa67c4f6cd73d4e9e25"><\/a><!-- doxytag: member="configuration::output_filename" ref="4b4a460b9d1feaa67c4f6cd73d4e9e25" args="" -->$/;"	a
4bf450c82e5ba696ff273889183f77ad	html/nbt_8h.html	/^<a class="anchor" name="4bf450c82e5ba696ff273889183f77ad"><\/a><!-- doxytag: member="nbt.h::nbt_name_eq" ref="4bf450c82e5ba696ff273889183f77ad" args="(void *name1, void *name2)" -->$/;"	a
4ca5ae296697d4ce9248c484d2e86fd0	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4ca5ae296697d4ce9248c484d2e86fd0"><\/a><!-- doxytag: member="u_tag_payload::double_payload" ref="4ca5ae296697d4ce9248c484d2e86fd0" args="" -->$/;"	a
4cbe18fb31214c5ba8d5402fc057ccde	html/nbt_8h.html	/^<a class="anchor" name="4cbe18fb31214c5ba8d5402fc057ccde"><\/a><!-- doxytag: member="nbt.h::nbt_print_single" ref="4cbe18fb31214c5ba8d5402fc057ccde" args="(nbt_tag *tag, int indent)" -->$/;"	a
4d97a54e684f473f6c130f037bee91e0	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4d97a54e684f473f6c130f037bee91e0"><\/a><!-- doxytag: member="chunk::height" ref="4d97a54e684f473f6c130f037bee91e0" args="" -->$/;"	a
4f356e1e46b8d4c6a82fdb294fb355ef	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4f356e1e46b8d4c6a82fdb294fb355ef"><\/a><!-- doxytag: member="nbt.h::NBT_TAG_TYPE_MIN" ref="4f356e1e46b8d4c6a82fdb294fb355ef" args="" -->$/;"	a
4f80c61446146946a1f06507182a2056	html/structlist__node__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4f80c61446146946a1f06507182a2056"><\/a><!-- doxytag: member="list_node_s::data" ref="4f80c61446146946a1f06507182a2056" args="" -->$/;"	a
5061fc36aa7428ee3a0ea1646d15b465	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5061fc36aa7428ee3a0ea1646d15b465"><\/a><!-- doxytag: member="read_nbt.h::UTF8_TRIPLE_MAX" ref="5061fc36aa7428ee3a0ea1646d15b465" args="" -->$/;"	a
50bfaaa8873d0acfc25b819ba53605ca	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="50bfaaa8873d0acfc25b819ba53605ca"><\/a><!-- doxytag: member="hashtable::value_free_func" ref="50bfaaa8873d0acfc25b819ba53605ca" args=")(void *)" -->$/;"	a
50e0d5a237bbd4bcc00baef97cfa4be1	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="50e0d5a237bbd4bcc00baef97cfa4be1"><\/a><!-- doxytag: member="hashtable::eqfn" ref="50e0d5a237bbd4bcc00baef97cfa4be1" args=")(void *k1, void *k2)" -->$/;"	a
515d0328f8692060cc53589399760803	html/nbt_8h.html	/^<a class="anchor" name="515d0328f8692060cc53589399760803"><\/a><!-- doxytag: member="nbt.h::nbt_new_list_tag" ref="515d0328f8692060cc53589399760803" args="(wchar_t *name, uint16_t name_len, int8_t child_tag_type)" -->$/;"	a
531acc5076b7bf08d9d10abbe49f6610	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="531acc5076b7bf08d9d10abbe49f6610"><\/a><!-- doxytag: member="level::largest_z" ref="531acc5076b7bf08d9d10abbe49f6610" args="" -->$/;"	a
536667b5f09c38442ac97c21ab69f535	html/generic__structs_8h.html	/^<a class="anchor" name="536667b5f09c38442ac97c21ab69f535"><\/a><!-- doxytag: member="generic_structs.h::list_unshift" ref="536667b5f09c38442ac97c21ab69f535" args="(list *haystack, void *data)" -->$/;"	a
536667b5f09c38442ac97c21ab69f535	html/linked__list_8h.html	/^<a class="anchor" name="536667b5f09c38442ac97c21ab69f535"><\/a><!-- doxytag: member="linked_list.h::list_unshift" ref="536667b5f09c38442ac97c21ab69f535" args="(list *haystack, void *data)" -->$/;"	a
552e87468d1a7875ed2cc2306ad15cdf	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="552e87468d1a7875ed2cc2306ad15cdf"><\/a><!-- doxytag: member="read_nbt.h::NBT_READ_BUFFER_SIZE" ref="552e87468d1a7875ed2cc2306ad15cdf" args="" -->$/;"	a
55f4cfe55e9a0e4b75672ff71bbc2f70	html/nbt_8h.html	/^<a class="anchor" name="55f4cfe55e9a0e4b75672ff71bbc2f70"><\/a><!-- doxytag: member="nbt.h::nbt_payload" ref="55f4cfe55e9a0e4b75672ff71bbc2f70" args="(nbt_tag *tag, uint8_t expected_type)" -->$/;"	a
56bb73a7bab874a202282bae04328ee4	html/nbt_8h.html	/^<a class="anchor" name="56bb73a7bab874a202282bae04328ee4"><\/a><!-- doxytag: member="nbt.h::nbt_new_byte_array_tag" ref="56bb73a7bab874a202282bae04328ee4" args="(uint8_t *payload_value, wchar_t *name, uint16_t name_len, int32_t length)" -->$/;"	a
56ec61bd74ef140252909e9f568b232f	html/unionu__tag__meta.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="56ec61bd74ef140252909e9f568b232f"><\/a><!-- doxytag: member="u_tag_meta::length" ref="56ec61bd74ef140252909e9f568b232f" args="" -->$/;"	a
577944042cca03e6829647e33eb90fb8	html/flat_8h.html	/^<a class="anchor" name="577944042cca03e6829647e33eb90fb8"><\/a><!-- doxytag: member="flat.h::renderer_flat_dimensions" ref="577944042cca03e6829647e33eb90fb8" args="(int *width, int *height)" -->$/;"	a
577be03003c2e2f09203b620eb835506	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="577be03003c2e2f09203b620eb835506"><\/a><!-- doxytag: member="nbt.h::nbt_new_byte_tag" ref="577be03003c2e2f09203b620eb835506" args="(name, name_len, payload)" -->$/;"	a
596aa63700ba3605a016559837e9f160	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="596aa63700ba3605a016559837e9f160"><\/a><!-- doxytag: member="read_nbt.h::UTF8_TRIPLE_MIN" ref="596aa63700ba3605a016559837e9f160" args="" -->$/;"	a
59eb5d88a02510eb1104ee68f6292aef	html/linked__list_8h.html	/^<a class="anchor" name="59eb5d88a02510eb1104ee68f6292aef"><\/a><!-- doxytag: member="linked_list.h::list_new" ref="59eb5d88a02510eb1104ee68f6292aef" args="(list_free_func node_free_func)" -->$/;"	a
5a58d322e3c60fb8f0de95f1ce574795	html/structnbt__tag.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5a58d322e3c60fb8f0de95f1ce574795"><\/a><!-- doxytag: member="nbt_tag::name" ref="5a58d322e3c60fb8f0de95f1ce574795" args="" -->$/;"	a
5d2e5055afbc3a904b2a9c1e1a156f67	html/structcolor__map.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5d2e5055afbc3a904b2a9c1e1a156f67"><\/a><!-- doxytag: member="color_map::block_count" ref="5d2e5055afbc3a904b2a9c1e1a156f67" args="" -->$/;"	a
5d306dd8d6244f0cba7e379d9301d482	html/structcolor__map__s.html	/^<a class="anchor" name="5d306dd8d6244f0cba7e379d9301d482"><\/a><!-- doxytag: member="color_map_s::colors" ref="5d306dd8d6244f0cba7e379d9301d482" args="" -->$/;"	a
5d411745629a5bee438464fe67e6b4fa	html/read__nbt_8h.html	/^<a class="anchor" name="5d411745629a5bee438464fe67e6b4fa"><\/a><!-- doxytag: member="read_nbt.h::nbt_read" ref="5d411745629a5bee438464fe67e6b4fa" args="(gzFile file, int force_tag_type)" -->$/;"	a
5d67d050ec18207142cd2c24f774bfb1	html/structcolor__map.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5d67d050ec18207142cd2c24f774bfb1"><\/a><!-- doxytag: member="color_map::color_depth" ref="5d67d050ec18207142cd2c24f774bfb1" args="" -->$/;"	a
5e06f5d9b0166b7d24454f228f31ede2	html/renderer_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5e06f5d9b0166b7d24454f228f31ede2"><\/a><!-- doxytag: member="renderer.h::RENDERER_CACHE_BUCKETS" ref="5e06f5d9b0166b7d24454f228f31ede2" args="" -->$/;"	a
600340dd9622835efbbd25876afae9ee	html/hashtable__private_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="600340dd9622835efbbd25876afae9ee"><\/a><!-- doxytag: member="hashtable_private.h::hash" ref="600340dd9622835efbbd25876afae9ee" args="(struct hashtable *h, void *k)" -->$/;"	a
627b1b93dc14f0960397f0412f52d3f7	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="627b1b93dc14f0960397f0412f52d3f7"><\/a><!-- doxytag: member="level::input_path" ref="627b1b93dc14f0960397f0412f52d3f7" args="" -->$/;"	a
62f2509a5b2b4a2daa6047af1363e263	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="62f2509a5b2b4a2daa6047af1363e263"><\/a><!-- doxytag: member="u_payload::short_payload" ref="62f2509a5b2b4a2daa6047af1363e263" args="" -->$/;"	a
6689714c868285a8ff4e7d1110361e0f	html/generic__structs_8h.html	/^<a class="anchor" name="6689714c868285a8ff4e7d1110361e0f"><\/a><!-- doxytag: member="generic_structs.h::list_push_node" ref="6689714c868285a8ff4e7d1110361e0f" args="(list *haystack, list_node *needle)" -->$/;"	a
6689714c868285a8ff4e7d1110361e0f	html/linked__list_8h.html	/^<a class="anchor" name="6689714c868285a8ff4e7d1110361e0f"><\/a><!-- doxytag: member="linked_list.h::list_push_node" ref="6689714c868285a8ff4e7d1110361e0f" args="(list *haystack, list_node *needle)" -->$/;"	a
673332bfd02dd1f1840c6ba8309cf4d1	html/generic__structs_8h.html	/^<a class="anchor" name="673332bfd02dd1f1840c6ba8309cf4d1"><\/a><!-- doxytag: member="generic_structs.h::list_pop_node" ref="673332bfd02dd1f1840c6ba8309cf4d1" args="(list *haystack)" -->$/;"	a
673332bfd02dd1f1840c6ba8309cf4d1	html/linked__list_8h.html	/^<a class="anchor" name="673332bfd02dd1f1840c6ba8309cf4d1"><\/a><!-- doxytag: member="linked_list.h::list_pop_node" ref="673332bfd02dd1f1840c6ba8309cf4d1" args="(list *haystack)" -->$/;"	a
69c40b5a695d062154c7ce7d7f9c7b42	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="69c40b5a695d062154c7ce7d7f9c7b42"><\/a><!-- doxytag: member="chunk::coord_z" ref="69c40b5a695d062154c7ce7d7f9c7b42" args="" -->$/;"	a
6a8e817d4147b3c508522e417502fdb5	html/maths_8h.html	/^<a class="anchor" name="6a8e817d4147b3c508522e417502fdb5"><\/a><!-- doxytag: member="maths.h::base36tobase10" ref="6a8e817d4147b3c508522e417502fdb5" args="(char *base36, int length)" -->$/;"	a
6b4a539a1bfe5f752b86b168b057261c	html/generic__structs_8h.html	/^<a class="anchor" name="6b4a539a1bfe5f752b86b168b057261c"><\/a><!-- doxytag: member="generic_structs.h::list_node_free" ref="6b4a539a1bfe5f752b86b168b057261c" args="(list_node *doomed, void(*node_free_func)(void *))" -->$/;"	a
6b631a99ab3481e098dcc7228186b20c	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6b631a99ab3481e098dcc7228186b20c"><\/a><!-- doxytag: member="read_nbt.h::UTF8_MASK_PAYLOAD" ref="6b631a99ab3481e098dcc7228186b20c" args="" -->$/;"	a
6ba6b7d14932763dcb0df242b5ff2dfd	html/structentry.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6ba6b7d14932763dcb0df242b5ff2dfd"><\/a><!-- doxytag: member="entry::next" ref="6ba6b7d14932763dcb0df242b5ff2dfd" args="" -->$/;"	a
6c655330cd0b8be34cab053007f9e19f	html/structcache__slab.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6c655330cd0b8be34cab053007f9e19f"><\/a><!-- doxytag: member="cache_slab::chunks" ref="6c655330cd0b8be34cab053007f9e19f" args="" -->$/;"	a
6f1a04d5d9a7d0dab3bceb3e16010263	html/config_8h.html	/^<a class="anchor" name="6f1a04d5d9a7d0dab3bceb3e16010263"><\/a><!-- doxytag: member="config.h::free_config" ref="6f1a04d5d9a7d0dab3bceb3e16010263" args="(configuration *config)" -->$/;"	a
6f2e2fb46ac29b62be41989153470ce3	html/structlist.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6f2e2fb46ac29b62be41989153470ce3"><\/a><!-- doxytag: member="list::start" ref="6f2e2fb46ac29b62be41989153470ce3" args="" -->$/;"	a
6f922f4fd648787723c1af441530dcfd	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6f922f4fd648787723c1af441530dcfd"><\/a><!-- doxytag: member="read_nbt.h::UTF8_MASK_QUAD" ref="6f922f4fd648787723c1af441530dcfd" args="" -->$/;"	a
6f9ae23de9ad9205b39020ff8eed6fc8	html/config_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6f9ae23de9ad9205b39020ff8eed6fc8"><\/a><!-- doxytag: member="config.h::MINEMAP_VERSION" ref="6f9ae23de9ad9205b39020ff8eed6fc8" args="" -->$/;"	a
70205478af98a0cb4ccf5ae6c7bc8843	html/patricia_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="70205478af98a0cb4ccf5ae6c7bc8843"><\/a><!-- doxytag: member="patricia.h::trie_traverse_func" ref="70205478af98a0cb4ccf5ae6c7bc8843" args=")(trie_node *)" -->$/;"	a
70205478af98a0cb4ccf5ae6c7bc8843	html/trie_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="70205478af98a0cb4ccf5ae6c7bc8843"><\/a><!-- doxytag: member="trie.h::trie_traverse_func" ref="70205478af98a0cb4ccf5ae6c7bc8843" args=")(trie_node *)" -->$/;"	a
7364429354e580019b0122c142b7dbf0	html/renderer_8h.html	/^<a class="anchor" name="7364429354e580019b0122c142b7dbf0"><\/a><!-- doxytag: member="renderer.h::renderer_errors" ref="7364429354e580019b0122c142b7dbf0" args="" -->$/;"	a
7364429354e580019b0122c142b7dbf00693ad527ada76810ab1367422e6bb93	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf00693ad527ada76810ab1367422e6bb93"><\/a><!-- doxytag: member="RENDER_MEM_PNGWRITE" ref="7364429354e580019b0122c142b7dbf00693ad527ada76810ab1367422e6bb93" args="" -->RENDER_MEM_PNGWRITE<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf031ed1c7df2672cf37eb74d7aeecfd773	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf031ed1c7df2672cf37eb74d7aeecfd773"><\/a><!-- doxytag: member="RENDER_ERR_DIM" ref="7364429354e580019b0122c142b7dbf031ed1c7df2672cf37eb74d7aeecfd773" args="" -->RENDER_ERR_DIM<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf03611fe8f74dcbc2e3ec8c2ccda1113e9	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf03611fe8f74dcbc2e3ec8c2ccda1113e9"><\/a><!-- doxytag: member="RENDER_MEM_ROW" ref="7364429354e580019b0122c142b7dbf03611fe8f74dcbc2e3ec8c2ccda1113e9" args="" -->RENDER_MEM_ROW<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf0bcacc79b5a4707f3346d082ab5f84445	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf0bcacc79b5a4707f3346d082ab5f84445"><\/a><!-- doxytag: member="RENDER_MEM_PNGINFO" ref="7364429354e580019b0122c142b7dbf0bcacc79b5a4707f3346d082ab5f84445" args="" -->RENDER_MEM_PNGINFO<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf0e0785ff4a09c33894ebea219d673d596	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf0e0785ff4a09c33894ebea219d673d596"><\/a><!-- doxytag: member="RENDER_ERR_PNG" ref="7364429354e580019b0122c142b7dbf0e0785ff4a09c33894ebea219d673d596" args="" -->RENDER_ERR_PNG<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf0eee07e41413c56682b4c8105f6894661	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf0eee07e41413c56682b4c8105f6894661"><\/a><!-- doxytag: member="RENDER_ERR_FILE" ref="7364429354e580019b0122c142b7dbf0eee07e41413c56682b4c8105f6894661" args="" -->RENDER_ERR_FILE<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf0f3192c393df8ddbabfbbd797a8393804	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf0f3192c393df8ddbabfbbd797a8393804"><\/a><!-- doxytag: member="RENDER_OK" ref="7364429354e580019b0122c142b7dbf0f3192c393df8ddbabfbbd797a8393804" args="" -->RENDER_OK<\/em>&nbsp;<\/td><td>$/;"	a
7364429354e580019b0122c142b7dbf0fc2783d29fe6cf4454b6932895c88500	html/renderer_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="7364429354e580019b0122c142b7dbf0fc2783d29fe6cf4454b6932895c88500"><\/a><!-- doxytag: member="RENDER_ERR_SANITY" ref="7364429354e580019b0122c142b7dbf0fc2783d29fe6cf4454b6932895c88500" args="" -->RENDER_ERR_SANITY<\/em>&nbsp;<\/td><td>$/;"	a
73fe02a5a9c40e4b88da35367b415be8	html/structnbt__tag.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="73fe02a5a9c40e4b88da35367b415be8"><\/a><!-- doxytag: member="nbt_tag::payload" ref="73fe02a5a9c40e4b88da35367b415be8" args="" -->$/;"	a
75ded253a17eb4c19eb91f3d210ad23b	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="75ded253a17eb4c19eb91f3d210ad23b"><\/a><!-- doxytag: member="renderer::tile_z" ref="75ded253a17eb4c19eb91f3d210ad23b" args="" -->$/;"	a
7676821fa96581846e04e69d0d0bfbb1	html/structrenderer__s.html	/^<a class="anchor" name="7676821fa96581846e04e69d0d0bfbb1"><\/a><!-- doxytag: member="renderer_s::output_path" ref="7676821fa96581846e04e69d0d0bfbb1" args="" -->$/;"	a
789b42158b836bb5e2a1521b9920e02e	html/maths_8h.html	/^<a class="anchor" name="789b42158b836bb5e2a1521b9920e02e"><\/a><!-- doxytag: member="maths.h::modulo" ref="789b42158b836bb5e2a1521b9920e02e" args="(int number, int divisor)" -->$/;"	a
78fa0275b9b0f3a1903b3a5622658aca	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="78fa0275b9b0f3a1903b3a5622658aca"><\/a><!-- doxytag: member="hashtable::table" ref="78fa0275b9b0f3a1903b3a5622658aca" args="" -->$/;"	a
79270f72d16b91ad8089bfee8dc5baed	html/structtrie__node__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="79270f72d16b91ad8089bfee8dc5baed"><\/a><!-- doxytag: member="trie_node_s::children" ref="79270f72d16b91ad8089bfee8dc5baed" args="" -->$/;"	a
792a4f814d8d0c2106c6a63b0abf666d	html/structlist__node__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="792a4f814d8d0c2106c6a63b0abf666d"><\/a><!-- doxytag: member="list_node_s::next" ref="792a4f814d8d0c2106c6a63b0abf666d" args="" -->$/;"	a
7b8dd91935fe497408d7b5c8e6bd9489	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7b8dd91935fe497408d7b5c8e6bd9489"><\/a><!-- doxytag: member="nbt.h::vfp" ref="7b8dd91935fe497408d7b5c8e6bd9489" args=")(void *)" -->$/;"	a
7b9e8e7584817fa0957436e3b14ad70f	html/structconfiguration.html	/^<a class="anchor" name="7b9e8e7584817fa0957436e3b14ad70f"><\/a><!-- doxytag: member="configuration::input_path" ref="7b9e8e7584817fa0957436e3b14ad70f" args="" -->$/;"	a
7c9f682b99d4980b7c758cb4f4aa4d67	html/structchunk__cache.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7c9f682b99d4980b7c758cb4f4aa4d67"><\/a><!-- doxytag: member="chunk_cache::get" ref="7c9f682b99d4980b7c758cb4f4aa4d67" args=")(void *, int64_t)" -->$/;"	a
7dd7516048ddf098b17b069c4b562e22	html/config_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7dd7516048ddf098b17b069c4b562e22"><\/a><!-- doxytag: member="config.h::CONFIG_BUFFER_SIZE" ref="7dd7516048ddf098b17b069c4b562e22" args="" -->$/;"	a
7f36b09abe5227e25436c83fcd07d6e3	html/nbt_8h.html	/^<a class="anchor" name="7f36b09abe5227e25436c83fcd07d6e3"><\/a><!-- doxytag: member="nbt.h::nbt_free_tag" ref="7f36b09abe5227e25436c83fcd07d6e3" args="(nbt_tag *doomed)" -->$/;"	a
7f63cc5160a918618f0233c60d64d228	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7f63cc5160a918618f0233c60d64d228"><\/a><!-- doxytag: member="read_nbt.h::UTF8_CONT_MIN" ref="7f63cc5160a918618f0233c60d64d228" args="" -->$/;"	a
811c0424c32b12a7b111ca0fa45b9861	html/structlist.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="811c0424c32b12a7b111ca0fa45b9861"><\/a><!-- doxytag: member="list::end" ref="811c0424c32b12a7b111ca0fa45b9861" args="" -->$/;"	a
814b6c9f6aaa9d0118f2223f83c2f604	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="814b6c9f6aaa9d0118f2223f83c2f604"><\/a><!-- doxytag: member="chunk::data" ref="814b6c9f6aaa9d0118f2223f83c2f604" args="" -->$/;"	a
817ffd90f97a721d167b6cf5206f858e	html/linked__list_8h.html	/^<a class="anchor" name="817ffd90f97a721d167b6cf5206f858e"><\/a><!-- doxytag: member="linked_list.h::linked_list_errors" ref="817ffd90f97a721d167b6cf5206f858e" args="" -->$/;"	a
817ffd90f97a721d167b6cf5206f858e0ccffb7bf74c5155403e778b0a749db3	html/linked__list_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="817ffd90f97a721d167b6cf5206f858e0ccffb7bf74c5155403e778b0a749db3"><\/a><!-- doxytag: member="E_LINKED_LIST_OUT_OF_MEM" ref="817ffd90f97a721d167b6cf5206f858e0ccffb7bf74c5155403e778b0a749db3" args="" -->E_LINKED_LIST_OUT_OF_MEM<\/em>&nbsp;<\/td><td>$/;"	a
817ffd90f97a721d167b6cf5206f858e3a4d9dca8b09592313a36683d97edb4e	html/linked__list_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="817ffd90f97a721d167b6cf5206f858e3a4d9dca8b09592313a36683d97edb4e"><\/a><!-- doxytag: member="E_LINKED_LIST_NULL_NEEDLE" ref="817ffd90f97a721d167b6cf5206f858e3a4d9dca8b09592313a36683d97edb4e" args="" -->E_LINKED_LIST_NULL_NEEDLE<\/em>&nbsp;<\/td><td>$/;"	a
817ffd90f97a721d167b6cf5206f858ee8b5f0c52febd1d93150f88fa0f4dcd0	html/linked__list_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="817ffd90f97a721d167b6cf5206f858ee8b5f0c52febd1d93150f88fa0f4dcd0"><\/a><!-- doxytag: member="E_LINKED_LIST_NULL_HAYSTACK" ref="817ffd90f97a721d167b6cf5206f858ee8b5f0c52febd1d93150f88fa0f4dcd0" args="" -->E_LINKED_LIST_NULL_HAYSTACK<\/em>&nbsp;<\/td><td>$/;"	a
81b57695f6d3fd01342e3f81be595855	html/hashtable__itr_8h.html	/^<a class="anchor" name="81b57695f6d3fd01342e3f81be595855"><\/a><!-- doxytag: member="hashtable_itr.h::hashtable_iterator_remove" ref="81b57695f6d3fd01342e3f81be595855" args="(struct hashtable_itr *itr)" -->$/;"	a
822f586b3a262948cfe467bc9dc38396	html/hardcoded_8h.html	/^<a class="anchor" name="822f586b3a262948cfe467bc9dc38396"><\/a><!-- doxytag: member="hardcoded.h::color_map_hardcoded_get" ref="822f586b3a262948cfe467bc9dc38396" args="(void *_map, uint16_t block_type)" -->$/;"	a
836672bb87bfe493e38f3fa45bf4c28c	html/structhashtable__itr.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="836672bb87bfe493e38f3fa45bf4c28c"><\/a><!-- doxytag: member="hashtable_itr::parent" ref="836672bb87bfe493e38f3fa45bf4c28c" args="" -->$/;"	a
8390ec3b88a7f840dbc5c80dbc15d1a8	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8390ec3b88a7f840dbc5c80dbc15d1a8"><\/a><!-- doxytag: member="nbt.h::nbt_new_double_tag" ref="8390ec3b88a7f840dbc5c80dbc15d1a8" args="(name, name_len, payload)" -->$/;"	a
859f05e031ec6ba684f019f96ac50d57	html/chunk_8h.html	/^<a class="anchor" name="859f05e031ec6ba684f019f96ac50d57"><\/a><!-- doxytag: member="chunk.h::chunk_hash" ref="859f05e031ec6ba684f019f96ac50d57" args="(void *_c)" -->$/;"	a
8610b367574a788031fac919b1952e3e	html/structnbt__tag.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8610b367574a788031fac919b1952e3e"><\/a><!-- doxytag: member="nbt_tag::type" ref="8610b367574a788031fac919b1952e3e" args="" -->$/;"	a
8755dff8d2db5747742fb63f1aec6ff7	html/structnbt__tag.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8755dff8d2db5747742fb63f1aec6ff7"><\/a><!-- doxytag: member="nbt_tag::meta" ref="8755dff8d2db5747742fb63f1aec6ff7" args="" -->$/;"	a
887414574e7a8af38766fd5203f9e7c2	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="887414574e7a8af38766fd5203f9e7c2"><\/a><!-- doxytag: member="nbt.h::nbt_new_float_tag" ref="887414574e7a8af38766fd5203f9e7c2" args="(name, name_len, payload)" -->$/;"	a
88ac8aeba8c37680a5d5337fbd74e86d	html/generic__structs_8h.html	/^<a class="anchor" name="88ac8aeba8c37680a5d5337fbd74e86d"><\/a><!-- doxytag: member="generic_structs.h::list_free" ref="88ac8aeba8c37680a5d5337fbd74e86d" args="(list *doomed)" -->$/;"	a
88ac8aeba8c37680a5d5337fbd74e86d	html/linked__list_8h.html	/^<a class="anchor" name="88ac8aeba8c37680a5d5337fbd74e86d"><\/a><!-- doxytag: member="linked_list.h::list_free" ref="88ac8aeba8c37680a5d5337fbd74e86d" args="(list *doomed)" -->$/;"	a
898cc0373b4c5fa43cdd77374c6b3ac3	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="898cc0373b4c5fa43cdd77374c6b3ac3"><\/a><!-- doxytag: member="chunk::blocklight" ref="898cc0373b4c5fa43cdd77374c6b3ac3" args="" -->$/;"	a
8b2fd50e2fb15e5179f85a2f5addee76	html/structcolor__map.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8b2fd50e2fb15e5179f85a2f5addee76"><\/a><!-- doxytag: member="color_map::get" ref="8b2fd50e2fb15e5179f85a2f5addee76" args="" -->$/;"	a
8b7771bbb0e029e9200b3a7ec9816204	html/colors_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8b7771bbb0e029e9200b3a7ec9816204"><\/a><!-- doxytag: member="colors.h::BLOCK_COUNT" ref="8b7771bbb0e029e9200b3a7ec9816204" args="" -->$/;"	a
8bce96b78b5e92b2701abfb884c1c183	html/linked__list_8h.html	/^<a class="anchor" name="8bce96b78b5e92b2701abfb884c1c183"><\/a><!-- doxytag: member="linked_list.h::list_node_free" ref="8bce96b78b5e92b2701abfb884c1c183" args="(list_node *doomed, list_free_func node_free_func)" -->$/;"	a
8c2eaf6ef42a9ecd11b8e9c7451783b4	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8c2eaf6ef42a9ecd11b8e9c7451783b4"><\/a><!-- doxytag: member="renderer::funcs" ref="8c2eaf6ef42a9ecd11b8e9c7451783b4" args="" -->$/;"	a
8c866d404117ace78fc34ed4a373d3e7	html/structtrie.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8c866d404117ace78fc34ed4a373d3e7"><\/a><!-- doxytag: member="trie::free_func" ref="8c866d404117ace78fc34ed4a373d3e7" args="" -->$/;"	a
8c883760bfe0303d7e15edcf682e8093	html/slab_8h.html	/^<a class="anchor" name="8c883760bfe0303d7e15edcf682e8093"><\/a><!-- doxytag: member="slab.h::cache_slab_new" ref="8c883760bfe0303d7e15edcf682e8093" args="(uint32_t size)" -->$/;"	a
8ccb9ce0cb75c4ac033c8045adec5dd5	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8ccb9ce0cb75c4ac033c8045adec5dd5"><\/a><!-- doxytag: member="nbt.h::NBT_TAG_TYPE_MAX" ref="8ccb9ce0cb75c4ac033c8045adec5dd5" args="" -->$/;"	a
8cfe761dee950430f70b9e01c31efe0e	html/patricia_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8cfe761dee950430f70b9e01c31efe0e"><\/a><!-- doxytag: member="patricia.h::trie_node" ref="8cfe761dee950430f70b9e01c31efe0e" args="" -->$/;"	a
8cfe761dee950430f70b9e01c31efe0e	html/trie_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8cfe761dee950430f70b9e01c31efe0e"><\/a><!-- doxytag: member="trie.h::trie_node" ref="8cfe761dee950430f70b9e01c31efe0e" args="" -->$/;"	a
8e14c0f506875ddf721fb5ab0c89b7e3	html/level_8h.html	/^<a class="anchor" name="8e14c0f506875ddf721fb5ab0c89b7e3"><\/a><!-- doxytag: member="level.h::level_get_dimensions" ref="8e14c0f506875ddf721fb5ab0c89b7e3" args="(level *lvl)" -->$/;"	a
8e46ddd2941fc9db1bbb1e34b423fd2a	html/structconfiguration.html	/^<a class="anchor" name="8e46ddd2941fc9db1bbb1e34b423fd2a"><\/a><!-- doxytag: member="configuration::tile_z" ref="8e46ddd2941fc9db1bbb1e34b423fd2a" args="" -->$/;"	a
8fe8bfc748dfab9e0a9ed4664e9ac83c	html/patricia_8h.html	/^<a class="anchor" name="8fe8bfc748dfab9e0a9ed4664e9ac83c"><\/a><!-- doxytag: member="patricia.h::trie_insert_flags" ref="8fe8bfc748dfab9e0a9ed4664e9ac83c" args="" -->$/;"	a
8fe8bfc748dfab9e0a9ed4664e9ac83c	html/trie_8h.html	/^<a class="anchor" name="8fe8bfc748dfab9e0a9ed4664e9ac83c"><\/a><!-- doxytag: member="trie.h::trie_insert_flags" ref="8fe8bfc748dfab9e0a9ed4664e9ac83c" args="" -->$/;"	a
8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5"><\/a><!-- doxytag: member="TRIE_INSERT_FLAG_SKIP" ref="8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5" args="" -->TRIE_INSERT_FLAG_SKIP<\/em>&nbsp;<\/td><td>$/;"	a
8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5"><\/a><!-- doxytag: member="TRIE_INSERT_FLAG_SKIP" ref="8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5" args="" -->TRIE_INSERT_FLAG_SKIP<\/em>&nbsp;<\/td><td>$/;"	a
8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673"><\/a><!-- doxytag: member="TRIE_INSERT_FLAG_OVERWRITE" ref="8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673" args="" -->TRIE_INSERT_FLAG_OVERWRITE<\/em>&nbsp;<\/td><td>$/;"	a
8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673"><\/a><!-- doxytag: member="TRIE_INSERT_FLAG_OVERWRITE" ref="8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673" args="" -->TRIE_INSERT_FLAG_OVERWRITE<\/em>&nbsp;<\/td><td>$/;"	a
907d520433e02e1ab4ca01467d803884	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="907d520433e02e1ab4ca01467d803884"><\/a><!-- doxytag: member="chunk::skylight" ref="907d520433e02e1ab4ca01467d803884" args="" -->$/;"	a
92e734bbcafc3535c3b34cbdc188b8a3	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="92e734bbcafc3535c3b34cbdc188b8a3"><\/a><!-- doxytag: member="u_tag_payload::list_payload" ref="92e734bbcafc3535c3b34cbdc188b8a3" args="" -->$/;"	a
933518152dc53150f1eaacacdbe869ec	html/structchunk__cache.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="933518152dc53150f1eaacacdbe869ec"><\/a><!-- doxytag: member="chunk_cache::free" ref="933518152dc53150f1eaacacdbe869ec" args=")(void *)" -->$/;"	a
93903160e0e77d592d689623417873b8	html/slab_8h.html	/^<a class="anchor" name="93903160e0e77d592d689623417873b8"><\/a><!-- doxytag: member="slab.h::cache_slab_set" ref="93903160e0e77d592d689623417873b8" args="(void *_cache, int64_t key, chunk *payload)" -->$/;"	a
9418993f76a8d9b7fa21e44f218566d1	html/structentry.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9418993f76a8d9b7fa21e44f218566d1"><\/a><!-- doxytag: member="entry::k" ref="9418993f76a8d9b7fa21e44f218566d1" args="" -->$/;"	a
9481de9684a4d9bfe92d551a5485f2ec	html/renderer_8h.html	/^<a class="anchor" name="9481de9684a4d9bfe92d551a5485f2ec"><\/a><!-- doxytag: member="renderer.h::renderer_sanity_check" ref="9481de9684a4d9bfe92d551a5485f2ec" args="(renderer *r)" -->$/;"	a
956bd0c241b2f319177e1cffab770741	html/chunk_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="956bd0c241b2f319177e1cffab770741"><\/a><!-- doxytag: member="chunk.h::CHUNK_SIZE_Z" ref="956bd0c241b2f319177e1cffab770741" args="" -->$/;"	a
969fab11a17060328f7260751254dfc3	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="969fab11a17060328f7260751254dfc3"><\/a><!-- doxytag: member="read_nbt.h::UTF8_DOUBLE_MAX" ref="969fab11a17060328f7260751254dfc3" args="" -->$/;"	a
97569901695c7cfff25c7669e0899ef9	html/renderer_8h.html	/^<a class="anchor" name="97569901695c7cfff25c7669e0899ef9"><\/a><!-- doxytag: member="renderer.h::renderer_calc_gamma" ref="97569901695c7cfff25c7669e0899ef9" args="(chunk *c, int16_t coord_x, int16_t coord_y, int16_t coord_z, float sky_percent, float block_percent)" -->$/;"	a
9850aa13dae18be5e07407338bb6a9f7	html/config_8h.html	/^<a class="anchor" name="9850aa13dae18be5e07407338bb6a9f7"><\/a><!-- doxytag: member="config.h::config_error_message" ref="9850aa13dae18be5e07407338bb6a9f7" args="(int error_code)" -->$/;"	a
98d9dd0db576520d59484b85e015921a	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="98d9dd0db576520d59484b85e015921a"><\/a><!-- doxytag: member="read_nbt.h::UTF8_DOUBLE_MIN" ref="98d9dd0db576520d59484b85e015921a" args="" -->$/;"	a
9938119d6ca963d593ead701bb9d5add	html/hashtable_8h.html	/^<a class="anchor" name="9938119d6ca963d593ead701bb9d5add"><\/a><!-- doxytag: member="hashtable.h::hashtable_count" ref="9938119d6ca963d593ead701bb9d5add" args="(struct hashtable *h)" -->$/;"	a
99d04096416dcce19c249879ddc413d4	html/hashtable__itr_8h.html	/^<a class="anchor" name="99d04096416dcce19c249879ddc413d4"><\/a><!-- doxytag: member="hashtable_itr.h::hashtable_iterator_key" ref="99d04096416dcce19c249879ddc413d4" args="(struct hashtable_itr *i)" -->$/;"	a
9a5213c3908ba24e300f6106c86f1d5b	html/renderer_8h.html	/^<a class="anchor" name="9a5213c3908ba24e300f6106c86f1d5b"><\/a><!-- doxytag: member="renderer.h::renderer_new" ref="9a5213c3908ba24e300f6106c86f1d5b" args="(level *lvl, char *output_path, color_map *map, renderer_funcs *funcs, chunk_cache *cache)" -->$/;"	a
9c74adc8d1cbf9db3eef8c1413b77dc9	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9c74adc8d1cbf9db3eef8c1413b77dc9"><\/a><!-- doxytag: member="read_nbt.h::NBT_READ_UTF8_BUFFER_SIZE" ref="9c74adc8d1cbf9db3eef8c1413b77dc9" args="" -->$/;"	a
9d8ed6f67c20f29c9e695138dedc8fa3	html/structhashtable__itr.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9d8ed6f67c20f29c9e695138dedc8fa3"><\/a><!-- doxytag: member="hashtable_itr::e" ref="9d8ed6f67c20f29c9e695138dedc8fa3" args="" -->$/;"	a
9fe770fd605578bc1d75fb0cd7f02bd9	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9fe770fd605578bc1d75fb0cd7f02bd9"><\/a><!-- doxytag: member="u_payload::float_payload" ref="9fe770fd605578bc1d75fb0cd7f02bd9" args="" -->$/;"	a
BASE36_INVALID_CHAR	includes/maths.h	/^    BASE36_INVALID_CHAR,    \/**< An invalid character was encountered *\/$/;"	e	enum:base36_error_codes
BASE36_OK	includes/maths.h	/^    BASE36_OK,              \/**< Everything is OK *\/$/;"	e	enum:base36_error_codes
BLOCK_COLOR_DEPTH	includes/colors.h	16;"	d
BLOCK_COUNT	includes/colors.h	13;"	d
CACHES_SLAB_H	includes/caches/slab.h	6;"	d
CACHE_H	includes/cache.h	5;"	d
CC	Makefile	/^CC        = gcc$/;"	m
CCFLAGS	Makefile	/^CCFLAGS   = -O -Iincludes -g $/;"	m
CHUNK_ERR_CONSIST	includes/chunk.h	/^    CHUNK_ERR_CONSIST,  \/**< \\brief An inconsistency occured between the coords$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_COORDS	includes/chunk.h	/^    CHUNK_ERR_COORDS,   \/**< \\brief Could not read the chunk coordinates from$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_HEIGHT	includes/chunk.h	/^    CHUNK_ERR_HEIGHT,   \/**< \\brief The length of map data was not consistent$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_INPUT	includes/chunk.h	/^    CHUNK_ERR_INPUT,    \/**< \\brief Was not able to open the input file *\/$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_OK	includes/chunk.h	/^    CHUNK_ERR_OK,       \/**< \\brief Everything is OK *\/$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_OOM	includes/chunk.h	/^    CHUNK_ERR_OOM,      \/**< \\brief Could not allocate memory *\/$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_TAG	includes/chunk.h	/^    CHUNK_ERR_TAG,      \/**< \\brief Parsing the tag failed *\/$/;"	e	enum:chunk_new_error_codes
CHUNK_ERR_TAG_FORMAT	includes/chunk.h	/^    CHUNK_ERR_TAG_FORMAT, \/**<      The format of the tag was incorrect. *\/$/;"	e	enum:chunk_new_error_codes
CHUNK_H	includes/chunk.h	7;"	d
CHUNK_SIZE_AREA	includes/chunk.h	17;"	d
CHUNK_SIZE_X	includes/chunk.h	13;"	d
CHUNK_SIZE_Z	includes/chunk.h	15;"	d
COLORS_H	includes/colors.h	6;"	d
COLOR_ALPHA_OFFSET	includes/renderer.h	24;"	d
COLOR_MAP_ERR_BLOCK	includes/colors.h	/^    COLOR_MAP_ERR_BLOCK,    \/**< \\brief An invalid block type was passed *\/$/;"	e	enum:color_map_errors
COLOR_MAP_ERR_NODEST	includes/colors.h	/^    COLOR_MAP_ERR_NODEST,   \/**< \\brief No destination was passed *\/$/;"	e	enum:color_map_errors
COLOR_MAP_ERR_NOMAP	includes/colors.h	/^    COLOR_MAP_ERR_NOMAP,    \/**< \\brief No color_map was passed *\/$/;"	e	enum:color_map_errors
COLOR_MAP_HARDCODED_H	includes/colors/hardcoded.h	5;"	d
COLOR_MAP_OK	includes/colors.h	/^    COLOR_MAP_OK,           \/**< \\brief Everything is OK *\/$/;"	e	enum:color_map_errors
CONFIG_BUFFER_SIZE	includes/config.h	10;"	d
CONFIG_ERROR_LOCALTIME	includes/config.h	/^    CONFIG_ERROR_LOCALTIME$/;"	e	enum:config_errors
CONFIG_ERROR_NO_INPUT	includes/config.h	/^    CONFIG_ERROR_NO_INPUT = 1, $/;"	e	enum:config_errors
CONFIG_ERROR_NO_MEM	includes/config.h	/^    CONFIG_ERROR_NO_MEM, $/;"	e	enum:config_errors
CONFIG_ERROR_PRINT_HELP	includes/config.h	/^    CONFIG_ERROR_PRINT_HELP, $/;"	e	enum:config_errors
CONFIG_ERROR_PRINT_VERSION	includes/config.h	/^    CONFIG_ERROR_PRINT_VERSION,$/;"	e	enum:config_errors
CONFIG_H	includes/config.h	5;"	d
CTAGS	Makefile	/^CTAGS     = ctags -R$/;"	m
DOXYFILE	Makefile	/^DOXYFILE  = Doxyfile$/;"	m
DOXYGEN	Makefile	/^DOXYGEN   = doxygen$/;"	m
EXEC_NAME	Makefile	/^EXEC_NAME = minemap$/;"	m
E_LINKED_LIST_NULL_HAYSTACK	includes/linked_list.h	/^    E_LINKED_LIST_NULL_HAYSTACK,   \/**< \\brief Thrown when a null haystack is passed *\/$/;"	e	enum:linked_list_errors
E_LINKED_LIST_NULL_NEEDLE	includes/linked_list.h	/^    E_LINKED_LIST_NULL_NEEDLE = 1, \/**< \\brief Thrown when a null needle is passed *\/$/;"	e	enum:linked_list_errors
E_LINKED_LIST_OUT_OF_MEM	includes/linked_list.h	/^    E_LINKED_LIST_OUT_OF_MEM       \/**< \\brief Thrown when malloc fails to allocate memory *\/$/;"	e	enum:linked_list_errors
GENERIC_STRUCTS_H	includes/linked_list.h	5;"	d
HEADERS	Makefile	/^HEADERS = $(wildcard includes\/*.h) $(wildcard includes\/renderers\/*.h) $(wildcard includes\/colors\/*.h) $(wildcard includes\/caches\/*.h)$/;"	m
HEX_CHAR	includes/nbt.h	/^    HEX_CHAR,$/;"	e	enum:hex_dump_flags
HEX_WCHAR_T	includes/nbt.h	/^    HEX_WCHAR_T,$/;"	e	enum:hex_dump_flags
LEVEL_BASE_36_SIZE	includes/level.h	12;"	d
LEVEL_BUFFER_SIZE	includes/level.h	15;"	d
LEVEL_H	includes/level.h	6;"	d
LIBRARIES	Makefile	/^LIBRARIES = -lz -lm -lpng$/;"	m
MAIN_H	includes/main.h	2;"	d
MATHS_H	includes/maths.h	7;"	d
MINEMAP_VERSION	includes/config.h	8;"	d
NBT_H	includes/nbt.h	5;"	d
NBT_READ_BUFFER_SIZE	includes/read_nbt.h	28;"	d
NBT_READ_GZREAD_ERROR	includes/read_nbt.h	/^    NBT_READ_GZREAD_ERROR,      \/**< \\brief gzread threw an error, use gzerror $/;"	e	enum:nbt_read_errors
NBT_READ_INVALID_UTF8	includes/read_nbt.h	/^    NBT_READ_INVALID_UTF8,      \/**< \\brief An invalid utf-8 byte was detected$/;"	e	enum:nbt_read_errors
NBT_READ_MALFORMED_INPUT	includes/read_nbt.h	/^    NBT_READ_MALFORMED_INPUT,   \/**< \\brief An unexpected value was read out of$/;"	e	enum:nbt_read_errors
NBT_READ_OK	includes/read_nbt.h	/^    NBT_READ_OK,                \/**< \\brief Everything is OK. *\/$/;"	e	enum:nbt_read_errors
NBT_READ_OUT_OF_MEM	includes/read_nbt.h	/^    NBT_READ_OUT_OF_MEM,        \/**< \\brief nbt_read() ran out of memory to $/;"	e	enum:nbt_read_errors
NBT_READ_PREMATURE_EOF	includes/read_nbt.h	/^    NBT_READ_PREMATURE_EOF,     \/**< \\brief The file unexpectedly ran out of $/;"	e	enum:nbt_read_errors
NBT_READ_UTF8_BUFFER_SIZE	includes/read_nbt.h	31;"	d
NBT_TAG_HASH_BUCKETS	includes/nbt.h	53;"	d
NBT_TAG_TYPE_MAX	includes/nbt.h	46;"	d
NBT_TAG_TYPE_MIN	includes/nbt.h	44;"	d
NBT_TAG_TYPE_SIMPLE_MAX	includes/nbt.h	50;"	d
NBT_TAG_TYPE_SIMPLE_MIN	includes/nbt.h	48;"	d
OBJECTS	Makefile	/^OBJECTS = $(join $(addsuffix obj\/, $(dir $(SOURCE))), $(notdir $(SOURCE:.c=.o)))$/;"	m
READ_NBT_H	includes/read_nbt.h	6;"	d
RENDERER_CACHE_BUCKETS	includes/renderer.h	21;"	d
RENDERER_FLAT_CACHE_SIZE	includes/renderers/flat.h	20;"	d
RENDERER_FLAT_H	includes/renderers/flat.h	6;"	d
RENDERER_FLAT_IMAGE_HEIGHT	includes/renderers/flat.h	17;"	d
RENDERER_FLAT_IMAGE_WIDTH	includes/renderers/flat.h	15;"	d
RENDERER_H	includes/renderer.h	6;"	d
RENDERER_TILE_SIZE	includes/renderer.h	18;"	d
RENDER_ERR_DIM	includes/renderer.h	/^    RENDER_ERR_DIM,         \/**< \\brief Could not retrieve the dimensions of$/;"	e	enum:renderer_errors
RENDER_ERR_FILE	includes/renderer.h	/^    RENDER_ERR_FILE,        \/**< \\brief Could not open output file *\/$/;"	e	enum:renderer_errors
RENDER_ERR_PNG	includes/renderer.h	/^    RENDER_ERR_PNG,         \/**< \\brief libPNG returned an error *\/$/;"	e	enum:renderer_errors
RENDER_ERR_SANITY	includes/renderer.h	/^    RENDER_ERR_SANITY,      \/**< \\brief A renderer passed failed the sanity $/;"	e	enum:renderer_errors
RENDER_MEM_PNGINFO	includes/renderer.h	/^    RENDER_MEM_PNGINFO,     \/**< \\brief Couldn't create a PNG info struct *\/$/;"	e	enum:renderer_errors
RENDER_MEM_PNGWRITE	includes/renderer.h	/^    RENDER_MEM_PNGWRITE,    \/**< \\brief Couldn't create a PNG write struct *\/$/;"	e	enum:renderer_errors
RENDER_MEM_ROW	includes/renderer.h	/^    RENDER_MEM_ROW,         \/**< \\brief Couldn't create a row of PNG data *\/$/;"	e	enum:renderer_errors
RENDER_OK	includes/renderer.h	/^    RENDER_OK,              \/**< \\brief Everything is OK *\/$/;"	e	enum:renderer_errors
SOURCE	Makefile	/^SOURCE = $(wildcard *.c) $(wildcard renderers\/*.c) $(wildcard colors\/*.c) $(wildcard caches\/*.c)$/;"	m
TAG_Byte	includes/nbt.h	/^    TAG_Byte,           \/**< \\brief Holds a single signed byte of data *\/$/;"	e	enum:nbt_tag_types
TAG_Byte_Array	includes/nbt.h	/^    TAG_Byte_Array,     \/**< \\brief Holds a fixed-length unsigned char array *\/$/;"	e	enum:nbt_tag_types
TAG_Compound	includes/nbt.h	/^    TAG_Compound,       \/**< \\brief Holds an unordered, variable length %list of$/;"	e	enum:nbt_tag_types
TAG_Double	includes/nbt.h	/^    TAG_Double,         \/**< \\brief Holds a 64-bit floating point value *\/$/;"	e	enum:nbt_tag_types
TAG_End	includes/nbt.h	/^    TAG_End,            \/**< \\brief Used to indicate the end of a TAG_Compound$/;"	e	enum:nbt_tag_types
TAG_Float	includes/nbt.h	/^    TAG_Float,          \/**< \\brief Holds a 32-bit floating point value *\/$/;"	e	enum:nbt_tag_types
TAG_Int	includes/nbt.h	/^    TAG_Int,            \/**< \\brief Holds a signed 32-bit integer *\/$/;"	e	enum:nbt_tag_types
TAG_Invalid	includes/nbt.h	/^    TAG_Invalid = -1,   \/**< \\brief Used to indicate an invalid or unsupported$/;"	e	enum:nbt_tag_types
TAG_List	includes/nbt.h	/^    TAG_List,           \/**< \\brief Holds an ordered, fixed-length list of $/;"	e	enum:nbt_tag_types
TAG_Long	includes/nbt.h	/^    TAG_Long,           \/**< \\brief Holds a signed 64-bit integer *\/$/;"	e	enum:nbt_tag_types
TAG_Short	includes/nbt.h	/^    TAG_Short,          \/**< \\brief Holds a signed 16-bit integer *\/$/;"	e	enum:nbt_tag_types
TAG_String	includes/nbt.h	/^    TAG_String,         \/**< \\brief Holds a wchar_t* utf-8 string *\/$/;"	e	enum:nbt_tag_types
UTF8_CONT_MAX	includes/read_nbt.h	39;"	d
UTF8_CONT_MIN	includes/read_nbt.h	38;"	d
UTF8_DOUBLE_MAX	includes/read_nbt.h	41;"	d
UTF8_DOUBLE_MIN	includes/read_nbt.h	40;"	d
UTF8_IGNORE_ERROR	includes/utf8.h	38;"	d
UTF8_MASK_DOUBLE	includes/read_nbt.h	47;"	d
UTF8_MASK_PAYLOAD	includes/read_nbt.h	50;"	d
UTF8_MASK_QUAD	includes/read_nbt.h	49;"	d
UTF8_MASK_TRIPLE	includes/read_nbt.h	48;"	d
UTF8_QUAD_MAX	includes/read_nbt.h	45;"	d
UTF8_QUAD_MIN	includes/read_nbt.h	44;"	d
UTF8_SINGLE_MAX	includes/read_nbt.h	37;"	d
UTF8_SKIP_BOM	includes/utf8.h	40;"	d
UTF8_TRIPLE_MAX	includes/read_nbt.h	43;"	d
UTF8_TRIPLE_MIN	includes/read_nbt.h	42;"	d
_BOM	utf8.c	29;"	d	file:
_NXT	utf8.c	22;"	d	file:
_SEQ2	utf8.c	23;"	d	file:
_SEQ3	utf8.c	24;"	d	file:
_SEQ4	utf8.c	25;"	d	file:
_SEQ5	utf8.c	26;"	d	file:
_SEQ6	utf8.c	27;"	d	file:
_UTF8_H_	includes/utf8.h	28;"	d
__HASHTABLE_CWC22_H__	includes/hashtable.h	9;"	d
__HASHTABLE_ITR_CWC22__	includes/hashtable_itr.h	8;"	d
__HASHTABLE_PRIVATE_CWC22_H__	includes/hashtable_private.h	9;"	d
__utf8_forbitten	utf8.c	/^__utf8_forbitten(u_char octet)$/;"	f	file:
__wchar_forbitten	utf8.c	/^__wchar_forbitten(wchar_t sym)$/;"	f	file:
_details	html/cache_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/chunk_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/colors_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/config_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/flat_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/generic__structs_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__cachefns.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__list__auto__funcs.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__list__node__funcs.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__slabcachefns.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__trieconstruct.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__triedeconstruct.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__triemanip.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__triemisc.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/group__triesearch.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/hardcoded_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/hashtable_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/hashtable__itr_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/hashtable__private_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/level_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/linked__list_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/maths_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/nbt_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/patricia_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/read__nbt_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/renderer_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/slab_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structcache__slab.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structchunk.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structchunk__cache.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structcolor__map.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structcolor__map__s.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structconfiguration.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structentry.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structhashtable.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structhashtable__itr.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structlevel.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structlist.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structlist__node.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structlist__node__s.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structnbt__file.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structnbt__tag.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structrenderer.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structrenderer__funcs.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structrenderer__s.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structs_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structtrie.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/structtrie__node__s.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/trie_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/unionu__payload.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/unionu__tag__meta.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/unionu__tag__payload.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	html/utf8_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
a11ad07e444a07d00fc9bad55455b278	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a11ad07e444a07d00fc9bad55455b278"><\/a><!-- doxytag: member="nbt_file::zstream" ref="a11ad07e444a07d00fc9bad55455b278" args="" -->$/;"	a
a3b7c17e0f9030b982d151bdc9da05bc	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a3b7c17e0f9030b982d151bdc9da05bc"><\/a><!-- doxytag: member="u_payload::int_payload" ref="a3b7c17e0f9030b982d151bdc9da05bc" args="" -->$/;"	a
a3f5bfa37a4be1859b2f9d934c614356	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a3f5bfa37a4be1859b2f9d934c614356"><\/a><!-- doxytag: member="read_nbt.h::UTF8_QUAD_MIN" ref="a3f5bfa37a4be1859b2f9d934c614356" args="" -->$/;"	a
a4b919095fbe788bd47a6d374b44a844	html/hashtable__itr_8h.html	/^<a class="anchor" name="a4b919095fbe788bd47a6d374b44a844"><\/a><!-- doxytag: member="hashtable_itr.h::hashtable_iterator_value" ref="a4b919095fbe788bd47a6d374b44a844" args="(struct hashtable_itr *i)" -->$/;"	a
a59c1c321a68ff9de5542e10d294804c	html/slab_8h.html	/^<a class="anchor" name="a59c1c321a68ff9de5542e10d294804c"><\/a><!-- doxytag: member="slab.h::cache_slab_empty" ref="a59c1c321a68ff9de5542e10d294804c" args="(void *_cache)" -->$/;"	a
a6b21427d10b9c5a9a38339d19f57acd	html/generic__structs_8h.html	/^<a class="anchor" name="a6b21427d10b9c5a9a38339d19f57acd"><\/a><!-- doxytag: member="generic_structs.h::list_shift_node" ref="a6b21427d10b9c5a9a38339d19f57acd" args="(list *haystack)" -->$/;"	a
a6b21427d10b9c5a9a38339d19f57acd	html/linked__list_8h.html	/^<a class="anchor" name="a6b21427d10b9c5a9a38339d19f57acd"><\/a><!-- doxytag: member="linked_list.h::list_shift_node" ref="a6b21427d10b9c5a9a38339d19f57acd" args="(list *haystack)" -->$/;"	a
a7068febe3e135e043af0a1ab5180028	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a7068febe3e135e043af0a1ab5180028"><\/a><!-- doxytag: member="u_tag_payload::float_payload" ref="a7068febe3e135e043af0a1ab5180028" args="" -->$/;"	a
a7e9df757b57d037aa82fcb40f714ed8	html/level_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a7e9df757b57d037aa82fcb40f714ed8"><\/a><!-- doxytag: member="level.h::LEVEL_BUFFER_SIZE" ref="a7e9df757b57d037aa82fcb40f714ed8" args="" -->$/;"	a
a95511247cb321a02bc95a3eedfc3dd5	html/renderer_8h.html	/^<a class="anchor" name="a95511247cb321a02bc95a3eedfc3dd5"><\/a><!-- doxytag: member="renderer.h::renderer_perform" ref="a95511247cb321a02bc95a3eedfc3dd5" args="(renderer *r, int32_t tile_x, int32_t tile_z)" -->$/;"	a
aa2c2f250a6437d4b1fb1c8c3de576bd	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="aa2c2f250a6437d4b1fb1c8c3de576bd"><\/a><!-- doxytag: member="u_tag_payload::byte_payload" ref="aa2c2f250a6437d4b1fb1c8c3de576bd" args="" -->$/;"	a
aa55c3480c90432991e01545b6ff34b5	html/structlist__node.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="aa55c3480c90432991e01545b6ff34b5"><\/a><!-- doxytag: member="list_node::data" ref="aa55c3480c90432991e01545b6ff34b5" args="" -->$/;"	a
aac2bac0c697ffd441029da81085ff01	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="aac2bac0c697ffd441029da81085ff01"><\/a><!-- doxytag: member="renderer::lvl" ref="aac2bac0c697ffd441029da81085ff01" args="" -->$/;"	a
abe5da918f71cbaeb7ea2142b98a5ea1	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="abe5da918f71cbaeb7ea2142b98a5ea1"><\/a><!-- doxytag: member="nbt_file::filename" ref="abe5da918f71cbaeb7ea2142b98a5ea1" args="" -->$/;"	a
ada823a60e38919d0bda1c0863660e93	html/config_8h.html	/^<a class="anchor" name="ada823a60e38919d0bda1c0863660e93"><\/a><!-- doxytag: member="config.h::parse_commandline_options" ref="ada823a60e38919d0bda1c0863660e93" args="(int argc, char **argv, configuration *config)" -->$/;"	a
b02ffd8a74878d2958a298d2b3cd0705	html/patricia_8h.html	/^<a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705"><\/a><!-- doxytag: member="patricia.h::trie_insert_results" ref="b02ffd8a74878d2958a298d2b3cd0705" args="" -->$/;"	a
b02ffd8a74878d2958a298d2b3cd0705	html/trie_8h.html	/^<a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705"><\/a><!-- doxytag: member="trie.h::trie_insert_results" ref="b02ffd8a74878d2958a298d2b3cd0705" args="" -->$/;"	a
b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b"><\/a><!-- doxytag: member="TRIE_INSERT_SUCCESS" ref="b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b" args="" -->TRIE_INSERT_SUCCESS<\/em>&nbsp;<\/td><td>$/;"	a
b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b"><\/a><!-- doxytag: member="TRIE_INSERT_SUCCESS" ref="b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b" args="" -->TRIE_INSERT_SUCCESS<\/em>&nbsp;<\/td><td>$/;"	a
b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8"><\/a><!-- doxytag: member="TRIE_INSERT_EXISTS" ref="b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8" args="" -->TRIE_INSERT_EXISTS<\/em>&nbsp;<\/td><td>$/;"	a
b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8"><\/a><!-- doxytag: member="TRIE_INSERT_EXISTS" ref="b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8" args="" -->TRIE_INSERT_EXISTS<\/em>&nbsp;<\/td><td>$/;"	a
b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9"><\/a><!-- doxytag: member="TRIE_INSERT_ERROR" ref="b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9" args="" -->TRIE_INSERT_ERROR<\/em>&nbsp;<\/td><td>$/;"	a
b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9"><\/a><!-- doxytag: member="TRIE_INSERT_ERROR" ref="b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9" args="" -->TRIE_INSERT_ERROR<\/em>&nbsp;<\/td><td>$/;"	a
b09c15b8e888e8c12072e05c190db3c7	html/structtrie__node__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b09c15b8e888e8c12072e05c190db3c7"><\/a><!-- doxytag: member="trie_node_s::key" ref="b09c15b8e888e8c12072e05c190db3c7" args="" -->$/;"	a
b2d2f68ff3665f20d6a9a3824b0c1b5f	html/colors_8h.html	/^<a class="anchor" name="b2d2f68ff3665f20d6a9a3824b0c1b5f"><\/a><!-- doxytag: member="colors.h::color_get_func" ref="b2d2f68ff3665f20d6a9a3824b0c1b5f" args=")(void *, uint16_t)" -->$/;"	a
b40e1580a7ee9eace1e64ccc75451494	html/level_8h.html	/^<a class="anchor" name="b40e1580a7ee9eace1e64ccc75451494"><\/a><!-- doxytag: member="level.h::level_load" ref="b40e1580a7ee9eace1e64ccc75451494" args="(char *path)" -->$/;"	a
b4ec25253beaf5c663c13c1a3848ec76	html/structconfiguration.html	/^<a class="anchor" name="b4ec25253beaf5c663c13c1a3848ec76"><\/a><!-- doxytag: member="configuration::tile_x" ref="b4ec25253beaf5c663c13c1a3848ec76" args="" -->$/;"	a
b502615143dc6dfa64217865e2982fe6	html/level_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b502615143dc6dfa64217865e2982fe6"><\/a><!-- doxytag: member="level.h::LEVEL_BASE_36_SIZE" ref="b502615143dc6dfa64217865e2982fe6" args="" -->$/;"	a
b54d81ab78b9ea441137b4d630312e49	html/colors_8h.html	/^<a class="anchor" name="b54d81ab78b9ea441137b4d630312e49"><\/a><!-- doxytag: member="colors.h::color_map_write" ref="b54d81ab78b9ea441137b4d630312e49" args="(color_map *map, png_byte *destination, uint16_t block_type)" -->$/;"	a
b6889f3c6b2d21c8d9b719ad9dd90bb5	html/renderer_8h.html	/^<a class="anchor" name="b6889f3c6b2d21c8d9b719ad9dd90bb5"><\/a><!-- doxytag: member="renderer.h::renderer_blend_color" ref="b6889f3c6b2d21c8d9b719ad9dd90bb5" args="(png_bytep pixel1, png_bytep pixel2)" -->$/;"	a
b6964145b0ec9774683a309af5c842f7	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b6964145b0ec9774683a309af5c842f7"><\/a><!-- doxytag: member="read_nbt.h::UTF8_MASK_DOUBLE" ref="b6964145b0ec9774683a309af5c842f7" args="" -->$/;"	a
b7f6c3740f2e5ad1abc90567e656c7ea	html/structcolor__map.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b7f6c3740f2e5ad1abc90567e656c7ea"><\/a><!-- doxytag: member="color_map::colors" ref="b7f6c3740f2e5ad1abc90567e656c7ea" args="" -->$/;"	a
b97a08d179850bc9be9eda8ec0be1583	html/colors_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b97a08d179850bc9be9eda8ec0be1583"><\/a><!-- doxytag: member="colors.h::BLOCK_COLOR_DEPTH" ref="b97a08d179850bc9be9eda8ec0be1583" args="" -->$/;"	a
ba4670bb0ddd8c2cfae9cff2a6a8054a	html/hashtable__itr_8h.html	/^<a class="anchor" name="ba4670bb0ddd8c2cfae9cff2a6a8054a"><\/a><!-- doxytag: member="hashtable_itr.h::hashtable_iterator_advance" ref="ba4670bb0ddd8c2cfae9cff2a6a8054a" args="(struct hashtable_itr *itr)" -->$/;"	a
ba912e7c556e85bef6af2528ddc103f3	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ba912e7c556e85bef6af2528ddc103f3"><\/a><!-- doxytag: member="u_tag_payload::string_payload" ref="ba912e7c556e85bef6af2528ddc103f3" args="" -->$/;"	a
base10tobase36	maths.c	/^int base10tobase36(int64_t base10, char *buffer, int size)$/;"	f
base36_errno	maths.c	/^int base36_errno;$/;"	v
base36_error_codes	includes/maths.h	/^enum base36_error_codes$/;"	g
base36tobase10	maths.c	/^int64_t base36tobase10(char *base36, int length)$/;"	f
bb9700ae24a8f6b8d249ef599e4b114b	html/patricia_8h.html	/^<a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114b"><\/a><!-- doxytag: member="patricia.h::trie_search_results" ref="bb9700ae24a8f6b8d249ef599e4b114b" args="" -->$/;"	a
bb9700ae24a8f6b8d249ef599e4b114b	html/trie_8h.html	/^<a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114b"><\/a><!-- doxytag: member="trie.h::trie_search_results" ref="bb9700ae24a8f6b8d249ef599e4b114b" args="" -->$/;"	a
bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728"><\/a><!-- doxytag: member="TRIE_SEARCH_EMPTY" ref="bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728" args="" -->TRIE_SEARCH_EMPTY<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728"><\/a><!-- doxytag: member="TRIE_SEARCH_EMPTY" ref="bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728" args="" -->TRIE_SEARCH_EMPTY<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96"><\/a><!-- doxytag: member="TRIE_SEARCH_EXACT" ref="bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96" args="" -->TRIE_SEARCH_EXACT<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96"><\/a><!-- doxytag: member="TRIE_SEARCH_EXACT" ref="bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96" args="" -->TRIE_SEARCH_EXACT<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8"><\/a><!-- doxytag: member="TRIE_SEARCH_ERROR" ref="bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8" args="" -->TRIE_SEARCH_ERROR<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8"><\/a><!-- doxytag: member="TRIE_SEARCH_ERROR" ref="bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8" args="" -->TRIE_SEARCH_ERROR<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517	html/patricia_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517"><\/a><!-- doxytag: member="TRIE_SEARCH_CLOSEST" ref="bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517" args="" -->TRIE_SEARCH_CLOSEST<\/em>&nbsp;<\/td><td>$/;"	a
bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517	html/trie_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517"><\/a><!-- doxytag: member="TRIE_SEARCH_CLOSEST" ref="bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517" args="" -->TRIE_SEARCH_CLOSEST<\/em>&nbsp;<\/td><td>$/;"	a
bbe6c60c63edff6eabbf8252f9aa5180	html/generic__structs_8h.html	/^<a class="anchor" name="bbe6c60c63edff6eabbf8252f9aa5180"><\/a><!-- doxytag: member="generic_structs.h::list_pop" ref="bbe6c60c63edff6eabbf8252f9aa5180" args="(list *haystack)" -->$/;"	a
bbe6c60c63edff6eabbf8252f9aa5180	html/linked__list_8h.html	/^<a class="anchor" name="bbe6c60c63edff6eabbf8252f9aa5180"><\/a><!-- doxytag: member="linked_list.h::list_pop" ref="bbe6c60c63edff6eabbf8252f9aa5180" args="(list *haystack)" -->$/;"	a
bc386d72b631c5cb6ede642cc2f9c8f1	html/linked__list_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bc386d72b631c5cb6ede642cc2f9c8f1"><\/a><!-- doxytag: member="linked_list.h::list_free_func" ref="bc386d72b631c5cb6ede642cc2f9c8f1" args=")(void *)" -->$/;"	a
bd89a76bf3680f45a06e3329dece7d23	html/generic__structs_8h.html	/^<a class="anchor" name="bd89a76bf3680f45a06e3329dece7d23"><\/a><!-- doxytag: member="generic_structs.h::list_push" ref="bd89a76bf3680f45a06e3329dece7d23" args="(list *haystack, void *data)" -->$/;"	a
bd89a76bf3680f45a06e3329dece7d23	html/linked__list_8h.html	/^<a class="anchor" name="bd89a76bf3680f45a06e3329dece7d23"><\/a><!-- doxytag: member="linked_list.h::list_push" ref="bd89a76bf3680f45a06e3329dece7d23" args="(list *haystack, void *data)" -->$/;"	a
bfcf4e206708a891378b74fa72bdfbce	html/cache_8h.html	/^<a class="anchor" name="bfcf4e206708a891378b74fa72bdfbce"><\/a><!-- doxytag: member="cache.h::cache_get" ref="bfcf4e206708a891378b74fa72bdfbce" args="(chunk_cache *cache, int64_t key)" -->$/;"	a
block_count	includes/colors.h	/^    uint16_t block_count; \/**< \\brief Holds the number of blocks that are defined in this map *\/$/;"	m	struct:__anon11
block_count	includes/renderer.h	/^    uint8_t block_count[256]; $/;"	m	struct:__anon10
blockdata	includes/chunk.h	/^    uint8_t *blockdata;     \/**< \\brief The block data of this chunk *\/$/;"	m	struct:__anon1
blocklight	includes/chunk.h	/^    uint8_t *blocklight;    \/**< \\brief The blocklight of this chunk *\/$/;"	m	struct:__anon1
blocks	includes/chunk.h	/^    uint8_t *blocks;        \/**< \\brief The block types on this chunk *\/$/;"	m	struct:__anon1
bug	html/bug.html	/^<h1><a class="anchor" name="bug">Bug List <\/a><\/h1><a class="anchor" name="_bug000001"><\/a> <dl>$/;"	a
byte_array_payload	includes/nbt.h	/^    uint8_t *byte_array_payload; \/**< \\brief Payload for TAG_Byte_Array tags. *\/$/;"	m	union:__anon5
byte_payload	includes/nbt.h	/^    int8_t  byte_payload;        \/**< \\brief Payload for TAG_Byte tags. *\/$/;"	m	union:__anon5
c5bcbe0e87ab71a20d2d49dd6ba192a0	html/maths_8h.html	/^<a class="anchor" name="c5bcbe0e87ab71a20d2d49dd6ba192a0"><\/a><!-- doxytag: member="maths.h::base10tobase36" ref="c5bcbe0e87ab71a20d2d49dd6ba192a0" args="(int64_t base10, char *buffer, int size)" -->$/;"	a
c73f9b1a42832c4d3c6d0924df8a4c94	html/structrenderer__funcs.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c73f9b1a42832c4d3c6d0924df8a4c94"><\/a><!-- doxytag: member="renderer_funcs::draw_row" ref="c73f9b1a42832c4d3c6d0924df8a4c94" args=")(void *, png_bytep, int)" -->$/;"	a
c7e0580b7968c20533672744e7cee11e	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c7e0580b7968c20533672744e7cee11e"><\/a><!-- doxytag: member="renderer::cache" ref="c7e0580b7968c20533672744e7cee11e" args="" -->$/;"	a
c9f2ccd031ffe02688e0b2d1b85c27b5	html/structrenderer.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c9f2ccd031ffe02688e0b2d1b85c27b5"><\/a><!-- doxytag: member="renderer::output_path" ref="c9f2ccd031ffe02688e0b2d1b85c27b5" args="" -->$/;"	a
cache	includes/renderer.h	/^    chunk_cache *cache;     \/**< \\brief A chunk_cache *\/$/;"	m	struct:__anon10
cache_empty	cache.c	/^void cache_empty(chunk_cache *cache)$/;"	f
cache_free	cache.c	/^void cache_free(chunk_cache *doomed)$/;"	f
cache_get	cache.c	/^chunk *cache_get(chunk_cache *cache, int64_t key)$/;"	f
cache_new	cache.c	/^chunk_cache *cache_new()$/;"	f
cache_set	cache.c	/^int cache_set(chunk_cache *cache, int64_t key, chunk *payload)$/;"	f
cache_slab	includes/caches/slab.h	/^} cache_slab;$/;"	t	typeref:struct:__anon2
cache_slab_empty	caches/slab.c	/^void cache_slab_empty(void *_cache)$/;"	f
cache_slab_free	caches/slab.c	/^void cache_slab_free(void *_doomed)$/;"	f
cache_slab_get	caches/slab.c	/^chunk *cache_slab_get(void *_cache, int64_t key)$/;"	f
cache_slab_new	caches/slab.c	/^chunk_cache *cache_slab_new(uint32_t size)$/;"	f
cache_slab_set	caches/slab.c	/^int cache_slab_set(void *_cache, int64_t key, chunk *payload)$/;"	f
cc398833e609bea40b0766f54287b8a9	html/chunk_8h.html	/^<a class="anchor" name="cc398833e609bea40b0766f54287b8a9"><\/a><!-- doxytag: member="chunk.h::chunk_generate_8bit_offset" ref="cc398833e609bea40b0766f54287b8a9" args="(chunk *c, uint8_t coord_x, uint8_t coord_y, uint8_t coord_z, uint32_t max_offset)" -->$/;"	a
cc6675052d273bce39571f756189e0c9	html/chunk_8h.html	/^<a class="anchor" name="cc6675052d273bce39571f756189e0c9"><\/a><!-- doxytag: member="chunk.h::chunk_new_error_codes" ref="cc6675052d273bce39571f756189e0c9" args="" -->$/;"	a
cc6675052d273bce39571f756189e0c90e3642eb43a3204cbaa6ee266907e667	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c90e3642eb43a3204cbaa6ee266907e667"><\/a><!-- doxytag: member="CHUNK_ERR_OK" ref="cc6675052d273bce39571f756189e0c90e3642eb43a3204cbaa6ee266907e667" args="" -->CHUNK_ERR_OK<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c927fb19a63b25a8e8a9ee9100149388c4	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c927fb19a63b25a8e8a9ee9100149388c4"><\/a><!-- doxytag: member="CHUNK_ERR_COORDS" ref="cc6675052d273bce39571f756189e0c927fb19a63b25a8e8a9ee9100149388c4" args="" -->CHUNK_ERR_COORDS<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c937ee8e3e1e501f89f769248340b55953	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c937ee8e3e1e501f89f769248340b55953"><\/a><!-- doxytag: member="CHUNK_ERR_TAG" ref="cc6675052d273bce39571f756189e0c937ee8e3e1e501f89f769248340b55953" args="" -->CHUNK_ERR_TAG<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c966b979a8726a068973abc3778b90dcb4	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c966b979a8726a068973abc3778b90dcb4"><\/a><!-- doxytag: member="CHUNK_ERR_CONSIST" ref="cc6675052d273bce39571f756189e0c966b979a8726a068973abc3778b90dcb4" args="" -->CHUNK_ERR_CONSIST<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c974a09faf5997b689a775a374d45c376f	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c974a09faf5997b689a775a374d45c376f"><\/a><!-- doxytag: member="CHUNK_ERR_INPUT" ref="cc6675052d273bce39571f756189e0c974a09faf5997b689a775a374d45c376f" args="" -->CHUNK_ERR_INPUT<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c983af8eb7a8cb3bd927c670fc0cf6d530	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c983af8eb7a8cb3bd927c670fc0cf6d530"><\/a><!-- doxytag: member="CHUNK_ERR_OOM" ref="cc6675052d273bce39571f756189e0c983af8eb7a8cb3bd927c670fc0cf6d530" args="" -->CHUNK_ERR_OOM<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c9afdde49fc85cb946cfa5429160eccfa9	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c9afdde49fc85cb946cfa5429160eccfa9"><\/a><!-- doxytag: member="CHUNK_ERR_TAG_FORMAT" ref="cc6675052d273bce39571f756189e0c9afdde49fc85cb946cfa5429160eccfa9" args="" -->CHUNK_ERR_TAG_FORMAT<\/em>&nbsp;<\/td><td>$/;"	a
cc6675052d273bce39571f756189e0c9c92ee8cf2748ccc32233c53391558608	html/chunk_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="cc6675052d273bce39571f756189e0c9c92ee8cf2748ccc32233c53391558608"><\/a><!-- doxytag: member="CHUNK_ERR_HEIGHT" ref="cc6675052d273bce39571f756189e0c9c92ee8cf2748ccc32233c53391558608" args="" -->CHUNK_ERR_HEIGHT<\/em>&nbsp;<\/td><td>$/;"	a
ce77d89f70f0f57ed6d7c4e490329749	html/structentry.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ce77d89f70f0f57ed6d7c4e490329749"><\/a><!-- doxytag: member="entry::v" ref="ce77d89f70f0f57ed6d7c4e490329749" args="" -->$/;"	a
cf7f6fbdd27e9f14e31d4418f0535c3a	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cf7f6fbdd27e9f14e31d4418f0535c3a"><\/a><!-- doxytag: member="u_payload::string_payload" ref="cf7f6fbdd27e9f14e31d4418f0535c3a" args="" -->$/;"	a
child_tag_type	includes/nbt.h	/^    int8_t  child_tag_type; \/**< \\brief The type of child tags of a TAG_List tag. *\/$/;"	m	union:__anon6
chunk	includes/chunk.h	/^} chunk;$/;"	t	typeref:struct:__anon1
chunk_cache	includes/cache.h	/^} chunk_cache;$/;"	t	typeref:struct:__anon12
chunk_count	includes/level.h	/^    uint64_t chunk_count;   \/**< \\brief The number of chunks in the map *\/$/;"	m	struct:__anon4
chunk_errno	chunk.c	/^int chunk_errno = 0;$/;"	v
chunk_free	chunk.c	/^void chunk_free(void *doomed)$/;"	f
chunk_generate_4bit_offset	chunk.c	/^int32_t chunk_generate_4bit_offset(chunk *c, uint8_t coord_x, uint8_t coord_y, uint8_t coord_z, uint32_t max_offset)$/;"	f
chunk_generate_8bit_offset	chunk.c	/^int32_t chunk_generate_8bit_offset(chunk *c, uint8_t coord_x, uint8_t coord_y, uint8_t coord_z, uint32_t max_offset)$/;"	f
chunk_generate_key	chunk.c	/^uint64_t chunk_generate_key(chunk *c)$/;"	f
chunk_generate_key_from_coords	chunk.c	/^uint64_t chunk_generate_key_from_coords(int32_t coord_x, int32_t coord_z)$/;"	f
chunk_get_coords_from_filename	chunk.c	/^int chunk_get_coords_from_filename(char *filename, int32_t *x_coord, int32_t *z_coord)$/;"	f
chunk_hash	chunk.c	/^uint32_t chunk_hash(void *_c)$/;"	f
chunk_key_eqfn	chunk.c	/^int chunk_key_eqfn(void *key1, void *key2)$/;"	f
chunk_new	chunk.c	/^chunk *chunk_new(char *filepath, int32_t coord_x, int32_t coord_z)$/;"	f
chunk_new_error_codes	includes/chunk.h	/^enum chunk_new_error_codes$/;"	g
chunks	includes/caches/slab.h	/^    chunk **chunks;   \/**< \\brief The slab of chunks *\/$/;"	m	struct:__anon2
color_depth	includes/colors.h	/^    uint8_t color_depth; \/**< \\brief Holds the color depth used by this color map. *\/$/;"	m	struct:__anon11
color_get_func	includes/colors.h	/^typedef png_byte *(*color_get_func )(void*,uint16_t);$/;"	t
color_map	includes/colors.h	/^} color_map;$/;"	t	typeref:struct:__anon11
color_map_errors	includes/colors.h	/^enum color_map_errors$/;"	g
color_map_free	colors.c	/^void color_map_free(color_map *doomed)$/;"	f
color_map_get	colors.c	/^png_byte *color_map_get(color_map *map, uint16_t block_type)$/;"	f
color_map_hardcoded_assign	colors/hardcoded.c	/^void color_map_hardcoded_assign(png_byte *colors, uint16_t block_type, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)$/;"	f
color_map_hardcoded_get	colors/hardcoded.c	/^png_byte *color_map_hardcoded_get(void *_map, uint16_t block_type)$/;"	f
color_map_hardcoded_new	colors/hardcoded.c	/^color_map *color_map_hardcoded_new(uint16_t block_count, uint8_t color_depth)$/;"	f
color_map_new	colors.c	/^color_map *color_map_new(png_byte *colors, uint16_t block_count, uint8_t color_depth, color_get_func get)$/;"	f
color_map_write	colors.c	/^int color_map_write(color_map *map, png_byte *destination, uint16_t block_type)$/;"	f
colors	includes/colors.h	/^    png_byte *colors; \/**< \\brief Holds the color definition for this color map *\/$/;"	m	struct:__anon11
compound_payload	includes/nbt.h	/^    struct hashtable *compound_payload; \/**< \\brief Payload for TAG_Compound tags. *\/$/;"	m	union:__anon5	typeref:struct:__anon5::hashtable
config_error_message	config.c	/^char *config_error_message(int error_code)$/;"	f
config_errors	includes/config.h	/^enum config_errors $/;"	g
configuration	includes/config.h	/^} configuration;$/;"	t	typeref:struct:__anon8
coord_x	includes/chunk.h	/^    int32_t coord_x;    \/**< \\brief The X coordinate of this chunk *\/$/;"	m	struct:__anon1
coord_z	includes/chunk.h	/^    int32_t coord_z;    \/**< \\brief The Z coordinate of this chunk *\/$/;"	m	struct:__anon1
create_hashtable	hashtable.c	/^create_hashtable(unsigned int minsize,$/;"	f
d18782b75f8ef91a2a4f96a769156640	html/structlist__node.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d18782b75f8ef91a2a4f96a769156640"><\/a><!-- doxytag: member="list_node::prev" ref="d18782b75f8ef91a2a4f96a769156640" args="" -->$/;"	a
d2c61ec9870fac1d027815ac602a037d	html/nbt_8h.html	/^<a class="anchor" name="d2c61ec9870fac1d027815ac602a037d"><\/a><!-- doxytag: member="nbt.h::nbt_hash_search" ref="d2c61ec9870fac1d027815ac602a037d" args="(nbt_tag *tag, wchar_t *key)" -->$/;"	a
d4ecd0d61d0fca55386756d88c09d90e	html/level_8h.html	/^<a class="anchor" name="d4ecd0d61d0fca55386756d88c09d90e"><\/a><!-- doxytag: member="level.h::level_free" ref="d4ecd0d61d0fca55386756d88c09d90e" args="(level *doomed)" -->$/;"	a
d4eec58b7aaba2513c9dbe8da5e6bdbd	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d4eec58b7aaba2513c9dbe8da5e6bdbd"><\/a><!-- doxytag: member="u_tag_payload::compound_payload" ref="d4eec58b7aaba2513c9dbe8da5e6bdbd" args="" -->$/;"	a
d5218c8af6f68f926ae0e2f6b9d89143	html/hashtable_8h.html	/^<a class="anchor" name="d5218c8af6f68f926ae0e2f6b9d89143"><\/a><!-- doxytag: member="hashtable.h::hashtable_remove" ref="d5218c8af6f68f926ae0e2f6b9d89143" args="(struct hashtable *h, void *k)" -->$/;"	a
d59a36ffaf7a7019ac01994704aac4d5	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d59a36ffaf7a7019ac01994704aac4d5"><\/a><!-- doxytag: member="read_nbt.h::UTF8_SINGLE_MAX" ref="d59a36ffaf7a7019ac01994704aac4d5" args="" -->$/;"	a
d6717ddef943dffc5a0b942f74aded0c	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d6717ddef943dffc5a0b942f74aded0c"><\/a><!-- doxytag: member="nbt_file::read_state" ref="d6717ddef943dffc5a0b942f74aded0c" args="" -->$/;"	a
d8c9a7c4a6443fa1c5f3d32bef504159	html/generic__structs_8h.html	/^<a class="anchor" name="d8c9a7c4a6443fa1c5f3d32bef504159"><\/a><!-- doxytag: member="generic_structs.h::list_new" ref="d8c9a7c4a6443fa1c5f3d32bef504159" args="(void *data, void(*node_free_func)(void *))" -->$/;"	a
d98772f7ac5b2fca9a1bac6b60f850fc	html/generic__structs_8h.html	/^<a class="anchor" name="d98772f7ac5b2fca9a1bac6b60f850fc"><\/a><!-- doxytag: member="generic_structs.h::list_unshift_node" ref="d98772f7ac5b2fca9a1bac6b60f850fc" args="(list *haystack, list_node *needle)" -->$/;"	a
d98772f7ac5b2fca9a1bac6b60f850fc	html/linked__list_8h.html	/^<a class="anchor" name="d98772f7ac5b2fca9a1bac6b60f850fc"><\/a><!-- doxytag: member="linked_list.h::list_unshift_node" ref="d98772f7ac5b2fca9a1bac6b60f850fc" args="(list *haystack, list_node *needle)" -->$/;"	a
data	includes/cache.h	/^    void *data;$/;"	m	struct:__anon12
data	includes/chunk.h	/^    nbt_tag *data;      \/**< \\brief Holds the tag data for this chunk *\/$/;"	m	struct:__anon1
data	includes/level.h	/^    nbt_tag *data;          \/**< \\brief The nbt_tag holding the %level's $/;"	m	struct:__anon4
data	includes/linked_list.h	/^    void *data;        \/**< \\brief The data payload for this node. *\/$/;"	m	struct:list_node_s
data_free_func	includes/linked_list.h	/^    list_free_func data_free_func; \/**< \\brief A function used to free each node's data. *\/$/;"	m	struct:__anon3
dc31a2674c5a279ca60f1a6024b561e0	html/structcolor__map__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dc31a2674c5a279ca60f1a6024b561e0"><\/a><!-- doxytag: member="color_map_s::get" ref="dc31a2674c5a279ca60f1a6024b561e0" args=")(color_map_s *, uint16_t)" -->$/;"	a
defebee36864b5b0e4dbadeaae1065ba	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="defebee36864b5b0e4dbadeaae1065ba"><\/a><!-- doxytag: member="nbt.h::nbt_new_long_tag" ref="defebee36864b5b0e4dbadeaae1065ba" args="(name, name_len, payload)" -->$/;"	a
df0d97325ef8b29a7ca3b9884f83f5d8	html/nbt_8h.html	/^<a class="anchor" name="df0d97325ef8b29a7ca3b9884f83f5d8"><\/a><!-- doxytag: member="nbt.h::nbt_new_simple_payload" ref="df0d97325ef8b29a7ca3b9884f83f5d8" args="(uint8_t tag_type, void *payload_value)" -->$/;"	a
df2c8020d23a647712969b71e7d707a3	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="df2c8020d23a647712969b71e7d707a3"><\/a><!-- doxytag: member="nbt.h::NBT_TAG_TYPE_SIMPLE_MIN" ref="df2c8020d23a647712969b71e7d707a3" args="" -->$/;"	a
df5f10576feee3d05643d54e41a35279	html/structrenderer__s.html	/^<a class="anchor" name="df5f10576feee3d05643d54e41a35279"><\/a><!-- doxytag: member="renderer_s::config" ref="df5f10576feee3d05643d54e41a35279" args="" -->$/;"	a
df8ad77bb15c430adf0d333d504ff806	html/structnbt__tag.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="df8ad77bb15c430adf0d333d504ff806"><\/a><!-- doxytag: member="nbt_tag::name_len" ref="df8ad77bb15c430adf0d333d504ff806" args="" -->$/;"	a
dimensions	includes/renderer.h	/^    int (*dimensions)(int*,int*);$/;"	m	struct:__anon9
double_payload	includes/nbt.h	/^    double  double_payload;      \/**< \\brief Payload for TAG_Double tags. *\/$/;"	m	union:__anon5
draw_row	includes/renderer.h	/^    void (*draw_row)(void*,png_bytep,int);$/;"	m	struct:__anon9
e	includes/hashtable_itr.h	/^    struct entry *e;        \/**< \\brief The current hash entry. *\/$/;"	m	struct:hashtable_itr	typeref:struct:hashtable_itr::entry
e0dbdbbdb09558997cbedcf405c2a92c	html/nbt_8h.html	/^<a class="anchor" name="e0dbdbbdb09558997cbedcf405c2a92c"><\/a><!-- doxytag: member="nbt.h::nbt_is_simple_tag_type" ref="e0dbdbbdb09558997cbedcf405c2a92c" args="(uint8_t tag_type)" -->$/;"	a
e156c23d6c3852ed2c5724a2c1d9b477	html/read__nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e156c23d6c3852ed2c5724a2c1d9b477"><\/a><!-- doxytag: member="read_nbt.h::UTF8_CONT_MAX" ref="e156c23d6c3852ed2c5724a2c1d9b477" args="" -->$/;"	a
e17508a7a608530430c468da6a07200e	html/read__nbt_8h.html	/^<a class="anchor" name="e17508a7a608530430c468da6a07200e"><\/a><!-- doxytag: member="read_nbt.h::nbt_read_gzread_utf8" ref="e17508a7a608530430c468da6a07200e" args="(gzFile file, wchar_t *wchar_buffer, int length)" -->$/;"	a
e3568b39b7d06fed9ed5895facaf1a11	html/structnbt__file.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e3568b39b7d06fed9ed5895facaf1a11"><\/a><!-- doxytag: member="nbt_file::input_file" ref="e3568b39b7d06fed9ed5895facaf1a11" args="" -->$/;"	a
e472b078bcae3ed70ddac077cf8f573c	html/generic__structs_8h.html	/^<a class="anchor" name="e472b078bcae3ed70ddac077cf8f573c"><\/a><!-- doxytag: member="generic_structs.h::list_shift" ref="e472b078bcae3ed70ddac077cf8f573c" args="(list *haystack)" -->$/;"	a
e472b078bcae3ed70ddac077cf8f573c	html/linked__list_8h.html	/^<a class="anchor" name="e472b078bcae3ed70ddac077cf8f573c"><\/a><!-- doxytag: member="linked_list.h::list_shift" ref="e472b078bcae3ed70ddac077cf8f573c" args="(list *haystack)" -->$/;"	a
e514915b0307961b3b347e8991ed3f12	html/structlist__node__s.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e514915b0307961b3b347e8991ed3f12"><\/a><!-- doxytag: member="list_node_s::prev" ref="e514915b0307961b3b347e8991ed3f12" args="" -->$/;"	a
e8ac600aa8b9a12daa9c029c2ed8f645	html/structchunk.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e8ac600aa8b9a12daa9c029c2ed8f645"><\/a><!-- doxytag: member="chunk::blockdata" ref="e8ac600aa8b9a12daa9c029c2ed8f645" args="" -->$/;"	a
e9c904893d2571a9e1f88395513e683c	html/nbt_8h.html	/^<a class="anchor" name="e9c904893d2571a9e1f88395513e683c"><\/a><!-- doxytag: member="nbt.h::nbt_tag_types" ref="e9c904893d2571a9e1f88395513e683c" args="" -->$/;"	a
e9c904893d2571a9e1f88395513e683c045cf869c73ca645cb2f90b51e74cda9	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c045cf869c73ca645cb2f90b51e74cda9"><\/a><!-- doxytag: member="TAG_Long" ref="e9c904893d2571a9e1f88395513e683c045cf869c73ca645cb2f90b51e74cda9" args="" -->TAG_Long<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683c3d5a82423094732bfbe3e4316ec04f5c	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c3d5a82423094732bfbe3e4316ec04f5c"><\/a><!-- doxytag: member="TAG_Invalid" ref="e9c904893d2571a9e1f88395513e683c3d5a82423094732bfbe3e4316ec04f5c" args="" -->TAG_Invalid<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683c412ceba1e522006ed1abd510caf067c6	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c412ceba1e522006ed1abd510caf067c6"><\/a><!-- doxytag: member="TAG_End" ref="e9c904893d2571a9e1f88395513e683c412ceba1e522006ed1abd510caf067c6" args="" -->TAG_End<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683c59fc760bbabd001bc74cd7b4500eaeb1	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c59fc760bbabd001bc74cd7b4500eaeb1"><\/a><!-- doxytag: member="TAG_List" ref="e9c904893d2571a9e1f88395513e683c59fc760bbabd001bc74cd7b4500eaeb1" args="" -->TAG_List<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683c8fc97992da325a844e4410482a301859	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c8fc97992da325a844e4410482a301859"><\/a><!-- doxytag: member="TAG_Float" ref="e9c904893d2571a9e1f88395513e683c8fc97992da325a844e4410482a301859" args="" -->TAG_Float<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683c918f873ae00e6b16d197f09abb3866a7	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c918f873ae00e6b16d197f09abb3866a7"><\/a><!-- doxytag: member="TAG_String" ref="e9c904893d2571a9e1f88395513e683c918f873ae00e6b16d197f09abb3866a7" args="" -->TAG_String<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683c975e983e98b5bf2fffc5691958b0794f	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683c975e983e98b5bf2fffc5691958b0794f"><\/a><!-- doxytag: member="TAG_Short" ref="e9c904893d2571a9e1f88395513e683c975e983e98b5bf2fffc5691958b0794f" args="" -->TAG_Short<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683cbb52fd6bfeb1865968d56ccef0daead9	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683cbb52fd6bfeb1865968d56ccef0daead9"><\/a><!-- doxytag: member="TAG_Byte" ref="e9c904893d2571a9e1f88395513e683cbb52fd6bfeb1865968d56ccef0daead9" args="" -->TAG_Byte<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683cc28ed5b6d83826ce9ae4bd6977549c1b	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683cc28ed5b6d83826ce9ae4bd6977549c1b"><\/a><!-- doxytag: member="TAG_Byte_Array" ref="e9c904893d2571a9e1f88395513e683cc28ed5b6d83826ce9ae4bd6977549c1b" args="" -->TAG_Byte_Array<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683cdd45c97006383b972c7f3f2d17549199	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683cdd45c97006383b972c7f3f2d17549199"><\/a><!-- doxytag: member="TAG_Compound" ref="e9c904893d2571a9e1f88395513e683cdd45c97006383b972c7f3f2d17549199" args="" -->TAG_Compound<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683ce0b367cd0dd9b00f86ba58d34bdf82cd	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683ce0b367cd0dd9b00f86ba58d34bdf82cd"><\/a><!-- doxytag: member="TAG_Int" ref="e9c904893d2571a9e1f88395513e683ce0b367cd0dd9b00f86ba58d34bdf82cd" args="" -->TAG_Int<\/em>&nbsp;<\/td><td>$/;"	a
e9c904893d2571a9e1f88395513e683ce5fc01c466aa077f9004b088089e16f1	html/nbt_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="e9c904893d2571a9e1f88395513e683ce5fc01c466aa077f9004b088089e16f1"><\/a><!-- doxytag: member="TAG_Double" ref="e9c904893d2571a9e1f88395513e683ce5fc01c466aa077f9004b088089e16f1" args="" -->TAG_Double<\/em>&nbsp;<\/td><td>$/;"	a
ea45085e558c7cfc89f4a88760dd9c86	html/hashtable__private_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ea45085e558c7cfc89f4a88760dd9c86"><\/a><!-- doxytag: member="hashtable_private.h::indexFor" ref="ea45085e558c7cfc89f4a88760dd9c86" args="(unsigned int tablelength, unsigned int hashvalue)" -->$/;"	a
eab608613a274d5b8f591d00d78358b3	html/nbt_8h.html	/^<a class="anchor" name="eab608613a274d5b8f591d00d78358b3"><\/a><!-- doxytag: member="nbt.h::nbt_new_tag" ref="eab608613a274d5b8f591d00d78358b3" args="(uint8_t tag_type, wchar_t *name, uint16_t name_len, u_tag_meta *meta, u_tag_payload *payload)" -->$/;"	a
ebac7b4621c242401881154b3c7f4aaa	html/unionu__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ebac7b4621c242401881154b3c7f4aaa"><\/a><!-- doxytag: member="u_payload::byte_payload" ref="ebac7b4621c242401881154b3c7f4aaa" args="" -->$/;"	a
ebf2e7b4bde53dcd934ffa6b939f1062	html/structrenderer__s.html	/^<a class="anchor" name="ebf2e7b4bde53dcd934ffa6b939f1062"><\/a><!-- doxytag: member="renderer_s::lvl" ref="ebf2e7b4bde53dcd934ffa6b939f1062" args="" -->$/;"	a
ec799f095ccf7acf5bd7c3fd9adb136d	html/slab_8h.html	/^<a class="anchor" name="ec799f095ccf7acf5bd7c3fd9adb136d"><\/a><!-- doxytag: member="slab.h::cache_slab_free" ref="ec799f095ccf7acf5bd7c3fd9adb136d" args="(void *_doomed)" -->$/;"	a
edee8784569397cb9f42a46055c959d0	html/hashtable_8h.html	/^<a class="anchor" name="edee8784569397cb9f42a46055c959d0"><\/a><!-- doxytag: member="hashtable.h::hashtable_search" ref="edee8784569397cb9f42a46055c959d0" args="(struct hashtable *h, void *k)" -->$/;"	a
ee1600feac8d527f93d006062a451fe4	html/structlevel.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ee1600feac8d527f93d006062a451fe4"><\/a><!-- doxytag: member="level::smallest_z" ref="ee1600feac8d527f93d006062a451fe4" args="" -->$/;"	a
empty	includes/cache.h	/^    void (*empty)(void*);$/;"	m	struct:__anon12
end	includes/linked_list.h	/^    list_node *end;     \/**< \\brief The end node of the %list. *\/$/;"	m	struct:__anon3
entry	includes/hashtable_private.h	/^struct entry$/;"	s
entrycount	includes/hashtable_private.h	/^    unsigned int entrycount;            \/**< \\brief How many entries are stored $/;"	m	struct:hashtable
eqfn	includes/hashtable_private.h	/^    int (*eqfn) (void *k1, void *k2);   \/**< \\brief Function to use to compare $/;"	m	struct:hashtable
f0f24fc8573abc61960e9f2c84808f6e	html/flat_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f0f24fc8573abc61960e9f2c84808f6e"><\/a><!-- doxytag: member="flat.h::RENDERER_FLAT_CACHE_SIZE" ref="f0f24fc8573abc61960e9f2c84808f6e" args="" -->$/;"	a
f106006283fbeb5ffe764761e2489c29	html/renderer_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f106006283fbeb5ffe764761e2489c29"><\/a><!-- doxytag: member="renderer.h::RENDERER_TILE_SIZE" ref="f106006283fbeb5ffe764761e2489c29" args="" -->$/;"	a
f143abe7701dbf79ce364b8a8b82b844	html/cache_8h.html	/^<a class="anchor" name="f143abe7701dbf79ce364b8a8b82b844"><\/a><!-- doxytag: member="cache.h::cache_free" ref="f143abe7701dbf79ce364b8a8b82b844" args="(chunk_cache *doomed)" -->$/;"	a
f2605f2512a2686ceb2fd1a71949e32b	html/structcache__slab.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f2605f2512a2686ceb2fd1a71949e32b"><\/a><!-- doxytag: member="cache_slab::size" ref="f2605f2512a2686ceb2fd1a71949e32b" args="" -->$/;"	a
f2812194d7afd2b3bcbc26770b0f87ee	html/colors_8h.html	/^<a class="anchor" name="f2812194d7afd2b3bcbc26770b0f87ee"><\/a><!-- doxytag: member="colors.h::color_map_get" ref="f2812194d7afd2b3bcbc26770b0f87ee" args="(color_map *map, uint16_t block_type)" -->$/;"	a
f2dadc5fe4b54bb8e5e484eef76715dd	html/structentry.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f2dadc5fe4b54bb8e5e484eef76715dd"><\/a><!-- doxytag: member="entry::h" ref="f2dadc5fe4b54bb8e5e484eef76715dd" args="" -->$/;"	a
f59f5fd32c6b9bbc8e485c8fb9a5064d	html/structlist.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f59f5fd32c6b9bbc8e485c8fb9a5064d"><\/a><!-- doxytag: member="list::data_free_func" ref="f59f5fd32c6b9bbc8e485c8fb9a5064d" args="" -->$/;"	a
f6aea929d4a2c290a519b44f515ac40c	html/nbt_8h.html	/^<a class="anchor" name="f6aea929d4a2c290a519b44f515ac40c"><\/a><!-- doxytag: member="nbt.h::nbt_new_string_tag" ref="f6aea929d4a2c290a519b44f515ac40c" args="(wchar_t *payload_value, wchar_t *name, uint16_t name_len, int32_t length)" -->$/;"	a
f6ea86764340f68f4aff42ff30d280b4	html/nbt_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f6ea86764340f68f4aff42ff30d280b4"><\/a><!-- doxytag: member="nbt.h::nbt_new_int_tag" ref="f6ea86764340f68f4aff42ff30d280b4" args="(name, name_len, payload)" -->$/;"	a
f7e399cbbcb87185b10c299c19cc4d5a	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f7e399cbbcb87185b10c299c19cc4d5a"><\/a><!-- doxytag: member="hashtable::entrycount" ref="f7e399cbbcb87185b10c299c19cc4d5a" args="" -->$/;"	a
f7e9ebab7b83f6bc8ae329959fb267dd	html/utf8_8h.html	/^<a class="anchor" name="f7e9ebab7b83f6bc8ae329959fb267dd"><\/a><!-- doxytag: member="utf8.h::utf8_to_wchar" ref="f7e9ebab7b83f6bc8ae329959fb267dd" args="(const char *in, size_t insize, wchar_t *out, size_t outsize, int flags)" -->$/;"	a
f952d499e67f41f04374bdf992850c9c	html/chunk_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f952d499e67f41f04374bdf992850c9c"><\/a><!-- doxytag: member="chunk.h::CHUNK_SIZE_AREA" ref="f952d499e67f41f04374bdf992850c9c" args="" -->$/;"	a
f9e27425220be0d50541d84a44c368cb	html/flat_8h.html	/^<a class="anchor" name="f9e27425220be0d50541d84a44c368cb"><\/a><!-- doxytag: member="flat.h::renderer_flat_new" ref="f9e27425220be0d50541d84a44c368cb" args="(level *lvl, color_map *map, char *output_path)" -->$/;"	a
fb4c676f4580f98862da4ea98de899b9	html/unionu__tag__payload.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fb4c676f4580f98862da4ea98de899b9"><\/a><!-- doxytag: member="u_tag_payload::long_payload" ref="fb4c676f4580f98862da4ea98de899b9" args="" -->$/;"	a
fc114ef7e92a1820d7ac91f4140592bc	html/colors_8h.html	/^<a class="anchor" name="fc114ef7e92a1820d7ac91f4140592bc"><\/a><!-- doxytag: member="colors.h::color_map_errors" ref="fc114ef7e92a1820d7ac91f4140592bc" args="" -->$/;"	a
fc114ef7e92a1820d7ac91f4140592bc2ad86627f132ac5fd11ac95c19ec3c42	html/colors_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="fc114ef7e92a1820d7ac91f4140592bc2ad86627f132ac5fd11ac95c19ec3c42"><\/a><!-- doxytag: member="COLOR_MAP_ERR_NOMAP" ref="fc114ef7e92a1820d7ac91f4140592bc2ad86627f132ac5fd11ac95c19ec3c42" args="" -->COLOR_MAP_ERR_NOMAP<\/em>&nbsp;<\/td><td>$/;"	a
fc114ef7e92a1820d7ac91f4140592bc2d9c53783242120f811448f8b1afe12c	html/colors_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="fc114ef7e92a1820d7ac91f4140592bc2d9c53783242120f811448f8b1afe12c"><\/a><!-- doxytag: member="COLOR_MAP_OK" ref="fc114ef7e92a1820d7ac91f4140592bc2d9c53783242120f811448f8b1afe12c" args="" -->COLOR_MAP_OK<\/em>&nbsp;<\/td><td>$/;"	a
fc114ef7e92a1820d7ac91f4140592bc7332f5169e6696de70523e0973f9e028	html/colors_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="fc114ef7e92a1820d7ac91f4140592bc7332f5169e6696de70523e0973f9e028"><\/a><!-- doxytag: member="COLOR_MAP_ERR_BLOCK" ref="fc114ef7e92a1820d7ac91f4140592bc7332f5169e6696de70523e0973f9e028" args="" -->COLOR_MAP_ERR_BLOCK<\/em>&nbsp;<\/td><td>$/;"	a
fc114ef7e92a1820d7ac91f4140592bca1c3b013ab2a620e43e73d02acb92332	html/colors_8h.html	/^<tr><td valign="top"><em><a class="anchor" name="fc114ef7e92a1820d7ac91f4140592bca1c3b013ab2a620e43e73d02acb92332"><\/a><!-- doxytag: member="COLOR_MAP_ERR_NODEST" ref="fc114ef7e92a1820d7ac91f4140592bca1c3b013ab2a620e43e73d02acb92332" args="" -->COLOR_MAP_ERR_NODEST<\/em>&nbsp;<\/td><td>$/;"	a
fc1229fd1dcd2ae455a875d2e39c9243	html/structhashtable.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fc1229fd1dcd2ae455a875d2e39c9243"><\/a><!-- doxytag: member="hashtable::tablelength" ref="fc1229fd1dcd2ae455a875d2e39c9243" args="" -->$/;"	a
feb5f8e7593d50fc3ce781ab0d9fd7e7	html/structhashtable__itr.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="feb5f8e7593d50fc3ce781ab0d9fd7e7"><\/a><!-- doxytag: member="hashtable_itr::h" ref="feb5f8e7593d50fc3ce781ab0d9fd7e7" args="" -->$/;"	a
float_payload	includes/nbt.h	/^    float   float_payload;       \/**< \\brief Payload for TAG_Float tags. *\/$/;"	m	union:__anon5
free	includes/cache.h	/^    void (*free)(void*);$/;"	m	struct:__anon12
free_config	config.c	/^void free_config(configuration *config)$/;"	f
free_output_filename	includes/config.h	/^    unsigned char  free_output_filename;  \/**< Internal flag to tell whether or not output_filename should be freed. *\/$/;"	m	struct:__anon8
free_string	main.c	/^void free_string(void *str)$/;"	f
freekey	includes/hashtable_private.h	61;"	d
funcs	includes/renderer.h	/^    renderer_funcs *funcs;  \/**< \\brief A renderer_funcs instance for this $/;"	m	struct:__anon10
g0367b85362296186facad3312fdf3f90	html/group__triemanip.html	/^<a class="anchor" name="g0367b85362296186facad3312fdf3f90"><\/a><!-- doxytag: member="trie.h::trie_delete" ref="g0367b85362296186facad3312fdf3f90" args="(trie *haystack, wchar_t *key)" -->$/;"	a
g05e0b1fcc12f456f69a4985dcf0f8b6d	html/group__triemanip.html	/^<a class="anchor" name="g05e0b1fcc12f456f69a4985dcf0f8b6d"><\/a><!-- doxytag: member="trie.h::trie_insert" ref="g05e0b1fcc12f456f69a4985dcf0f8b6d" args="(trie *haystack, wchar_t *key, void *payload, int flags)" -->$/;"	a
g1c5ab0d4697a49c88cf7047b7cedd348	html/group__cachefns.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g1c5ab0d4697a49c88cf7047b7cedd348"><\/a><!-- doxytag: member="cachefns::cache_set" ref="g1c5ab0d4697a49c88cf7047b7cedd348" args=")(void *, int32_t, int32_t, chunk *)" -->$/;"	a
g39113c8f08fa3a7a29bd99b0c2ac9d2b	html/group__cachefns.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g39113c8f08fa3a7a29bd99b0c2ac9d2b"><\/a><!-- doxytag: member="cachefns::cache_free" ref="g39113c8f08fa3a7a29bd99b0c2ac9d2b" args=")(void *)" -->$/;"	a
g536667b5f09c38442ac97c21ab69f535	html/group__list__auto__funcs.html	/^<a class="anchor" name="g536667b5f09c38442ac97c21ab69f535"><\/a><!-- doxytag: member="generic_structs.h::list_unshift" ref="g536667b5f09c38442ac97c21ab69f535" args="(list *haystack, void *data)" -->$/;"	a
g6689714c868285a8ff4e7d1110361e0f	html/group__list__node__funcs.html	/^<a class="anchor" name="g6689714c868285a8ff4e7d1110361e0f"><\/a><!-- doxytag: member="generic_structs.h::list_push_node" ref="g6689714c868285a8ff4e7d1110361e0f" args="(list *haystack, list_node *needle)" -->$/;"	a
g673332bfd02dd1f1840c6ba8309cf4d1	html/group__list__node__funcs.html	/^<a class="anchor" name="g673332bfd02dd1f1840c6ba8309cf4d1"><\/a><!-- doxytag: member="generic_structs.h::list_pop_node" ref="g673332bfd02dd1f1840c6ba8309cf4d1" args="(list *haystack)" -->$/;"	a
g6b4a539a1bfe5f752b86b168b057261c	html/group__list__constructor__funcs.html	/^<a class="anchor" name="g6b4a539a1bfe5f752b86b168b057261c"><\/a><!-- doxytag: member="generic_structs.h::list_node_free" ref="g6b4a539a1bfe5f752b86b168b057261c" args="(list_node *doomed, void(*node_free_func)(void *))" -->$/;"	a
g7fb74cb6df4930d251e9ac6423d4d7b1	html/group__cachefns.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7fb74cb6df4930d251e9ac6423d4d7b1"><\/a><!-- doxytag: member="cachefns::cache_init" ref="g7fb74cb6df4930d251e9ac6423d4d7b1" args=")(void *)" -->$/;"	a
g8398803c8d85f51a3b6a6cb627836ab9	html/group__triesearch.html	/^<a class="anchor" name="g8398803c8d85f51a3b6a6cb627836ab9"><\/a><!-- doxytag: member="trie.h::trie_search_node_closest" ref="g8398803c8d85f51a3b6a6cb627836ab9" args="(trie *haystack, wchar_t *key, trie_node **result, int *string_index)" -->$/;"	a
g88ac8aeba8c37680a5d5337fbd74e86d	html/group__list__constructor__funcs.html	/^<a class="anchor" name="g88ac8aeba8c37680a5d5337fbd74e86d"><\/a><!-- doxytag: member="generic_structs.h::list_free" ref="g88ac8aeba8c37680a5d5337fbd74e86d" args="(list *doomed)" -->$/;"	a
g9591cc599a3abd0ad11ea36dd1de52b5	html/group__slabcachefns.html	/^<a class="anchor" name="g9591cc599a3abd0ad11ea36dd1de52b5"><\/a><!-- doxytag: member="slab.h::cache_slab_free" ref="g9591cc599a3abd0ad11ea36dd1de52b5" args="(chunk_cache *doomed)" -->$/;"	a
g9d8f42737863d11f881081d0ee22daec	html/group__triedeconstruct.html	/^<a class="anchor" name="g9d8f42737863d11f881081d0ee22daec"><\/a><!-- doxytag: member="trie.h::trie_free_node" ref="g9d8f42737863d11f881081d0ee22daec" args="(trie_node *doomed, trie_free_func free_func)" -->$/;"	a
ga6b21427d10b9c5a9a38339d19f57acd	html/group__list__node__funcs.html	/^<a class="anchor" name="ga6b21427d10b9c5a9a38339d19f57acd"><\/a><!-- doxytag: member="generic_structs.h::list_shift_node" ref="ga6b21427d10b9c5a9a38339d19f57acd" args="(list *haystack)" -->$/;"	a
gada9c5cc3be4396ce87c57ab5fa45b50	html/group__cachefns.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gada9c5cc3be4396ce87c57ab5fa45b50"><\/a><!-- doxytag: member="cachefns::cache_empty" ref="gada9c5cc3be4396ce87c57ab5fa45b50" args=")(void *)" -->$/;"	a
gb4ff3e1abf5c121ba56e62b27c9ac2cb	html/group__cachefns.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb4ff3e1abf5c121ba56e62b27c9ac2cb"><\/a><!-- doxytag: member="cachefns::cache_get" ref="gb4ff3e1abf5c121ba56e62b27c9ac2cb" args=")(void *, int32_t, int32_t)" -->$/;"	a
gb8ca6edb590c2dd9b31d8bc1c8292ab2	html/group__triemisc.html	/^<a class="anchor" name="gb8ca6edb590c2dd9b31d8bc1c8292ab2"><\/a><!-- doxytag: member="trie.h::trie_sanity_check" ref="gb8ca6edb590c2dd9b31d8bc1c8292ab2" args="(trie *haystack, wchar_t *key)" -->$/;"	a
gba25fe5533198e7924b9318b66df5b42	html/group__utf8flags.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gba25fe5533198e7924b9318b66df5b42"><\/a><!-- doxytag: member="utf8flags::UTF8_SKIP_BOM" ref="gba25fe5533198e7924b9318b66df5b42" args="" -->$/;"	a
gba25fe5533198e7924b9318b66df5b42	html/utf8_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gba25fe5533198e7924b9318b66df5b42"><\/a><!-- doxytag: member="utf8.h::UTF8_SKIP_BOM" ref="gba25fe5533198e7924b9318b66df5b42" args="" -->$/;"	a
gbbe6c60c63edff6eabbf8252f9aa5180	html/group__list__auto__funcs.html	/^<a class="anchor" name="gbbe6c60c63edff6eabbf8252f9aa5180"><\/a><!-- doxytag: member="generic_structs.h::list_pop" ref="gbbe6c60c63edff6eabbf8252f9aa5180" args="(list *haystack)" -->$/;"	a
gbd89a76bf3680f45a06e3329dece7d23	html/group__list__auto__funcs.html	/^<a class="anchor" name="gbd89a76bf3680f45a06e3329dece7d23"><\/a><!-- doxytag: member="generic_structs.h::list_push" ref="gbd89a76bf3680f45a06e3329dece7d23" args="(list *haystack, void *data)" -->$/;"	a
gcca35d000d1c934b3c87577bc2758b36	html/group__trieconstruct.html	/^<a class="anchor" name="gcca35d000d1c934b3c87577bc2758b36"><\/a><!-- doxytag: member="trie.h::trie_new" ref="gcca35d000d1c934b3c87577bc2758b36" args="(trie_free_func free_func)" -->$/;"	a
gd21dcd7119414b41ba45f3010de4d35a	html/group__triesearch.html	/^<a class="anchor" name="gd21dcd7119414b41ba45f3010de4d35a"><\/a><!-- doxytag: member="trie.h::trie_search_node" ref="gd21dcd7119414b41ba45f3010de4d35a" args="(trie *haystack, wchar_t *key)" -->$/;"	a
gd8c9a7c4a6443fa1c5f3d32bef504159	html/group__list__constructor__funcs.html	/^<a class="anchor" name="gd8c9a7c4a6443fa1c5f3d32bef504159"><\/a><!-- doxytag: member="generic_structs.h::list_new" ref="gd8c9a7c4a6443fa1c5f3d32bef504159" args="(void *data, void(*node_free_func)(void *))" -->$/;"	a
gd98772f7ac5b2fca9a1bac6b60f850fc	html/group__list__node__funcs.html	/^<a class="anchor" name="gd98772f7ac5b2fca9a1bac6b60f850fc"><\/a><!-- doxytag: member="generic_structs.h::list_unshift_node" ref="gd98772f7ac5b2fca9a1bac6b60f850fc" args="(list *haystack, list_node *needle)" -->$/;"	a
gd9b42b61f67acc3803ef15528bf1528c	html/group__triemisc.html	/^<a class="anchor" name="gd9b42b61f67acc3803ef15528bf1528c"><\/a><!-- doxytag: member="trie.h::trie_traverse" ref="gd9b42b61f67acc3803ef15528bf1528c" args="(trie *haystack, tree_traverse_func traverse_func)" -->$/;"	a
ge472b078bcae3ed70ddac077cf8f573c	html/group__list__auto__funcs.html	/^<a class="anchor" name="ge472b078bcae3ed70ddac077cf8f573c"><\/a><!-- doxytag: member="generic_structs.h::list_shift" ref="ge472b078bcae3ed70ddac077cf8f573c" args="(list *haystack)" -->$/;"	a
ge496f117566016dc8750c37e46ed776e	html/group__triesearch.html	/^<a class="anchor" name="ge496f117566016dc8750c37e46ed776e"><\/a><!-- doxytag: member="trie.h::trie_search" ref="ge496f117566016dc8750c37e46ed776e" args="(trie *haystack, wchar_t *key)" -->$/;"	a
ge8b79b847a2a7a3c7276d5a3512d141d	html/group__slabcachefns.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge8b79b847a2a7a3c7276d5a3512d141d"><\/a><!-- doxytag: member="slabcachefns::cache_slab_set" ref="ge8b79b847a2a7a3c7276d5a3512d141d" args="(chunk_cache *cache, int32_t coord_x, int32_t coord_z, chunk *payload)" -->$/;"	a
geccde6efd1d997592cec15047279b085	html/group__utf8flags.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="geccde6efd1d997592cec15047279b085"><\/a><!-- doxytag: member="utf8flags::UTF8_IGNORE_ERROR" ref="geccde6efd1d997592cec15047279b085" args="" -->$/;"	a
geccde6efd1d997592cec15047279b085	html/utf8_8h.html	/^<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="geccde6efd1d997592cec15047279b085"><\/a><!-- doxytag: member="utf8.h::UTF8_IGNORE_ERROR" ref="geccde6efd1d997592cec15047279b085" args="" -->$/;"	a
get	includes/cache.h	/^    chunk* (*get)(void*,int64_t);$/;"	m	struct:__anon12
get	includes/colors.h	/^    color_get_func get; \/**< \\brief The function to use to get the color associated with a block *\/$/;"	m	struct:__anon11
gfc62b472233ea0704a31c3657e0df6a8	html/group__triedeconstruct.html	/^<a class="anchor" name="gfc62b472233ea0704a31c3657e0df6a8"><\/a><!-- doxytag: member="trie.h::trie_free" ref="gfc62b472233ea0704a31c3657e0df6a8" args="(trie *doomed)" -->$/;"	a
h	includes/hashtable_itr.h	/^    struct hashtable *h;    \/**< \\brief The hash table to iterate over *\/$/;"	m	struct:hashtable_itr	typeref:struct:hashtable_itr::hashtable
h	includes/hashtable_private.h	/^    unsigned int h;     \/**< \\brief The hash value of this bucket *\/$/;"	m	struct:entry
hash	hashtable.c	/^hash(struct hashtable *h, void *k)$/;"	f
hashfn	includes/hashtable_private.h	/^    unsigned int (*hashfn) (void *k);   \/**< \\brief Function to use to generate$/;"	m	struct:hashtable
hashtable	includes/hashtable_private.h	/^struct hashtable {$/;"	s
hashtable_count	hashtable.c	/^hashtable_count(struct hashtable *h)$/;"	f
hashtable_destroy	hashtable.c	/^hashtable_destroy(struct hashtable *h, int free_values)$/;"	f
hashtable_expand	hashtable.c	/^hashtable_expand(struct hashtable *h)$/;"	f	file:
hashtable_insert	hashtable.c	/^hashtable_insert(struct hashtable *h, void *k, void *v)$/;"	f
hashtable_iterator	hashtable_itr.c	/^hashtable_iterator(struct hashtable *h)$/;"	f
hashtable_iterator_advance	hashtable_itr.c	/^hashtable_iterator_advance(struct hashtable_itr *itr)$/;"	f
hashtable_iterator_key	hashtable_itr.c	/^hashtable_iterator_key(struct hashtable_itr *i)$/;"	f
hashtable_iterator_key	includes/hashtable_itr.h	/^hashtable_iterator_key(struct hashtable_itr *i)$/;"	f
hashtable_iterator_remove	hashtable_itr.c	/^hashtable_iterator_remove(struct hashtable_itr *itr)$/;"	f
hashtable_iterator_search	hashtable_itr.c	/^hashtable_iterator_search(struct hashtable_itr *itr,$/;"	f
hashtable_iterator_value	hashtable_itr.c	/^hashtable_iterator_value(struct hashtable_itr *i)$/;"	f
hashtable_iterator_value	includes/hashtable_itr.h	/^hashtable_iterator_value(struct hashtable_itr *i)$/;"	f
hashtable_itr	includes/hashtable_itr.h	/^struct hashtable_itr$/;"	s
hashtable_remove	hashtable.c	/^hashtable_remove(struct hashtable *h, void *k)$/;"	f
hashtable_search	hashtable.c	/^hashtable_search(struct hashtable *h, void *k)$/;"	f
height	includes/chunk.h	/^    uint64_t height;    \/**< \\brief How tall this chunk is, in blocks *\/$/;"	m	struct:__anon1
heightmap	includes/chunk.h	/^    uint8_t *heightmap;     \/**< \\brief The height map of this chunk *\/$/;"	m	struct:__anon1
hex_dump	nbt.c	/^void hex_dump(void *string, int string_length, int indent, int flags)$/;"	f
hex_dump_flags	includes/nbt.h	/^enum hex_dump_flags$/;"	g
hex_print	main.c	/^void hex_print(void *hex, int len)$/;"	f
index	includes/hashtable_itr.h	/^    unsigned int index;     \/**< \\brief The numeric index of the current entry.$/;"	m	struct:hashtable_itr
indexFor	hashtable.c	/^unsigned int indexFor(unsigned int tablelength, unsigned int hashvalue) {$/;"	f
index_b	html/functions.html	/^<h3><a class="anchor" name="index_b">- b -<\/a><\/h3><ul>$/;"	a
index_b	html/functions_vars.html	/^<h3><a class="anchor" name="index_b">- b -<\/a><\/h3><ul>$/;"	a
index_b	html/globals.html	/^<h3><a class="anchor" name="index_b">- b -<\/a><\/h3><ul>$/;"	a
index_b	html/globals_eval.html	/^<h3><a class="anchor" name="index_b">- b -<\/a><\/h3><ul>$/;"	a
index_b	html/globals_func.html	/^<h3><a class="anchor" name="index_b">- b -<\/a><\/h3><ul>$/;"	a
index_c	html/functions.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_c	html/functions_vars.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_c	html/globals.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_c	html/globals_eval.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_c	html/globals_func.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_d	html/functions.html	/^<h3><a class="anchor" name="index_d">- d -<\/a><\/h3><ul>$/;"	a
index_d	html/functions_vars.html	/^<h3><a class="anchor" name="index_d">- d -<\/a><\/h3><ul>$/;"	a
index_e	html/functions.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_e	html/functions_vars.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_e	html/globals.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_e	html/globals_eval.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_f	html/functions.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_f	html/functions_vars.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_f	html/globals.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_f	html/globals_func.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_g	html/functions.html	/^<h3><a class="anchor" name="index_g">- g -<\/a><\/h3><ul>$/;"	a
index_g	html/functions_vars.html	/^<h3><a class="anchor" name="index_g">- g -<\/a><\/h3><ul>$/;"	a
index_h	html/functions.html	/^<h3><a class="anchor" name="index_h">- h -<\/a><\/h3><ul>$/;"	a
index_h	html/functions_vars.html	/^<h3><a class="anchor" name="index_h">- h -<\/a><\/h3><ul>$/;"	a
index_h	html/globals.html	/^<h3><a class="anchor" name="index_h">- h -<\/a><\/h3><ul>$/;"	a
index_h	html/globals_func.html	/^<h3><a class="anchor" name="index_h">- h -<\/a><\/h3><ul>$/;"	a
index_i	html/functions.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_i	html/functions_vars.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_i	html/globals.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_i	html/globals_func.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_k	html/functions.html	/^<h3><a class="anchor" name="index_k">- k -<\/a><\/h3><ul>$/;"	a
index_k	html/functions_vars.html	/^<h3><a class="anchor" name="index_k">- k -<\/a><\/h3><ul>$/;"	a
index_l	html/functions.html	/^<h3><a class="anchor" name="index_l">- l -<\/a><\/h3><ul>$/;"	a
index_l	html/functions_vars.html	/^<h3><a class="anchor" name="index_l">- l -<\/a><\/h3><ul>$/;"	a
index_l	html/globals.html	/^<h3><a class="anchor" name="index_l">- l -<\/a><\/h3><ul>$/;"	a
index_l	html/globals_func.html	/^<h3><a class="anchor" name="index_l">- l -<\/a><\/h3><ul>$/;"	a
index_m	html/functions.html	/^<h3><a class="anchor" name="index_m">- m -<\/a><\/h3><ul>$/;"	a
index_m	html/functions_vars.html	/^<h3><a class="anchor" name="index_m">- m -<\/a><\/h3><ul>$/;"	a
index_m	html/globals.html	/^<h3><a class="anchor" name="index_m">- m -<\/a><\/h3><ul>$/;"	a
index_m	html/globals_func.html	/^<h3><a class="anchor" name="index_m">- m -<\/a><\/h3><ul>$/;"	a
index_n	html/functions.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_n	html/functions_vars.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_n	html/globals.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_n	html/globals_eval.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_n	html/globals_func.html	/^<h3><a class="anchor" name="index_n">- n -<\/a><\/h3><ul>$/;"	a
index_o	html/functions.html	/^<h3><a class="anchor" name="index_o">- o -<\/a><\/h3><ul>$/;"	a
index_o	html/functions_vars.html	/^<h3><a class="anchor" name="index_o">- o -<\/a><\/h3><ul>$/;"	a
index_p	html/functions.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_p	html/functions_vars.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_p	html/globals.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_p	html/globals_func.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_r	html/globals.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_r	html/globals_eval.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_r	html/globals_func.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_s	html/functions.html	/^<h3><a class="anchor" name="index_s">- s -<\/a><\/h3><ul>$/;"	a
index_s	html/functions_vars.html	/^<h3><a class="anchor" name="index_s">- s -<\/a><\/h3><ul>$/;"	a
index_t	html/functions.html	/^<h3><a class="anchor" name="index_t">- t -<\/a><\/h3><ul>$/;"	a
index_t	html/functions_vars.html	/^<h3><a class="anchor" name="index_t">- t -<\/a><\/h3><ul>$/;"	a
index_t	html/globals.html	/^<h3><a class="anchor" name="index_t">- t -<\/a><\/h3><ul>$/;"	a
index_t	html/globals_eval.html	/^<h3><a class="anchor" name="index_t">- t -<\/a><\/h3><ul>$/;"	a
index_u	html/globals.html	/^<h3><a class="anchor" name="index_u">- u -<\/a><\/h3><ul>$/;"	a
index_u	html/globals_func.html	/^<h3><a class="anchor" name="index_u">- u -<\/a><\/h3><ul>$/;"	a
index_v	html/functions.html	/^<h3><a class="anchor" name="index_v">- v -<\/a><\/h3><ul>$/;"	a
index_v	html/functions_vars.html	/^<h3><a class="anchor" name="index_v">- v -<\/a><\/h3><ul>$/;"	a
index_v	html/globals.html	/^<h3><a class="anchor" name="index_v">- v -<\/a><\/h3><ul>$/;"	a
index_w	html/globals.html	/^<h3><a class="anchor" name="index_w">- w -<\/a><\/h3><ul>$/;"	a
index_w	html/globals_func.html	/^<h3><a class="anchor" name="index_w">- w -<\/a><\/h3><ul>$/;"	a
input_path	includes/config.h	/^    char          *input_path;            \/**< Location of the directory containing the map chunks, as provided by the user. *\/$/;"	m	struct:__anon8
input_path	includes/level.h	/^    char *input_path;       \/**< \\brief The base path for all of the tag data$/;"	m	struct:__anon4
int_payload	includes/nbt.h	/^    int32_t int_payload;         \/**< \\brief Payload for TAG_Int tags. *\/$/;"	m	union:__anon5
k	includes/hashtable_private.h	/^    void *k;            \/**< \\brief The key of this entry *\/$/;"	m	struct:entry
l00001	html/cache_8h-source.html	/^<h1>includes\/cache.h<\/h1><a href="cache_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/chunk_8h-source.html	/^<h1>includes\/chunk.h<\/h1><a href="chunk_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/colors_8h-source.html	/^<h1>includes\/colors.h<\/h1><a href="colors_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/config_8h-source.html	/^<h1>includes\/config.h<\/h1><a href="config_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/flat_8h-source.html	/^<h1>includes\/renderers\/flat.h<\/h1><a href="flat_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/generic__structs_8h-source.html	/^<h1>includes\/generic_structs.h<\/h1><a href="generic__structs_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/hardcoded_8h-source.html	/^<h1>includes\/colors\/hardcoded.h<\/h1><a href="hardcoded_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/hashtable_8h-source.html	/^<h1>includes\/hashtable.h<\/h1><a href="hashtable_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/* Copyright (C) 2002 Christopher Clark &lt;firstname.lastname@cl.cam.ac.uk&gt; *\/<\/span>$/;"	a
l00001	html/hashtable__itr_8h-source.html	/^<h1>includes\/hashtable_itr.h<\/h1><a href="hashtable__itr_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/* Copyright (C) 2002, 2004 Christopher Clark &lt;firstname.lastname@cl.cam.ac.uk&gt; *\/<\/span>$/;"	a
l00001	html/hashtable__private_8h-source.html	/^<h1>includes\/hashtable_private.h<\/h1><a href="hashtable__private_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/* Copyright (C) 2002, 2004 Christopher Clark &lt;firstname.lastname@cl.cam.ac.uk&gt; *\/<\/span>$/;"	a
l00001	html/level_8h-source.html	/^<h1>includes\/level.h<\/h1><a href="level_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/linked__list_8h-source.html	/^<h1>includes\/linked_list.h<\/h1><a href="linked__list_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/main_8h-source.html	/^<h1>includes\/main.h<\/h1><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="preprocessor">#ifndef MAIN_H<\/span>$/;"	a
l00001	html/maths_8h-source.html	/^<h1>includes\/maths.h<\/h1><a href="maths_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/nbt_8h-source.html	/^<h1>includes\/nbt.h<\/h1><a href="nbt_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/patricia_8h-source.html	/^<h1>includes\/patricia.h<\/h1><a href="patricia_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/read__nbt_8h-source.html	/^<h1>includes\/read_nbt.h<\/h1><a href="read__nbt_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/renderer_8h-source.html	/^<h1>includes\/renderer.h<\/h1><a href="renderer_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/slab_8h-source.html	/^<h1>includes\/caches\/slab.h<\/h1><a href="slab_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/structs_8h-source.html	/^<h1>includes\/structs.h<\/h1><a href="structs_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/trie_8h-source.html	/^<h1>includes\/trie.h<\/h1><a href="trie_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00001	html/utf8_8h-source.html	/^<h1>includes\/utf8.h<\/h1><a href="utf8_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 $/;"	a
l00002	html/hashtable_8h-source.html	/^<a name="l00002"><\/a>00002 $/;"	a
l00002	html/hashtable__itr_8h-source.html	/^<a name="l00002"><\/a>00002 $/;"	a
l00002	html/hashtable__private_8h-source.html	/^<a name="l00002"><\/a>00002 $/;"	a
l00002	html/main_8h-source.html	/^<a name="l00002"><\/a>00002 <span class="preprocessor"><\/span><span class="preprocessor">#define MAIN_H<\/span>$/;"	a
l00003	html/main_8h-source.html	/^<a name="l00003"><\/a>00003 <span class="preprocessor"><\/span>$/;"	a
l00004	html/cache_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef CACHE_H<\/span>$/;"	a
l00004	html/config_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef CONFIG_H<\/span>$/;"	a
l00004	html/generic__structs_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef GENERIC_STRUCTS_H<\/span>$/;"	a
l00004	html/hardcoded_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef COLOR_MAP_HARDCODED_H<\/span>$/;"	a
l00004	html/linked__list_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef GENERIC_STRUCTS_H<\/span>$/;"	a
l00004	html/main_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="keywordtype">void<\/span> print_help(<span class="keywordtype">void<\/span>);$/;"	a
l00004	html/nbt_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef NBT_H<\/span>$/;"	a
l00004	html/structs_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="preprocessor">#ifndef STRUCTURES_H<\/span>$/;"	a
l00005	html/cache_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define CACHE_H<\/span>$/;"	a
l00005	html/colors_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor">#ifndef COLORS_H<\/span>$/;"	a
l00005	html/config_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define CONFIG_H<\/span>$/;"	a
l00005	html/flat_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor">#ifndef RENDERER_FLAT_H<\/span>$/;"	a
l00005	html/generic__structs_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define GENERIC_STRUCTS_H<\/span>$/;"	a
l00005	html/hardcoded_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define COLOR_MAP_HARDCODED_H<\/span>$/;"	a
l00005	html/level_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor">#ifndef LEVEL_H<\/span>$/;"	a
l00005	html/linked__list_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define GENERIC_STRUCTS_H<\/span>$/;"	a
l00005	html/main_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="keywordtype">void<\/span> free_string(<span class="keywordtype">void<\/span> *str);$/;"	a
l00005	html/nbt_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define NBT_H<\/span>$/;"	a
l00005	html/read__nbt_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor">#ifndef READ_NBT_H<\/span>$/;"	a
l00005	html/renderer_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor">#ifndef RENDERER_H<\/span>$/;"	a
l00005	html/slab_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor">#ifndef CACHES_SLAB_H<\/span>$/;"	a
l00005	html/structs_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="preprocessor"><\/span><span class="preprocessor">#define STRUCTURES_H<\/span>$/;"	a
l00006	html/cache_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00006	html/chunk_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor">#ifndef CHUNK_H<\/span>$/;"	a
l00006	html/colors_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span><span class="preprocessor">#define COLORS_H<\/span>$/;"	a
l00006	html/config_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00006	html/flat_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span><span class="preprocessor">#define RENDERER_FLAT_H<\/span>$/;"	a
l00006	html/generic__structs_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00006	html/hardcoded_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00006	html/level_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span><span class="preprocessor">#define LEVEL_H<\/span>$/;"	a
l00006	html/linked__list_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00006	html/main_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="keywordtype">void<\/span> hex_print(<span class="keywordtype">void<\/span> *hex, <span class="keywordtype">int<\/span> len);$/;"	a
l00006	html/maths_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor">#ifndef MATHS_H<\/span>$/;"	a
l00006	html/nbt_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00006	html/read__nbt_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span><span class="preprocessor">#define READ_NBT_H<\/span>$/;"	a
l00006	html/renderer_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span><span class="preprocessor">#define RENDERER_H<\/span>$/;"	a
l00006	html/slab_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span><span class="preprocessor">#define CACHES_SLAB_H<\/span>$/;"	a
l00006	html/structs_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="preprocessor"><\/span>$/;"	a
l00007	html/cache_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor">#include "<a class="code" href="chunk_8h.html" title="Structures to represent and functions to manipulate chunks of map data in Minecraft...">chunk.h<\/a>"<\/span>$/;"	a
l00007	html/chunk_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span><span class="preprocessor">#define CHUNK_H<\/span>$/;"	a
l00007	html/colors_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span>$/;"	a
l00007	html/flat_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span>$/;"	a
l00007	html/hardcoded_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor">#include &lt;stdint.h&gt;<\/span>$/;"	a
l00007	html/hashtable__itr_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor">#ifndef __HASHTABLE_ITR_CWC22__<\/span>$/;"	a
l00007	html/level_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span>$/;"	a
l00007	html/main_8h-source.html	/^<a name="l00007"><\/a>00007 $/;"	a
l00007	html/maths_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span><span class="preprocessor">#define MATHS_H<\/span>$/;"	a
l00007	html/nbt_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor">#include &lt;stdint.h&gt;<\/span>$/;"	a
l00007	html/patricia_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor">#ifndef PATRICIA_H<\/span>$/;"	a
l00007	html/read__nbt_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span>$/;"	a
l00007	html/renderer_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span>$/;"	a
l00007	html/slab_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor"><\/span>$/;"	a
l00007	html/structs_8h-source.html	/^<a name="l00007"><\/a>00007 $/;"	a
l00007	html/trie_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="preprocessor">#ifndef TRIE_H<\/span>$/;"	a
l00008	html/cache_8h-source.html	/^<a name="l00008"><\/a>00008 $/;"	a
l00008	html/chunk_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor"><\/span>$/;"	a
l00008	html/colors_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include &lt;png.h&gt;<\/span>$/;"	a
l00008	html/config_8h-source.html	/^<a name="l00008"><\/a><a class="code" href="config_8h.html#6f9ae23de9ad9205b39020ff8eed6fc8">00008<\/a> <span class="preprocessor">#define MINEMAP_VERSION "0.0.1"<\/span>$/;"	a
l00008	html/flat_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include &lt;png.h&gt;<\/span>$/;"	a
l00008	html/hardcoded_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include &lt;png.h&gt;<\/span>$/;"	a
l00008	html/hashtable_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#ifndef __HASHTABLE_CWC22_H__<\/span>$/;"	a
l00008	html/hashtable__itr_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor"><\/span><span class="preprocessor">#define __HASHTABLE_ITR_CWC22__<\/span>$/;"	a
l00008	html/hashtable__private_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#ifndef __HASHTABLE_PRIVATE_CWC22_H__<\/span>$/;"	a
l00008	html/level_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include "<a class="code" href="nbt_8h.html" title="Data structures and functions for Named Binary Tag (NBT) objects.">nbt.h<\/a>"<\/span>$/;"	a
l00008	html/linked__list_8h-source.html	/^<a name="l00008"><\/a><a class="code" href="linked__list_8h.html#bc386d72b631c5cb6ede642cc2f9c8f1">00008<\/a> <span class="keyword">typedef<\/span> void (*<a class="code" href="linked__list_8h.html#bc386d72b631c5cb6ede642cc2f9c8f1" title="Used to typecast functions to the type expected by the data member data_free_func...">list_free_func<\/a>)(<span class="keywordtype">void<\/span>*);$/;"	a
l00008	html/main_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#endif<\/span>$/;"	a
l00008	html/maths_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor"><\/span>$/;"	a
l00008	html/nbt_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include &lt;stdarg.h&gt;<\/span>$/;"	a
l00008	html/patricia_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor"><\/span><span class="preprocessor">#define PATRICIA_H<\/span>$/;"	a
l00008	html/read__nbt_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include &lt;zlib.h&gt;<\/span>$/;"	a
l00008	html/renderer_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include &lt;stdio.h&gt;<\/span>$/;"	a
l00008	html/slab_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#include "<a class="code" href="cache_8h.html" title="The base object for all chunk caches.">cache.h<\/a>"<\/span>$/;"	a
l00008	html/structs_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor">#endif<\/span>$/;"	a
l00008	html/trie_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="preprocessor"><\/span><span class="preprocessor">#define TRIE_H<\/span>$/;"	a
l00008	html/utf8_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="comment">\/*<\/span>$/;"	a
l00009	html/chunk_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include "<a class="code" href="nbt_8h.html" title="Data structures and functions for Named Binary Tag (NBT) objects.">nbt.h<\/a>"<\/span>$/;"	a
l00009	html/colors_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include &lt;stdio.h&gt;<\/span>$/;"	a
l00009	html/config_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor"><\/span>$/;"	a
l00009	html/flat_8h-source.html	/^<a name="l00009"><\/a>00009 $/;"	a
l00009	html/generic__structs_8h-source.html	/^<a name="l00009"><\/a><a class="code" href="structlist__node__s.html">00009<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node_s<\/a>$/;"	a
l00009	html/hardcoded_8h-source.html	/^<a name="l00009"><\/a>00009 $/;"	a
l00009	html/hashtable_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor"><\/span><span class="preprocessor">#define __HASHTABLE_CWC22_H__<\/span>$/;"	a
l00009	html/hashtable__itr_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor"><\/span><span class="preprocessor">#include "<a class="code" href="hashtable_8h.html" title="Implementation of a hash table.">hashtable.h<\/a>"<\/span>$/;"	a
l00009	html/hashtable__private_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor"><\/span><span class="preprocessor">#define __HASHTABLE_PRIVATE_CWC22_H__<\/span>$/;"	a
l00009	html/level_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include "<a class="code" href="chunk_8h.html" title="Structures to represent and functions to manipulate chunks of map data in Minecraft...">chunk.h<\/a>"<\/span>$/;"	a
l00009	html/linked__list_8h-source.html	/^<a name="l00009"><\/a>00009 $/;"	a
l00009	html/maths_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include &lt;stdint.h&gt;<\/span>$/;"	a
l00009	html/nbt_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include &lt;wchar.h&gt;<\/span>$/;"	a
l00009	html/patricia_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor"><\/span>$/;"	a
l00009	html/read__nbt_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include "<a class="code" href="nbt_8h.html" title="Data structures and functions for Named Binary Tag (NBT) objects.">nbt.h<\/a>"<\/span>$/;"	a
l00009	html/renderer_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include &lt;png.h&gt;<\/span>$/;"	a
l00009	html/slab_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor">#include "<a class="code" href="chunk_8h.html" title="Structures to represent and functions to manipulate chunks of map data in Minecraft...">chunk.h<\/a>"<\/span>$/;"	a
l00009	html/trie_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="preprocessor"><\/span>$/;"	a
l00009	html/utf8_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="comment"> * Copyright (c) 2007 Alexey Vatchenko &lt;av@bsdua.org&gt;<\/span>$/;"	a
l00010	html/chunk_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include "<a class="code" href="maths_8h.html" title="Generic mathing routines.">maths.h<\/a>"<\/span>$/;"	a
l00010	html/colors_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include &lt;stdint.h&gt;<\/span>$/;"	a
l00010	html/config_8h-source.html	/^<a name="l00010"><\/a><a class="code" href="config_8h.html#7dd7516048ddf098b17b069c4b562e22">00010<\/a> <span class="preprocessor">#define CONFIG_BUFFER_SIZE 64<\/span>$/;"	a
l00010	html/flat_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include "<a class="code" href="level_8h.html">level.h<\/a>"<\/span>$/;"	a
l00010	html/generic__structs_8h-source.html	/^<a name="l00010"><\/a>00010 {$/;"	a
l00010	html/hardcoded_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include "<a class="code" href="colors_8h.html" title="Generates colors that correspond with minecraft blocks.">colors.h<\/a>"<\/span>$/;"	a
l00010	html/hashtable_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor"><\/span>$/;"	a
l00010	html/hashtable__itr_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include "<a class="code" href="hashtable__private_8h.html">hashtable_private.h<\/a>"<\/span> <span class="comment">\/* needed to enable inlining *\/<\/span>$/;"	a
l00010	html/hashtable__private_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor"><\/span>$/;"	a
l00010	html/level_8h-source.html	/^<a name="l00010"><\/a>00010 $/;"	a
l00010	html/maths_8h-source.html	/^<a name="l00010"><\/a>00010 $/;"	a
l00010	html/nbt_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include "<a class="code" href="linked__list_8h.html" title="Implements a doubly-linked list.">linked_list.h<\/a>"<\/span>$/;"	a
l00010	html/read__nbt_8h-source.html	/^<a name="l00010"><\/a>00010 $/;"	a
l00010	html/renderer_8h-source.html	/^<a name="l00010"><\/a>00010 $/;"	a
l00010	html/slab_8h-source.html	/^<a name="l00010"><\/a>00010 $/;"	a
l00010	html/trie_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="preprocessor">#include "<a class="code" href="linked__list_8h.html" title="Implements a doubly-linked list.">linked_list.h<\/a>"<\/span>$/;"	a
l00010	html/utf8_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="comment"> *<\/span>$/;"	a
l00011	html/cache_8h-source.html	/^<a name="l00011"><\/a><a class="code" href="structchunk__cache.html">00011<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00011	html/chunk_8h-source.html	/^<a name="l00011"><\/a>00011 $/;"	a
l00011	html/colors_8h-source.html	/^<a name="l00011"><\/a>00011 $/;"	a
l00011	html/config_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="preprocessor"><\/span>$/;"	a
l00011	html/flat_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="preprocessor">#include "<a class="code" href="colors_8h.html" title="Generates colors that correspond with minecraft blocks.">colors.h<\/a>"<\/span>$/;"	a
l00011	html/generic__structs_8h-source.html	/^<a name="l00011"><\/a><a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056">00011<\/a>     <span class="keywordtype">void<\/span> *<a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056" title="The data payload for this node.">data<\/a>;        $/;"	a
l00011	html/hardcoded_8h-source.html	/^<a name="l00011"><\/a>00011 $/;"	a
l00011	html/hashtable_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="preprocessor">#include "<a class="code" href="hashtable__private_8h.html">hashtable_private.h<\/a>"<\/span>$/;"	a
l00011	html/hashtable__itr_8h-source.html	/^<a name="l00011"><\/a>00011 $/;"	a
l00011	html/hashtable__private_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="preprocessor">#include "<a class="code" href="hashtable_8h.html" title="Implementation of a hash table.">hashtable.h<\/a>"<\/span>$/;"	a
l00011	html/nbt_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="preprocessor">#include "<a class="code" href="hashtable__private_8h.html">hashtable_private.h<\/a>"<\/span>$/;"	a
l00011	html/patricia_8h-source.html	/^<a name="l00011"><\/a><a class="code" href="structtrie__node__s.html">00011<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node_s<\/a>$/;"	a
l00011	html/renderer_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="preprocessor">#include "<a class="code" href="level_8h.html">level.h<\/a>"<\/span>$/;"	a
l00011	html/trie_8h-source.html	/^<a name="l00011"><\/a>00011 $/;"	a
l00011	html/utf8_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="comment"> * Permission to use, copy, modify, and\/or distribute this software for any<\/span>$/;"	a
l00012	html/cache_8h-source.html	/^<a name="l00012"><\/a>00012 {$/;"	a
l00012	html/flat_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="preprocessor">#include "<a class="code" href="chunk_8h.html" title="Structures to represent and functions to manipulate chunks of map data in Minecraft...">chunk.h<\/a>"<\/span>$/;"	a
l00012	html/generic__structs_8h-source.html	/^<a name="l00012"><\/a><a class="code" href="structlist__node__s.html#e514915b0307961b3b347e8991ed3f12">00012<\/a>     <span class="keyword">struct <\/span><a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node_s<\/a> *<a class="code" href="structlist__node__s.html#e514915b0307961b3b347e8991ed3f12" title="The previous item in the list.">prev<\/a>;   $/;"	a
l00012	html/hashtable_8h-source.html	/^<a name="l00012"><\/a>00012 $/;"	a
l00012	html/hashtable__itr_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00012	html/hashtable__private_8h-source.html	/^<a name="l00012"><\/a>00012 $/;"	a
l00012	html/level_8h-source.html	/^<a name="l00012"><\/a><a class="code" href="level_8h.html#b502615143dc6dfa64217865e2982fe6">00012<\/a> <span class="preprocessor">#define LEVEL_BASE_36_SIZE 16<\/span>$/;"	a
l00012	html/linked__list_8h-source.html	/^<a name="l00012"><\/a><a class="code" href="structlist__node__s.html">00012<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node_s<\/a>$/;"	a
l00012	html/maths_8h-source.html	/^<a name="l00012"><\/a><a class="code" href="maths_8h.html#0f86da1747cf66f61c1d66a81bd3e8c3">00012<\/a> <span class="keyword">enum<\/span> <a class="code" href="maths_8h.html#0f86da1747cf66f61c1d66a81bd3e8c3" title="Describes error codes passed by base36tobase10().">base36_error_codes<\/a>$/;"	a
l00012	html/nbt_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="preprocessor">#include "<a class="code" href="hashtable_8h.html" title="Implementation of a hash table.">hashtable.h<\/a>"<\/span>$/;"	a
l00012	html/patricia_8h-source.html	/^<a name="l00012"><\/a>00012 {$/;"	a
l00012	html/read__nbt_8h-source.html	/^<a name="l00012"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3">00012<\/a> <span class="keyword">enum<\/span> <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3" title="Error codes returned by nbt_read().">nbt_read_errors<\/a>$/;"	a
l00012	html/renderer_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="preprocessor">#include "<a class="code" href="hashtable_8h.html" title="Implementation of a hash table.">hashtable.h<\/a>"<\/span>$/;"	a
l00012	html/slab_8h-source.html	/^<a name="l00012"><\/a><a class="code" href="structcache__slab.html">00012<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00012	html/utf8_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="comment"> * purpose with or without fee is hereby granted, provided that the above<\/span>$/;"	a
l00013	html/chunk_8h-source.html	/^<a name="l00013"><\/a><a class="code" href="chunk_8h.html#1bdae46631ed1c470d4b51a8486ca4a6">00013<\/a> <span class="preprocessor">#define CHUNK_SIZE_X 16<\/span>$/;"	a
l00013	html/colors_8h-source.html	/^<a name="l00013"><\/a><a class="code" href="colors_8h.html#8b7771bbb0e029e9200b3a7ec9816204">00013<\/a> <span class="preprocessor">#define BLOCK_COUNT 256<\/span>$/;"	a
l00013	html/flat_8h-source.html	/^<a name="l00013"><\/a>00013 $/;"	a
l00013	html/generic__structs_8h-source.html	/^<a name="l00013"><\/a><a class="code" href="structlist__node__s.html#792a4f814d8d0c2106c6a63b0abf666d">00013<\/a>     <span class="keyword">struct <\/span><a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node_s<\/a> *<a class="code" href="structlist__node__s.html#792a4f814d8d0c2106c6a63b0abf666d" title="The next item in the list.">next<\/a>;   $/;"	a
l00013	html/hashtable_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment">\/* Example of use:<\/span>$/;"	a
l00013	html/hashtable__itr_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment">\/* This struct is only concrete here to allow the inlining of two of the<\/span>$/;"	a
l00013	html/hashtable__private_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00013	html/level_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="preprocessor"><\/span>$/;"	a
l00013	html/linked__list_8h-source.html	/^<a name="l00013"><\/a>00013 {$/;"	a
l00013	html/maths_8h-source.html	/^<a name="l00013"><\/a>00013 {$/;"	a
l00013	html/nbt_8h-source.html	/^<a name="l00013"><\/a>00013 $/;"	a
l00013	html/patricia_8h-source.html	/^<a name="l00013"><\/a><a class="code" href="structtrie__node__s.html#9b70c26d9f0e58da9540b19bd29793b3">00013<\/a>     uint32_t            <a class="code" href="structtrie__node__s.html#9b70c26d9f0e58da9540b19bd29793b3" title="The byte index of this node.">byte_index<\/a>; $/;"	a
l00013	html/read__nbt_8h-source.html	/^<a name="l00013"><\/a>00013 {$/;"	a
l00013	html/renderer_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="preprocessor">#include "<a class="code" href="chunk_8h.html" title="Structures to represent and functions to manipulate chunks of map data in Minecraft...">chunk.h<\/a>"<\/span>$/;"	a
l00013	html/slab_8h-source.html	/^<a name="l00013"><\/a>00013 {$/;"	a
l00013	html/trie_8h-source.html	/^<a name="l00013"><\/a><a class="code" href="structtrie__node__s.html">00013<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node_s<\/a>$/;"	a
l00013	html/utf8_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment"> * copyright notice and this permission notice appear in all copies.<\/span>$/;"	a
l00014	html/cache_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="structchunk__cache.html#085080bd9fb1ee1f52d21023b3cf661d">00014<\/a>     <span class="keywordtype">void<\/span> *data;$/;"	a
l00014	html/chunk_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="preprocessor"><\/span>$/;"	a
l00014	html/colors_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="preprocessor"><\/span>$/;"	a
l00014	html/config_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="config_8h.html#5ee393797e13f7310f704a05a31cbcc0">00014<\/a> <span class="keyword">enum<\/span> <a class="code" href="config_8h.html#5ee393797e13f7310f704a05a31cbcc0" title="Error codes sent by parse_commandline_options when an error is found.">config_errors<\/a> $/;"	a
l00014	html/generic__structs_8h-source.html	/^<a name="l00014"><\/a>00014 } <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a>;$/;"	a
l00014	html/hashtable_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="comment"> *<\/span>$/;"	a
l00014	html/hashtable__itr_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="comment"> * accessor functions. *\/<\/span>$/;"	a
l00014	html/linked__list_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056">00014<\/a>     <span class="keywordtype">void<\/span> *<a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056" title="The data payload for this node.">data<\/a>;        $/;"	a
l00014	html/maths_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="maths_8h.html#0f86da1747cf66f61c1d66a81bd3e8c38aae0da0f2b0f466c39ba4b8b56d3ca3">00014<\/a>     <a class="code" href="maths_8h.html#0f86da1747cf66f61c1d66a81bd3e8c38aae0da0f2b0f466c39ba4b8b56d3ca3">BASE36_OK<\/a>,              $/;"	a
l00014	html/patricia_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="structtrie__node__s.html#d4d5fdc8de43771e38a29da98a77f7d4">00014<\/a>     <span class="keyword">struct <\/span><a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node_s<\/a>  *<a class="code" href="structtrie__node__s.html#d4d5fdc8de43771e38a29da98a77f7d4" title="The node&amp;#39;s left child.">left<\/a>;      $/;"	a
l00014	html/read__nbt_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3ac99ef583c89662450830bd57206f7d9">00014<\/a>     <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3ac99ef583c89662450830bd57206f7d9" title="Everything is OK.">NBT_READ_OK<\/a>,                $/;"	a
l00014	html/renderer_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="preprocessor">#include "<a class="code" href="colors_8h.html" title="Generates colors that correspond with minecraft blocks.">colors.h<\/a>"<\/span>$/;"	a
l00014	html/slab_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="structcache__slab.html#6c655330cd0b8be34cab053007f9e19f">00014<\/a>     <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> **chunks;   $/;"	a
l00014	html/trie_8h-source.html	/^<a name="l00014"><\/a>00014 {$/;"	a
l00014	html/utf8_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="comment"> *<\/span>$/;"	a
l00015	html/cache_8h-source.html	/^<a name="l00015"><\/a>00015 $/;"	a
l00015	html/chunk_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="chunk_8h.html#956bd0c241b2f319177e1cffab770741">00015<\/a> <span class="preprocessor">#define CHUNK_SIZE_Z 16<\/span>$/;"	a
l00015	html/config_8h-source.html	/^<a name="l00015"><\/a>00015 { $/;"	a
l00015	html/flat_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="flat_8h.html#0183a63584b8edb3bd33aff9c9a6de8d">00015<\/a> <span class="preprocessor">#define RENDERER_FLAT_IMAGE_WIDTH  256<\/span>$/;"	a
l00015	html/hashtable_8h-source.html	/^<a name="l00015"><\/a>00015 <span class="comment"> *      struct hashtable  *h;<\/span>$/;"	a
l00015	html/hashtable__private_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="structentry.html">00015<\/a> <span class="keyword">struct <\/span><a class="code" href="structentry.html" title="A hashtable bucket.">entry<\/a>$/;"	a
l00015	html/level_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="level_8h.html#a7e9df757b57d037aa82fcb40f714ed8">00015<\/a> <span class="preprocessor">#define LEVEL_BUFFER_SIZE 128<\/span>$/;"	a
l00015	html/linked__list_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="structlist__node__s.html#e514915b0307961b3b347e8991ed3f12">00015<\/a>     <span class="keyword">struct <\/span><a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node_s<\/a> *<a class="code" href="structlist__node__s.html#e514915b0307961b3b347e8991ed3f12" title="The previous item in the list.">prev<\/a>;   $/;"	a
l00015	html/maths_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="maths_8h.html#0f86da1747cf66f61c1d66a81bd3e8c39cfbe700e67d63f2bba8b6f9aa6e346f">00015<\/a>     <a class="code" href="maths_8h.html#0f86da1747cf66f61c1d66a81bd3e8c39cfbe700e67d63f2bba8b6f9aa6e346f">BASE36_INVALID_CHAR<\/a>,    $/;"	a
l00015	html/patricia_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="structtrie__node__s.html#3871b8fecf227e7aa9838cf009dc59e9">00015<\/a>     <span class="keyword">struct <\/span><a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node_s<\/a>  *<a class="code" href="structtrie__node__s.html#3871b8fecf227e7aa9838cf009dc59e9" title="The node&amp;#39;s right child.">right<\/a>;     $/;"	a
l00015	html/read__nbt_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3d89bf1ef8012666ae8c8058647c160a4">00015<\/a>     <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3d89bf1ef8012666ae8c8058647c160a4" title="The file unexpectedly ran out of input data.">NBT_READ_PREMATURE_EOF<\/a>,     $/;"	a
l00015	html/renderer_8h-source.html	/^<a name="l00015"><\/a>00015 <span class="preprocessor">#include "<a class="code" href="cache_8h.html" title="The base object for all chunk caches.">cache.h<\/a>"<\/span>$/;"	a
l00015	html/slab_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="structcache__slab.html#f2605f2512a2686ceb2fd1a71949e32b">00015<\/a>     uint32_t size;  $/;"	a
l00015	html/trie_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="structtrie__node__s.html#b09c15b8e888e8c12072e05c190db3c7">00015<\/a>     <span class="keywordtype">wchar_t<\/span>             <a class="code" href="structtrie__node__s.html#b09c15b8e888e8c12072e05c190db3c7" title="The key of this node.">key<\/a>;        $/;"	a
l00015	html/utf8_8h-source.html	/^<a name="l00015"><\/a>00015 <span class="comment"> * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES<\/span>$/;"	a
l00016	html/chunk_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="preprocessor"><\/span>$/;"	a
l00016	html/colors_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="colors_8h.html#b97a08d179850bc9be9eda8ec0be1583">00016<\/a> <span class="preprocessor">#define BLOCK_COLOR_DEPTH 4<\/span>$/;"	a
l00016	html/config_8h-source.html	/^<a name="l00016"><\/a>00016     CONFIG_ERROR_NO_INPUT = 1, $/;"	a
l00016	html/flat_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="preprocessor"><\/span>$/;"	a
l00016	html/hashtable_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="comment"> *      struct some_key   *k;<\/span>$/;"	a
l00016	html/hashtable__itr_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="structhashtable__itr.html">00016<\/a> <span class="keyword">struct <\/span><a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a>$/;"	a
l00016	html/hashtable__private_8h-source.html	/^<a name="l00016"><\/a>00016 {$/;"	a
l00016	html/level_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="preprocessor"><\/span>$/;"	a
l00016	html/linked__list_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="structlist__node__s.html#792a4f814d8d0c2106c6a63b0abf666d">00016<\/a>     <span class="keyword">struct <\/span><a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node_s<\/a> *<a class="code" href="structlist__node__s.html#792a4f814d8d0c2106c6a63b0abf666d" title="The next item in the list.">next<\/a>;   $/;"	a
l00016	html/maths_8h-source.html	/^<a name="l00016"><\/a>00016 };$/;"	a
l00016	html/nbt_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c">00016<\/a> <span class="keyword">enum<\/span> <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c" title="Details the different kinds of tags found in an NBT file.">nbt_tag_types<\/a>$/;"	a
l00016	html/patricia_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a">00016<\/a>     <span class="keywordtype">wchar_t<\/span>             *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>;       $/;"	a
l00016	html/renderer_8h-source.html	/^<a name="l00016"><\/a>00016 $/;"	a
l00016	html/slab_8h-source.html	/^<a name="l00016"><\/a>00016 } <a class="code" href="structcache__slab.html" title="Holds a slab cache&amp;#39;s data.">cache_slab<\/a>;$/;"	a
l00016	html/trie_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="structtrie__node__s.html#79270f72d16b91ad8089bfee8dc5baed">00016<\/a>     <a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a>                *<a class="code" href="structtrie__node__s.html#79270f72d16b91ad8089bfee8dc5baed" title="All the children of this node.">children<\/a>;  $/;"	a
l00016	html/utf8_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="comment"> * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF<\/span>$/;"	a
l00017	html/cache_8h-source.html	/^<a name="l00017"><\/a>00017     void (*free)(<span class="keywordtype">void<\/span>*);$/;"	a
l00017	html/chunk_8h-source.html	/^<a name="l00017"><\/a><a class="code" href="chunk_8h.html#f952d499e67f41f04374bdf992850c9c">00017<\/a> <span class="preprocessor">#define CHUNK_SIZE_AREA 256<\/span>$/;"	a
l00017	html/colors_8h-source.html	/^<a name="l00017"><\/a>00017 <span class="preprocessor"><\/span>$/;"	a
l00017	html/config_8h-source.html	/^<a name="l00017"><\/a>00017     CONFIG_ERROR_NO_MEM, $/;"	a
l00017	html/flat_8h-source.html	/^<a name="l00017"><\/a><a class="code" href="flat_8h.html#1a501067ae6b62c849c04968242713b9">00017<\/a> <span class="preprocessor">#define RENDERER_FLAT_IMAGE_HEIGHT 256<\/span>$/;"	a
l00017	html/hardcoded_8h-source.html	/^<a name="l00017"><\/a>00017 <a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *<a class="code" href="hardcoded_8h.html#3d3a182b2fad7a585ed47c725b6544d8" title="Returns a new color_map with hardcoded color definitions.">color_map_hardcoded_new<\/a>(uint16_t block_count, uint8_t color_depth);$/;"	a
l00017	html/hashtable_8h-source.html	/^<a name="l00017"><\/a>00017 <span class="comment"> *      struct some_value *v;<\/span>$/;"	a
l00017	html/hashtable__itr_8h-source.html	/^<a name="l00017"><\/a>00017 {$/;"	a
l00017	html/hashtable__private_8h-source.html	/^<a name="l00017"><\/a><a class="code" href="structentry.html#9418993f76a8d9b7fa21e44f218566d1">00017<\/a>     <span class="keywordtype">void<\/span> *<a class="code" href="structentry.html#9418993f76a8d9b7fa21e44f218566d1" title="The key of this entry.">k<\/a>;            $/;"	a
l00017	html/linked__list_8h-source.html	/^<a name="l00017"><\/a>00017 } <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a>;$/;"	a
l00017	html/maths_8h-source.html	/^<a name="l00017"><\/a>00017 $/;"	a
l00017	html/nbt_8h-source.html	/^<a name="l00017"><\/a>00017 {$/;"	a
l00017	html/patricia_8h-source.html	/^<a name="l00017"><\/a><a class="code" href="structtrie__node__s.html#2a1a02be2666c6a25a4e08cd10bd6896">00017<\/a>     <span class="keywordtype">void<\/span>                *<a class="code" href="structtrie__node__s.html#2a1a02be2666c6a25a4e08cd10bd6896" title="The payload for this node.">payload<\/a>;   $/;"	a
l00017	html/read__nbt_8h-source.html	/^<a name="l00017"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3bb024b0f562f5b200530b663faca49b0">00017<\/a>     <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e3bb024b0f562f5b200530b663faca49b0" title="gzread threw an error, use gzerror in zlib.h to determine what is wrong">NBT_READ_GZREAD_ERROR<\/a>,      $/;"	a
l00017	html/slab_8h-source.html	/^<a name="l00017"><\/a>00017 $/;"	a
l00017	html/utf8_8h-source.html	/^<a name="l00017"><\/a>00017 <span class="comment"> * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR<\/span>$/;"	a
l00018	html/cache_8h-source.html	/^<a name="l00018"><\/a>00018 $/;"	a
l00018	html/chunk_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="preprocessor"><\/span>$/;"	a
l00018	html/config_8h-source.html	/^<a name="l00018"><\/a>00018     CONFIG_ERROR_PRINT_HELP, $/;"	a
l00018	html/flat_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="preprocessor"><\/span>$/;"	a
l00018	html/hardcoded_8h-source.html	/^<a name="l00018"><\/a>00018 $/;"	a
l00018	html/hashtable_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="comment"> *<\/span>$/;"	a
l00018	html/hashtable__itr_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="structhashtable__itr.html#feb5f8e7593d50fc3ce781ab0d9fd7e7">00018<\/a>     <span class="keyword">struct <\/span><a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *<a class="code" href="structhashtable__itr.html#feb5f8e7593d50fc3ce781ab0d9fd7e7" title="The hash table to iterate over.">h<\/a>;    $/;"	a
l00018	html/hashtable__private_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="structentry.html#ce77d89f70f0f57ed6d7c4e490329749">00018<\/a>     <span class="keywordtype">void<\/span> *<a class="code" href="structentry.html#ce77d89f70f0f57ed6d7c4e490329749" title="The value of this entry.">v<\/a>;            $/;"	a
l00018	html/level_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="structlevel.html">00018<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>$/;"	a
l00018	html/nbt_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c3d5a82423094732bfbe3e4316ec04f5c">00018<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c3d5a82423094732bfbe3e4316ec04f5c" title="Used to indicate an invalid or unsupported tag.">TAG_Invalid<\/a> = -1,   $/;"	a
l00018	html/patricia_8h-source.html	/^<a name="l00018"><\/a>00018 } <a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a>;$/;"	a
l00018	html/renderer_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="renderer_8h.html#f106006283fbeb5ffe764761e2489c29">00018<\/a> <span class="preprocessor">#define RENDERER_TILE_SIZE  16<\/span>$/;"	a
l00018	html/trie_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="structtrie__node__s.html#2a1a02be2666c6a25a4e08cd10bd6896">00018<\/a>     <span class="keywordtype">void<\/span>                *<a class="code" href="structtrie__node__s.html#2a1a02be2666c6a25a4e08cd10bd6896" title="The payload for this node.">payload<\/a>;   $/;"	a
l00018	html/utf8_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="comment"> * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES<\/span>$/;"	a
l00019	html/colors_8h-source.html	/^<a name="l00019"><\/a><a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc">00019<\/a> <span class="keyword">enum<\/span> <a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc" title="Error codes that can be returned by color_map_get().">color_map_errors<\/a>$/;"	a
l00019	html/config_8h-source.html	/^<a name="l00019"><\/a>00019     CONFIG_ERROR_PRINT_VERSION,$/;"	a
l00019	html/generic__structs_8h-source.html	/^<a name="l00019"><\/a><a class="code" href="structlist.html">00019<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00019	html/hashtable_8h-source.html	/^<a name="l00019"><\/a>00019 <span class="comment"> *      static unsigned int         hash_from_key_fn( void *k );<\/span>$/;"	a
l00019	html/hashtable__itr_8h-source.html	/^<a name="l00019"><\/a><a class="code" href="structhashtable__itr.html#9d8ed6f67c20f29c9e695138dedc8fa3">00019<\/a>     <span class="keyword">struct <\/span><a class="code" href="structentry.html" title="A hashtable bucket.">entry<\/a> *<a class="code" href="structhashtable__itr.html#9d8ed6f67c20f29c9e695138dedc8fa3" title="The current hash entry.">e<\/a>;        $/;"	a
l00019	html/hashtable__private_8h-source.html	/^<a name="l00019"><\/a><a class="code" href="structentry.html#f2dadc5fe4b54bb8e5e484eef76715dd">00019<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="structentry.html#f2dadc5fe4b54bb8e5e484eef76715dd" title="The hash value of this bucket.">h<\/a>;     $/;"	a
l00019	html/level_8h-source.html	/^<a name="l00019"><\/a>00019 {$/;"	a
l00019	html/patricia_8h-source.html	/^<a name="l00019"><\/a>00019 $/;"	a
l00019	html/read__nbt_8h-source.html	/^<a name="l00019"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e35bfe852e86771a8c9d1b15d27ec46159">00019<\/a>     <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e35bfe852e86771a8c9d1b15d27ec46159" title="nbt_read() ran out of memory to allocate">NBT_READ_OUT_OF_MEM<\/a>,        $/;"	a
l00019	html/renderer_8h-source.html	/^<a name="l00019"><\/a>00019 <span class="preprocessor"><\/span>$/;"	a
l00019	html/trie_8h-source.html	/^<a name="l00019"><\/a>00019 } <a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node<\/a>;$/;"	a
l00019	html/utf8_8h-source.html	/^<a name="l00019"><\/a>00019 <span class="comment"> * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN<\/span>$/;"	a
l00020	html/cache_8h-source.html	/^<a name="l00020"><\/a>00020     int (*<span class="keyword">set<\/span>)(<span class="keywordtype">void<\/span>*,int64_t,<a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a>*);$/;"	a
l00020	html/chunk_8h-source.html	/^<a name="l00020"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c9">00020<\/a> <span class="keyword">enum<\/span> <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c9" title="Describes error codes passed by chunk_new().">chunk_new_error_codes<\/a>$/;"	a
l00020	html/colors_8h-source.html	/^<a name="l00020"><\/a>00020 {$/;"	a
l00020	html/config_8h-source.html	/^<a name="l00020"><\/a>00020     CONFIG_ERROR_LOCALTIME$/;"	a
l00020	html/flat_8h-source.html	/^<a name="l00020"><\/a><a class="code" href="flat_8h.html#f0f24fc8573abc61960e9f2c84808f6e">00020<\/a> <span class="preprocessor">#define RENDERER_FLAT_CACHE_SIZE 16<\/span>$/;"	a
l00020	html/generic__structs_8h-source.html	/^<a name="l00020"><\/a>00020 {$/;"	a
l00020	html/hashtable_8h-source.html	/^<a name="l00020"><\/a>00020 <span class="comment"> *      static int                  keys_equal_fn ( void *key1, void *key2 );<\/span>$/;"	a
l00020	html/hashtable__itr_8h-source.html	/^<a name="l00020"><\/a><a class="code" href="structhashtable__itr.html#836672bb87bfe493e38f3fa45bf4c28c">00020<\/a>     <span class="keyword">struct <\/span><a class="code" href="structentry.html" title="A hashtable bucket.">entry<\/a> *<a class="code" href="structhashtable__itr.html#836672bb87bfe493e38f3fa45bf4c28c" title="The parent of the current hash entry.">parent<\/a>;   $/;"	a
l00020	html/hashtable__private_8h-source.html	/^<a name="l00020"><\/a><a class="code" href="structentry.html#6ba6b7d14932763dcb0df242b5ff2dfd">00020<\/a>     <span class="keyword">struct <\/span><a class="code" href="structentry.html" title="A hashtable bucket.">entry<\/a> *<a class="code" href="structentry.html#6ba6b7d14932763dcb0df242b5ff2dfd" title="The next value in the bucket.">next<\/a>; $/;"	a
l00020	html/level_8h-source.html	/^<a name="l00020"><\/a><a class="code" href="structlevel.html#627b1b93dc14f0960397f0412f52d3f7">00020<\/a>     <span class="keywordtype">char<\/span> *input_path;       $/;"	a
l00020	html/nbt_8h-source.html	/^<a name="l00020"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c412ceba1e522006ed1abd510caf067c6">00020<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c412ceba1e522006ed1abd510caf067c6" title="Used to indicate the end of a TAG_Compound collection.">TAG_End<\/a>,            $/;"	a
l00020	html/trie_8h-source.html	/^<a name="l00020"><\/a>00020 $/;"	a
l00020	html/utf8_8h-source.html	/^<a name="l00020"><\/a>00020 <span class="comment"> * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF<\/span>$/;"	a
l00021	html/cache_8h-source.html	/^<a name="l00021"><\/a>00021 $/;"	a
l00021	html/chunk_8h-source.html	/^<a name="l00021"><\/a>00021 {$/;"	a
l00021	html/colors_8h-source.html	/^<a name="l00021"><\/a><a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc2d9c53783242120f811448f8b1afe12c">00021<\/a>     <a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc2d9c53783242120f811448f8b1afe12c" title="Everything is OK.">COLOR_MAP_OK<\/a>,           $/;"	a
l00021	html/config_8h-source.html	/^<a name="l00021"><\/a>00021 };$/;"	a
l00021	html/flat_8h-source.html	/^<a name="l00021"><\/a>00021 <span class="preprocessor"><\/span>$/;"	a
l00021	html/generic__structs_8h-source.html	/^<a name="l00021"><\/a><a class="code" href="structlist.html#6f2e2fb46ac29b62be41989153470ce3">00021<\/a>     <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *start;   $/;"	a
l00021	html/hashtable_8h-source.html	/^<a name="l00021"><\/a>00021 <span class="comment"> *<\/span>$/;"	a
l00021	html/hashtable__itr_8h-source.html	/^<a name="l00021"><\/a><a class="code" href="structhashtable__itr.html#473e53e32991f335336526efa5763fb3">00021<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="structhashtable__itr.html#473e53e32991f335336526efa5763fb3" title="The numeric index of the current entry.">index<\/a>;     $/;"	a
l00021	html/hashtable__private_8h-source.html	/^<a name="l00021"><\/a>00021 };$/;"	a
l00021	html/patricia_8h-source.html	/^<a name="l00021"><\/a><a class="code" href="structtrie.html">00021<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00021	html/read__nbt_8h-source.html	/^<a name="l00021"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e30b9860dbb0e49b9386df792b7e5ecccc">00021<\/a>     <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e30b9860dbb0e49b9386df792b7e5ecccc" title="An unexpected value was read out of the input file.">NBT_READ_MALFORMED_INPUT<\/a>,   $/;"	a
l00021	html/renderer_8h-source.html	/^<a name="l00021"><\/a><a class="code" href="renderer_8h.html#5e06f5d9b0166b7d24454f228f31ede2">00021<\/a> <span class="preprocessor">#define RENDERER_CACHE_BUCKETS 32<\/span>$/;"	a
l00021	html/utf8_8h-source.html	/^<a name="l00021"><\/a>00021 <span class="comment"> * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.<\/span>$/;"	a
l00022	html/chunk_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c90e3642eb43a3204cbaa6ee266907e667">00022<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c90e3642eb43a3204cbaa6ee266907e667" title="Everything is OK.">CHUNK_ERR_OK<\/a>,       $/;"	a
l00022	html/colors_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc2ad86627f132ac5fd11ac95c19ec3c42">00022<\/a>     <a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc2ad86627f132ac5fd11ac95c19ec3c42" title="No color_map was passed.">COLOR_MAP_ERR_NOMAP<\/a>,    $/;"	a
l00022	html/config_8h-source.html	/^<a name="l00022"><\/a>00022 $/;"	a
l00022	html/generic__structs_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="structlist.html#811c0424c32b12a7b111ca0fa45b9861">00022<\/a>     <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *end;     $/;"	a
l00022	html/hashtable_8h-source.html	/^<a name="l00022"><\/a>00022 <span class="comment"> *      h = create_hashtable(16, hash_from_key_fn, keys_equal_fn);<\/span>$/;"	a
l00022	html/hashtable__private_8h-source.html	/^<a name="l00022"><\/a>00022 $/;"	a
l00022	html/level_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="structlevel.html#353dfd3a411d580849eedfdb1f2bd026">00022<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *data;          $/;"	a
l00022	html/linked__list_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="structlist.html">00022<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00022	html/nbt_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683cbb52fd6bfeb1865968d56ccef0daead9">00022<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683cbb52fd6bfeb1865968d56ccef0daead9" title="Holds a single signed byte of data.">TAG_Byte<\/a>,           $/;"	a
l00022	html/patricia_8h-source.html	/^<a name="l00022"><\/a>00022 {$/;"	a
l00022	html/renderer_8h-source.html	/^<a name="l00022"><\/a>00022 <span class="preprocessor"><\/span>$/;"	a
l00022	html/slab_8h-source.html	/^<a name="l00022"><\/a>00022 <a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *<a class="code" href="slab_8h.html#8c883760bfe0303d7e15edcf682e8093" title="Creates a new slab chunk_cache.">cache_slab_new<\/a>(uint32_t size);$/;"	a
l00022	html/trie_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="structtrie.html">00022<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00022	html/utf8_8h-source.html	/^<a name="l00022"><\/a>00022 <span class="comment"> *\/<\/span>$/;"	a
l00023	html/cache_8h-source.html	/^<a name="l00023"><\/a>00023     <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a>* (*get)(<span class="keywordtype">void<\/span>*,int64_t);$/;"	a
l00023	html/chunk_8h-source.html	/^<a name="l00023"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c983af8eb7a8cb3bd927c670fc0cf6d530">00023<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c983af8eb7a8cb3bd927c670fc0cf6d530" title="Could not allocate memory.">CHUNK_ERR_OOM<\/a>,      $/;"	a
l00023	html/colors_8h-source.html	/^<a name="l00023"><\/a><a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bca1c3b013ab2a620e43e73d02acb92332">00023<\/a>     <a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bca1c3b013ab2a620e43e73d02acb92332" title="No destination was passed.">COLOR_MAP_ERR_NODEST<\/a>,   $/;"	a
l00023	html/generic__structs_8h-source.html	/^<a name="l00023"><\/a>00023     void (*data_free_func)(<span class="keywordtype">void<\/span>*); $/;"	a
l00023	html/hashtable_8h-source.html	/^<a name="l00023"><\/a>00023 <span class="comment"> *      k = (struct some_key *)     malloc(sizeof(struct some_key));<\/span>$/;"	a
l00023	html/hashtable__itr_8h-source.html	/^<a name="l00023"><\/a>00023 };$/;"	a
l00023	html/linked__list_8h-source.html	/^<a name="l00023"><\/a>00023 {$/;"	a
l00023	html/nbt_8h-source.html	/^<a name="l00023"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c975e983e98b5bf2fffc5691958b0794f">00023<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c975e983e98b5bf2fffc5691958b0794f" title="Holds a signed 16-bit integer.">TAG_Short<\/a>,          $/;"	a
l00023	html/patricia_8h-source.html	/^<a name="l00023"><\/a><a class="code" href="structtrie.html#44179751fbc46b222f154029ea582b35">00023<\/a>     <a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a>       *root;      $/;"	a
l00023	html/read__nbt_8h-source.html	/^<a name="l00023"><\/a><a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e37eae134e048bafc1e0f9293263d44c9a">00023<\/a>     <a class="code" href="read__nbt_8h.html#220b248d83784b7ec776f9080fea18e37eae134e048bafc1e0f9293263d44c9a" title="An invalid utf-8 byte was detected.">NBT_READ_INVALID_UTF8<\/a>,      $/;"	a
l00023	html/slab_8h-source.html	/^<a name="l00023"><\/a>00023 $/;"	a
l00023	html/trie_8h-source.html	/^<a name="l00023"><\/a>00023 {$/;"	a
l00023	html/utf8_8h-source.html	/^<a name="l00023"><\/a>00023 $/;"	a
l00024	html/cache_8h-source.html	/^<a name="l00024"><\/a>00024 $/;"	a
l00024	html/chunk_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c974a09faf5997b689a775a374d45c376f">00024<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c974a09faf5997b689a775a374d45c376f" title="Was not able to open the input file.">CHUNK_ERR_INPUT<\/a>,    $/;"	a
l00024	html/colors_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc7332f5169e6696de70523e0973f9e028">00024<\/a>     <a class="code" href="colors_8h.html#fc114ef7e92a1820d7ac91f4140592bc7332f5169e6696de70523e0973f9e028" title="An invalid block type was passed.">COLOR_MAP_ERR_BLOCK<\/a>,    $/;"	a
l00024	html/generic__structs_8h-source.html	/^<a name="l00024"><\/a>00024 } <a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a>;$/;"	a
l00024	html/hashtable_8h-source.html	/^<a name="l00024"><\/a>00024 <span class="comment"> *      v = (struct some_value *)   malloc(sizeof(struct some_value));<\/span>$/;"	a
l00024	html/hashtable__itr_8h-source.html	/^<a name="l00024"><\/a>00024 $/;"	a
l00024	html/hashtable__private_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="structhashtable.html">00024<\/a> <span class="keyword">struct <\/span><a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> {$/;"	a
l00024	html/level_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="structlevel.html#140a6e847f6d3b554b8e67b3d1179ebb">00024<\/a>     int32_t smallest_x;     $/;"	a
l00024	html/linked__list_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="structlist.html#6f2e2fb46ac29b62be41989153470ce3">00024<\/a>     <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *start;   $/;"	a
l00024	html/nbt_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683ce0b367cd0dd9b00f86ba58d34bdf82cd">00024<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683ce0b367cd0dd9b00f86ba58d34bdf82cd" title="Holds a signed 32-bit integer.">TAG_Int<\/a>,            $/;"	a
l00024	html/patricia_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="structtrie.html#8c866d404117ace78fc34ed4a373d3e7">00024<\/a>     <a class="code" href="patricia_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a>  free_func;  $/;"	a
l00024	html/renderer_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0">00024<\/a> <span class="keyword">enum<\/span> <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0" title="Errors that can occur when renderer_perform() fails.">renderer_errors<\/a>$/;"	a
l00024	html/trie_8h-source.html	/^<a name="l00024"><\/a><a class="code" href="structtrie.html#44179751fbc46b222f154029ea582b35">00024<\/a>     <a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node<\/a>       *root;      $/;"	a
l00024	html/utf8_8h-source.html	/^<a name="l00024"><\/a>00024 <span class="comment">\/*<\/span>$/;"	a
l00025	html/chunk_8h-source.html	/^<a name="l00025"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c937ee8e3e1e501f89f769248340b55953">00025<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c937ee8e3e1e501f89f769248340b55953" title="Parsing the tag failed.">CHUNK_ERR_TAG<\/a>,      $/;"	a
l00025	html/colors_8h-source.html	/^<a name="l00025"><\/a>00025 };$/;"	a
l00025	html/generic__structs_8h-source.html	/^<a name="l00025"><\/a>00025 $/;"	a
l00025	html/hardcoded_8h-source.html	/^<a name="l00025"><\/a>00025 png_byte *<a class="code" href="hardcoded_8h.html#822f586b3a262948cfe467bc9dc38396" title="Function to retrieve a color from the map.">color_map_hardcoded_get<\/a>(<span class="keywordtype">void<\/span> *_map, uint16_t block_type);$/;"	a
l00025	html/hashtable_8h-source.html	/^<a name="l00025"><\/a>00025 <span class="comment"> *<\/span>$/;"	a
l00025	html/hashtable__itr_8h-source.html	/^<a name="l00025"><\/a>00025 $/;"	a
l00025	html/hashtable__private_8h-source.html	/^<a name="l00025"><\/a><a class="code" href="structhashtable.html#fc1229fd1dcd2ae455a875d2e39c9243">00025<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="structhashtable.html#fc1229fd1dcd2ae455a875d2e39c9243" title="The size of the table.">tablelength<\/a>;           $/;"	a
l00025	html/linked__list_8h-source.html	/^<a name="l00025"><\/a><a class="code" href="structlist.html#811c0424c32b12a7b111ca0fa45b9861">00025<\/a>     <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *end;     $/;"	a
l00025	html/nbt_8h-source.html	/^<a name="l00025"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c045cf869c73ca645cb2f90b51e74cda9">00025<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c045cf869c73ca645cb2f90b51e74cda9" title="Holds a signed 64-bit integer.">TAG_Long<\/a>,           $/;"	a
l00025	html/read__nbt_8h-source.html	/^<a name="l00025"><\/a>00025 };$/;"	a
l00025	html/renderer_8h-source.html	/^<a name="l00025"><\/a>00025 {$/;"	a
l00025	html/trie_8h-source.html	/^<a name="l00025"><\/a><a class="code" href="structtrie.html#8c866d404117ace78fc34ed4a373d3e7">00025<\/a>     <a class="code" href="trie_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a>  free_func;  $/;"	a
l00025	html/utf8_8h-source.html	/^<a name="l00025"><\/a>00025 <span class="comment"> * utf8: implementation of UTF-8 charset encoding (RFC3629).<\/span>$/;"	a
l00026	html/cache_8h-source.html	/^<a name="l00026"><\/a>00026     void (*empty)(<span class="keywordtype">void<\/span>*);$/;"	a
l00026	html/chunk_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c927fb19a63b25a8e8a9ee9100149388c4">00026<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c927fb19a63b25a8e8a9ee9100149388c4" title="Could not read the chunk coordinates from from the input file.">CHUNK_ERR_COORDS<\/a>,   $/;"	a
l00026	html/colors_8h-source.html	/^<a name="l00026"><\/a>00026 $/;"	a
l00026	html/hardcoded_8h-source.html	/^<a name="l00026"><\/a>00026 $/;"	a
l00026	html/hashtable_8h-source.html	/^<a name="l00026"><\/a>00026 <span class="comment"> *      (initialise k and v to suitable values)<\/span>$/;"	a
l00026	html/hashtable__itr_8h-source.html	/^<a name="l00026"><\/a>00026 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00026	html/hashtable__private_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="structhashtable.html#78fa0275b9b0f3a1903b3a5622658aca">00026<\/a>     <span class="keyword">struct <\/span><a class="code" href="structentry.html" title="A hashtable bucket.">entry<\/a> **<a class="code" href="structhashtable.html#78fa0275b9b0f3a1903b3a5622658aca" title="The buckets of the table.">table<\/a>;               $/;"	a
l00026	html/level_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="structlevel.html#ee1600feac8d527f93d006062a451fe4">00026<\/a>     int32_t smallest_z;     $/;"	a
l00026	html/linked__list_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="structlist.html#f59f5fd32c6b9bbc8e485c8fb9a5064d">00026<\/a>     <a class="code" href="linked__list_8h.html#bc386d72b631c5cb6ede642cc2f9c8f1" title="Used to typecast functions to the type expected by the data member data_free_func...">list_free_func<\/a> data_free_func; $/;"	a
l00026	html/maths_8h-source.html	/^<a name="l00026"><\/a>00026 int64_t <a class="code" href="maths_8h.html#6a8e817d4147b3c508522e417502fdb5" title="Converts a string with a base 36 number to a base 10 number.">base36tobase10<\/a>(<span class="keywordtype">char<\/span> *base36, <span class="keywordtype">int<\/span> length);$/;"	a
l00026	html/nbt_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c8fc97992da325a844e4410482a301859">00026<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c8fc97992da325a844e4410482a301859" title="Holds a 32-bit floating point value.">TAG_Float<\/a>,          $/;"	a
l00026	html/read__nbt_8h-source.html	/^<a name="l00026"><\/a>00026 $/;"	a
l00026	html/renderer_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0f3192c393df8ddbabfbbd797a8393804">00026<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0f3192c393df8ddbabfbbd797a8393804" title="Everything is OK.">RENDER_OK<\/a>,              $/;"	a
l00026	html/utf8_8h-source.html	/^<a name="l00026"><\/a>00026 <span class="comment"> *\/<\/span>$/;"	a
l00027	html/cache_8h-source.html	/^<a name="l00027"><\/a>00027 $/;"	a
l00027	html/hashtable_8h-source.html	/^<a name="l00027"><\/a>00027 <span class="comment"> * <\/span>$/;"	a
l00027	html/hashtable__itr_8h-source.html	/^<a name="l00027"><\/a>00027 <span class="comment">\/* hashtable_iterator<\/span>$/;"	a
l00027	html/hashtable__private_8h-source.html	/^<a name="l00027"><\/a><a class="code" href="structhashtable.html#f7e399cbbcb87185b10c299c19cc4d5a">00027<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="structhashtable.html#f7e399cbbcb87185b10c299c19cc4d5a" title="How many entries are stored in the table.">entrycount<\/a>;            $/;"	a
l00027	html/linked__list_8h-source.html	/^<a name="l00027"><\/a>00027 } <a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a>;$/;"	a
l00027	html/maths_8h-source.html	/^<a name="l00027"><\/a>00027 $/;"	a
l00027	html/nbt_8h-source.html	/^<a name="l00027"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683ce5fc01c466aa077f9004b088089e16f1">00027<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683ce5fc01c466aa077f9004b088089e16f1" title="Holds a 64-bit floating point value.">TAG_Double<\/a>,         $/;"	a
l00027	html/patricia_8h-source.html	/^<a name="l00027"><\/a>00027 } <a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a>;$/;"	a
l00027	html/renderer_8h-source.html	/^<a name="l00027"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0fc2783d29fe6cf4454b6932895c88500">00027<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0fc2783d29fe6cf4454b6932895c88500" title="A renderer passed failed the sanity check.">RENDER_ERR_SANITY<\/a>,      $/;"	a
l00027	html/utf8_8h-source.html	/^<a name="l00027"><\/a>00027 <span class="preprocessor">#ifndef _UTF8_H_<\/span>$/;"	a
l00028	html/cache_8h-source.html	/^<a name="l00028"><\/a>00028 } <a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a>;$/;"	a
l00028	html/chunk_8h-source.html	/^<a name="l00028"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c966b979a8726a068973abc3778b90dcb4">00028<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c966b979a8726a068973abc3778b90dcb4" title="An inconsistency occured between the coords derived from the map value and the info...">CHUNK_ERR_CONSIST<\/a>,  $/;"	a
l00028	html/config_8h-source.html	/^<a name="l00028"><\/a><a class="code" href="structconfiguration.html">00028<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>$/;"	a
l00028	html/flat_8h-source.html	/^<a name="l00028"><\/a>00028 <a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a> *<a class="code" href="flat_8h.html#f9e27425220be0d50541d84a44c368cb" title="Creates a new Flat Renderer.">renderer_flat_new<\/a>(<a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *lvl, <a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *map, <span class="keywordtype">char<\/span> *output_path);$/;"	a
l00028	html/hashtable_8h-source.html	/^<a name="l00028"><\/a>00028 <span class="comment"> *      if (! hashtable_insert(h,k,v) )<\/span>$/;"	a
l00028	html/hashtable__itr_8h-source.html	/^<a name="l00028"><\/a>00028 <span class="comment"> *\/<\/span>$/;"	a
l00028	html/level_8h-source.html	/^<a name="l00028"><\/a><a class="code" href="structlevel.html#4727c534657b9de386ba9e82b621774a">00028<\/a>     int32_t largest_x;      $/;"	a
l00028	html/linked__list_8h-source.html	/^<a name="l00028"><\/a>00028 $/;"	a
l00028	html/nbt_8h-source.html	/^<a name="l00028"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683cc28ed5b6d83826ce9ae4bd6977549c1b">00028<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683cc28ed5b6d83826ce9ae4bd6977549c1b" title="Holds a fixed-length unsigned char array.">TAG_Byte_Array<\/a>,     $/;"	a
l00028	html/patricia_8h-source.html	/^<a name="l00028"><\/a>00028 $/;"	a
l00028	html/read__nbt_8h-source.html	/^<a name="l00028"><\/a><a class="code" href="read__nbt_8h.html#552e87468d1a7875ed2cc2306ad15cdf">00028<\/a> <span class="preprocessor">#define NBT_READ_BUFFER_SIZE 16<\/span>$/;"	a
l00028	html/trie_8h-source.html	/^<a name="l00028"><\/a>00028 } <a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a>;$/;"	a
l00028	html/utf8_8h-source.html	/^<a name="l00028"><\/a>00028 <span class="preprocessor"><\/span><span class="preprocessor">#define _UTF8_H_<\/span>$/;"	a
l00029	html/cache_8h-source.html	/^<a name="l00029"><\/a>00029 $/;"	a
l00029	html/config_8h-source.html	/^<a name="l00029"><\/a>00029 {$/;"	a
l00029	html/flat_8h-source.html	/^<a name="l00029"><\/a>00029 $/;"	a
l00029	html/hashtable_8h-source.html	/^<a name="l00029"><\/a>00029 <span class="comment"> *      {     exit(-1);               }<\/span>$/;"	a
l00029	html/hashtable__itr_8h-source.html	/^<a name="l00029"><\/a>00029 $/;"	a
l00029	html/hashtable__private_8h-source.html	/^<a name="l00029"><\/a><a class="code" href="structhashtable.html#0f2e86575a8ddbce836354cc8d6c7416">00029<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="structhashtable.html#0f2e86575a8ddbce836354cc8d6c7416" title="The load limit of the table.">loadlimit<\/a>;             $/;"	a
l00029	html/nbt_8h-source.html	/^<a name="l00029"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c918f873ae00e6b16d197f09abb3866a7">00029<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c918f873ae00e6b16d197f09abb3866a7" title="Holds a wchar_t* utf-8 string.">TAG_String<\/a>,         $/;"	a
l00029	html/read__nbt_8h-source.html	/^<a name="l00029"><\/a>00029 <span class="preprocessor"><\/span>$/;"	a
l00029	html/renderer_8h-source.html	/^<a name="l00029"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0eee07e41413c56682b4c8105f6894661">00029<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0eee07e41413c56682b4c8105f6894661" title="Could not open output file.">RENDER_ERR_FILE<\/a>,        $/;"	a
l00029	html/trie_8h-source.html	/^<a name="l00029"><\/a>00029 $/;"	a
l00029	html/utf8_8h-source.html	/^<a name="l00029"><\/a>00029 <span class="preprocessor"><\/span>$/;"	a
l00030	html/cache_8h-source.html	/^<a name="l00030"><\/a>00030 $/;"	a
l00030	html/config_8h-source.html	/^<a name="l00030"><\/a><a class="code" href="structconfiguration.html#4b4a460b9d1feaa67c4f6cd73d4e9e25">00030<\/a>     <span class="keywordtype">char<\/span>          *output_filename;       $/;"	a
l00030	html/generic__structs_8h-source.html	/^<a name="l00030"><\/a>00030 $/;"	a
l00030	html/hashtable_8h-source.html	/^<a name="l00030"><\/a>00030 <span class="comment"> *<\/span>$/;"	a
l00030	html/level_8h-source.html	/^<a name="l00030"><\/a><a class="code" href="structlevel.html#531acc5076b7bf08d9d10abbe49f6610">00030<\/a>     int32_t largest_z;      $/;"	a
l00030	html/nbt_8h-source.html	/^<a name="l00030"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c59fc760bbabd001bc74cd7b4500eaeb1">00030<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683c59fc760bbabd001bc74cd7b4500eaeb1" title="Holds an ordered, fixed-length list of other tags.">TAG_List<\/a>,           $/;"	a
l00030	html/patricia_8h-source.html	/^<a name="l00030"><\/a><a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114b">00030<\/a> <span class="keyword">enum<\/span> <a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114b" title="The return value of trie_search_node_closest().">trie_search_results<\/a>$/;"	a
l00030	html/renderer_8h-source.html	/^<a name="l00030"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0e0785ff4a09c33894ebea219d673d596">00030<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0e0785ff4a09c33894ebea219d673d596" title="libPNG returned an error">RENDER_ERR_PNG<\/a>,         $/;"	a
l00030	html/utf8_8h-source.html	/^<a name="l00030"><\/a>00030 <span class="preprocessor">#include &lt;sys\/types.h&gt;<\/span>$/;"	a
l00031	html/chunk_8h-source.html	/^<a name="l00031"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c9c92ee8cf2748ccc32233c53391558608">00031<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c9c92ee8cf2748ccc32233c53391558608" title="The length of map data was not consistent and height data could not be reliably determined...">CHUNK_ERR_HEIGHT<\/a>,   $/;"	a
l00031	html/config_8h-source.html	/^<a name="l00031"><\/a><a class="code" href="structconfiguration.html#2024814451ff0fd3327d9c10fb18eeef">00031<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span>  free_output_filename;  $/;"	a
l00031	html/hashtable_8h-source.html	/^<a name="l00031"><\/a>00031 <span class="comment"> *      if (NULL == (found = hashtable_search(h,k) ))<\/span>$/;"	a
l00031	html/hashtable__private_8h-source.html	/^<a name="l00031"><\/a><a class="code" href="structhashtable.html#367516db0bffcc1b7efa46bc1890fd77">00031<\/a>     <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="structhashtable.html#367516db0bffcc1b7efa46bc1890fd77" title="The prime index of the table.">primeindex<\/a>;            $/;"	a
l00031	html/patricia_8h-source.html	/^<a name="l00031"><\/a>00031 {$/;"	a
l00031	html/read__nbt_8h-source.html	/^<a name="l00031"><\/a><a class="code" href="read__nbt_8h.html#9c74adc8d1cbf9db3eef8c1413b77dc9">00031<\/a> <span class="preprocessor">#define NBT_READ_UTF8_BUFFER_SIZE 32768<\/span>$/;"	a
l00031	html/renderer_8h-source.html	/^<a name="l00031"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf031ed1c7df2672cf37eb74d7aeecfd773">00031<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf031ed1c7df2672cf37eb74d7aeecfd773" title="Could not retrieve the dimensions of the tile.">RENDER_ERR_DIM<\/a>,         $/;"	a
l00031	html/trie_8h-source.html	/^<a name="l00031"><\/a><a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114b">00031<\/a> <span class="keyword">enum<\/span> <a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114b" title="The return value of trie_search_node_closest().">trie_search_results<\/a>$/;"	a
l00031	html/utf8_8h-source.html	/^<a name="l00031"><\/a>00031 $/;"	a
l00032	html/config_8h-source.html	/^<a name="l00032"><\/a><a class="code" href="structconfiguration.html#7b9e8e7584817fa0957436e3b14ad70f">00032<\/a>     <span class="keywordtype">char<\/span>          *input_path;            $/;"	a
l00032	html/hashtable_8h-source.html	/^<a name="l00032"><\/a>00032 <span class="comment"> *      {    printf("not found!");                  }<\/span>$/;"	a
l00032	html/level_8h-source.html	/^<a name="l00032"><\/a><a class="code" href="structlevel.html#31e6fb6df3823a3045c517ec5c88c49f">00032<\/a>     uint64_t chunk_count;   $/;"	a
l00032	html/linked__list_8h-source.html	/^<a name="l00032"><\/a><a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858e">00032<\/a> <span class="keyword">enum<\/span> <a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858e" title="Error codes generated by list_push(), list_push_node(), list_unshift(), and list_unshift_node()...">linked_list_errors<\/a>$/;"	a
l00032	html/nbt_8h-source.html	/^<a name="l00032"><\/a><a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683cdd45c97006383b972c7f3f2d17549199">00032<\/a>     <a class="code" href="nbt_8h.html#e9c904893d2571a9e1f88395513e683cdd45c97006383b972c7f3f2d17549199" title="Holds an unordered, variable length list of tags with unique names in a hashtable...">TAG_Compound<\/a>,       $/;"	a
l00032	html/patricia_8h-source.html	/^<a name="l00032"><\/a><a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8">00032<\/a>     <a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8" title="The search returned an error.">TRIE_SEARCH_ERROR<\/a>,   $/;"	a
l00032	html/read__nbt_8h-source.html	/^<a name="l00032"><\/a>00032 <span class="preprocessor"><\/span>$/;"	a
l00032	html/trie_8h-source.html	/^<a name="l00032"><\/a>00032 {$/;"	a
l00032	html/utf8_8h-source.html	/^<a name="l00032"><\/a>00032 <span class="preprocessor">#include &lt;wchar.h&gt;<\/span>$/;"	a
l00033	html/config_8h-source.html	/^<a name="l00033"><\/a><a class="code" href="structconfiguration.html#b4ec25253beaf5c663c13c1a3848ec76">00033<\/a>     int32_t       tile_x;                 $/;"	a
l00033	html/hashtable_8h-source.html	/^<a name="l00033"><\/a>00033 <span class="comment"> *<\/span>$/;"	a
l00033	html/hashtable__private_8h-source.html	/^<a name="l00033"><\/a>00033     <span class="keywordtype">unsigned<\/span> int (*<a class="code" href="structhashtable.html#2add19fa09360f4b96f0a4672c96eb78" title="Function to use to generate a hash for this table.">hashfn<\/a>) (<span class="keywordtype">void<\/span> *<a class="code" href="structentry.html#9418993f76a8d9b7fa21e44f218566d1" title="The key of this entry.">k<\/a>);   $/;"	a
l00033	html/level_8h-source.html	/^<a name="l00033"><\/a>00033 } <a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a>;$/;"	a
l00033	html/linked__list_8h-source.html	/^<a name="l00033"><\/a>00033 {$/;"	a
l00033	html/patricia_8h-source.html	/^<a name="l00033"><\/a><a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728">00033<\/a>     <a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728" title="The trie was empty.">TRIE_SEARCH_EMPTY<\/a>,   $/;"	a
l00033	html/renderer_8h-source.html	/^<a name="l00033"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf00693ad527ada76810ab1367422e6bb93">00033<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf00693ad527ada76810ab1367422e6bb93" title="Couldn&amp;#39;t create a PNG write struct.">RENDER_MEM_PNGWRITE<\/a>,    $/;"	a
l00033	html/trie_8h-source.html	/^<a name="l00033"><\/a><a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8">00033<\/a>     <a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114bc4b575a4e9c12908b0e14c65d31b90e8" title="The search returned an error.">TRIE_SEARCH_ERROR<\/a>,   $/;"	a
l00033	html/utf8_8h-source.html	/^<a name="l00033"><\/a>00033 $/;"	a
l00034	html/chunk_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c9afdde49fc85cb946cfa5429160eccfa9">00034<\/a>     <a class="code" href="chunk_8h.html#cc6675052d273bce39571f756189e0c9afdde49fc85cb946cfa5429160eccfa9">CHUNK_ERR_TAG_FORMAT<\/a>, $/;"	a
l00034	html/colors_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="colors_8h.html#b2d2f68ff3665f20d6a9a3824b0c1b5f">00034<\/a> <span class="keyword">typedef<\/span> png_byte *(*color_get_func )(<span class="keywordtype">void<\/span>*,uint16_t);$/;"	a
l00034	html/config_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="structconfiguration.html#8e46ddd2941fc9db1bbb1e34b423fd2a">00034<\/a>     int32_t       tile_z;                 $/;"	a
l00034	html/hashtable_8h-source.html	/^<a name="l00034"><\/a>00034 <span class="comment"> *      if (NULL == (found = hashtable_remove(h,k) ))<\/span>$/;"	a
l00034	html/level_8h-source.html	/^<a name="l00034"><\/a>00034 $/;"	a
l00034	html/linked__list_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858e3a4d9dca8b09592313a36683d97edb4e">00034<\/a>     <a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858e3a4d9dca8b09592313a36683d97edb4e" title="Thrown when a null needle is passed.">E_LINKED_LIST_NULL_NEEDLE<\/a> = 1, $/;"	a
l00034	html/nbt_8h-source.html	/^<a name="l00034"><\/a>00034 };$/;"	a
l00034	html/patricia_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517">00034<\/a>     <a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517" title="The closest match that was not exact was found.">TRIE_SEARCH_CLOSEST<\/a>, $/;"	a
l00034	html/renderer_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0bcacc79b5a4707f3346d082ab5f84445">00034<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf0bcacc79b5a4707f3346d082ab5f84445" title="Couldn&amp;#39;t create a PNG info struct.">RENDER_MEM_PNGINFO<\/a>,     $/;"	a
l00034	html/trie_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728">00034<\/a>     <a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114b75e36fe33c0df37ab1446d4344ebe728" title="The trie was empty.">TRIE_SEARCH_EMPTY<\/a>,   $/;"	a
l00035	html/chunk_8h-source.html	/^<a name="l00035"><\/a>00035 };$/;"	a
l00035	html/colors_8h-source.html	/^<a name="l00035"><\/a>00035 $/;"	a
l00035	html/config_8h-source.html	/^<a name="l00035"><\/a>00035 } <a class="code" href="structconfiguration.html" title="Contains configuration information.">configuration<\/a>;$/;"	a
l00035	html/hardcoded_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="keywordtype">void<\/span> <a class="code" href="hardcoded_8h.html#415024f243f9d499f47cdae44e23afd4" title="Used internally to write a single color to the color buffer.">color_map_hardcoded_assign<\/a>(png_byte *colors, uint16_t block_type, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha);$/;"	a
l00035	html/hashtable_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="comment"> *      {    printf("Not found\\n");                 }<\/span>$/;"	a
l00035	html/hashtable__itr_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="keyword">struct <\/span><a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a> *$/;"	a
l00035	html/hashtable__private_8h-source.html	/^<a name="l00035"><\/a>00035     int (*<a class="code" href="structhashtable.html#50e0d5a237bbd4bcc00baef97cfa4be1" title="Function to use to compare keys.">eqfn<\/a>) (<span class="keywordtype">void<\/span> *k1, <span class="keywordtype">void<\/span> *k2);   $/;"	a
l00035	html/linked__list_8h-source.html	/^<a name="l00035"><\/a><a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858ee8b5f0c52febd1d93150f88fa0f4dcd0">00035<\/a>     <a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858ee8b5f0c52febd1d93150f88fa0f4dcd0" title="Thrown when a null haystack is passed.">E_LINKED_LIST_NULL_HAYSTACK<\/a>,   $/;"	a
l00035	html/nbt_8h-source.html	/^<a name="l00035"><\/a>00035 $/;"	a
l00035	html/renderer_8h-source.html	/^<a name="l00035"><\/a><a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf03611fe8f74dcbc2e3ec8c2ccda1113e9">00035<\/a>     <a class="code" href="renderer_8h.html#7364429354e580019b0122c142b7dbf03611fe8f74dcbc2e3ec8c2ccda1113e9" title="Couldn&amp;#39;t create a row of PNG data.">RENDER_MEM_ROW<\/a>,         $/;"	a
l00035	html/slab_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="keywordtype">void<\/span> <a class="code" href="slab_8h.html#ec799f095ccf7acf5bd7c3fd9adb136d" title="Frees the slab of memory allocated for a slab cache.">cache_slab_free<\/a>(<span class="keywordtype">void<\/span> *_doomed);$/;"	a
l00035	html/trie_8h-source.html	/^<a name="l00035"><\/a><a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517">00035<\/a>     <a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114bdc41d2b1e44f315dedd5737dd6740517" title="The closest match that was not exact was found.">TRIE_SEARCH_CLOSEST<\/a>, $/;"	a
l00036	html/chunk_8h-source.html	/^<a name="l00036"><\/a>00036 $/;"	a
l00036	html/config_8h-source.html	/^<a name="l00036"><\/a>00036 $/;"	a
l00036	html/hardcoded_8h-source.html	/^<a name="l00036"><\/a>00036 $/;"	a
l00036	html/hashtable_8h-source.html	/^<a name="l00036"><\/a>00036 <span class="comment"> *<\/span>$/;"	a
l00036	html/hashtable__itr_8h-source.html	/^<a name="l00036"><\/a>00036 <a class="code" href="hashtable__itr_8h.html#42d358fc6ac94727bbaf296063eb3a27" title="Generates an iterator for a given hash.">hashtable_iterator<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *<a class="code" href="structhashtable__itr.html#feb5f8e7593d50fc3ce781ab0d9fd7e7" title="The hash table to iterate over.">h<\/a>);$/;"	a
l00036	html/linked__list_8h-source.html	/^<a name="l00036"><\/a><a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858e0ccffb7bf74c5155403e778b0a749db3">00036<\/a>     <a class="code" href="linked__list_8h.html#817ffd90f97a721d167b6cf5206f858e0ccffb7bf74c5155403e778b0a749db3" title="Thrown when malloc fails to allocate memory.">E_LINKED_LIST_OUT_OF_MEM<\/a>       $/;"	a
l00036	html/maths_8h-source.html	/^<a name="l00036"><\/a>00036 <span class="keywordtype">int<\/span> <a class="code" href="maths_8h.html#c5bcbe0e87ab71a20d2d49dd6ba192a0" title="Converts a base 10 integer to base36.">base10tobase36<\/a>(int64_t base10, <span class="keywordtype">char<\/span> *buffer, <span class="keywordtype">int<\/span> size);$/;"	a
l00036	html/patricia_8h-source.html	/^<a name="l00036"><\/a><a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96">00036<\/a>     <a class="code" href="patricia_8h.html#bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96" title="An exact match was found.">TRIE_SEARCH_EXACT<\/a>,   $/;"	a
l00036	html/renderer_8h-source.html	/^<a name="l00036"><\/a>00036 };$/;"	a
l00036	html/slab_8h-source.html	/^<a name="l00036"><\/a>00036 $/;"	a
l00037	html/cache_8h-source.html	/^<a name="l00037"><\/a>00037 $/;"	a
l00037	html/colors_8h-source.html	/^<a name="l00037"><\/a><a class="code" href="structcolor__map.html">00037<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>$/;"	a
l00037	html/flat_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="keywordtype">int<\/span> <a class="code" href="flat_8h.html#577944042cca03e6829647e33eb90fb8" title="Returns the dimensions of a tile generated by a flat renderer.">renderer_flat_dimensions<\/a>(<span class="keywordtype">int<\/span> *width, <span class="keywordtype">int<\/span> *height);$/;"	a
l00037	html/hardcoded_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#endif<\/span>$/;"	a
l00037	html/hashtable_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="comment"> *\/<\/span>$/;"	a
l00037	html/hashtable__itr_8h-source.html	/^<a name="l00037"><\/a>00037 $/;"	a
l00037	html/hashtable__private_8h-source.html	/^<a name="l00037"><\/a>00037     void (*<a class="code" href="structhashtable.html#50bfaaa8873d0acfc25b819ba53605ca" title="Function to free values.">value_free_func<\/a>)(<span class="keywordtype">void<\/span>*);     $/;"	a
l00037	html/linked__list_8h-source.html	/^<a name="l00037"><\/a>00037 };$/;"	a
l00037	html/maths_8h-source.html	/^<a name="l00037"><\/a>00037 $/;"	a
l00037	html/nbt_8h-source.html	/^<a name="l00037"><\/a><a class="code" href="nbt_8h.html#872e7c6236b89b809c92987b72e6c7a7">00037<\/a> <span class="keyword">enum<\/span> <a class="code" href="nbt_8h.html#872e7c6236b89b809c92987b72e6c7a7" title="Flags for print_hex().">hex_dump_flags<\/a>$/;"	a
l00037	html/patricia_8h-source.html	/^<a name="l00037"><\/a>00037 };$/;"	a
l00037	html/read__nbt_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#define UTF8_SINGLE_MAX 0x7F<\/span>$/;"	a
l00037	html/renderer_8h-source.html	/^<a name="l00037"><\/a>00037 $/;"	a
l00037	html/trie_8h-source.html	/^<a name="l00037"><\/a><a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96">00037<\/a>     <a class="code" href="trie_8h.html#bb9700ae24a8f6b8d249ef599e4b114b82d5eca06d868291802a2cc0e27a6e96" title="An exact match was found.">TRIE_SEARCH_EXACT<\/a>,   $/;"	a
l00038	html/colors_8h-source.html	/^<a name="l00038"><\/a>00038 {$/;"	a
l00038	html/flat_8h-source.html	/^<a name="l00038"><\/a>00038 $/;"	a
l00038	html/generic__structs_8h-source.html	/^<a name="l00038"><\/a>00038 <a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *<a class="code" href="generic__structs_8h.html#d8c9a7c4a6443fa1c5f3d32bef504159" title="Creates a new list.">list_new<\/a>(<span class="keywordtype">void<\/span> *<a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056" title="The data payload for this node.">data<\/a>, <span class="keywordtype">void<\/span> (*node_free_func)(<span class="keywordtype">void<\/span>*));$/;"	a
l00038	html/hashtable_8h-source.html	/^<a name="l00038"><\/a>00038 $/;"	a
l00038	html/hashtable__private_8h-source.html	/^<a name="l00038"><\/a>00038 };$/;"	a
l00038	html/linked__list_8h-source.html	/^<a name="l00038"><\/a>00038 $/;"	a
l00038	html/nbt_8h-source.html	/^<a name="l00038"><\/a>00038 {$/;"	a
l00038	html/patricia_8h-source.html	/^<a name="l00038"><\/a>00038 $/;"	a
l00038	html/read__nbt_8h-source.html	/^<a name="l00038"><\/a>00038 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_CONT_MIN   0x80<\/span>$/;"	a
l00038	html/trie_8h-source.html	/^<a name="l00038"><\/a>00038 };$/;"	a
l00038	html/utf8_8h-source.html	/^<a name="l00038"><\/a><a class="code" href="group__utf8flags.html#geccde6efd1d997592cec15047279b085">00038<\/a> <span class="preprocessor">#define UTF8_IGNORE_ERROR               0x01<\/span>$/;"	a
l00039	html/colors_8h-source.html	/^<a name="l00039"><\/a><a class="code" href="structcolor__map.html#b7f6c3740f2e5ad1abc90567e656c7ea">00039<\/a>     png_byte *colors; $/;"	a
l00039	html/generic__structs_8h-source.html	/^<a name="l00039"><\/a>00039 $/;"	a
l00039	html/hashtable_8h-source.html	/^<a name="l00039"><\/a>00039 <span class="comment">\/* Macros may be used to define type-safe(r) hashtable access functions, with<\/span>$/;"	a
l00039	html/hashtable__private_8h-source.html	/^<a name="l00039"><\/a>00039 $/;"	a
l00039	html/level_8h-source.html	/^<a name="l00039"><\/a>00039 <a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *<a class="code" href="level_8h.html#b40e1580a7ee9eace1e64ccc75451494" title="Loads the given minecraft level.">level_load<\/a>(<span class="keywordtype">char<\/span> *path);$/;"	a
l00039	html/nbt_8h-source.html	/^<a name="l00039"><\/a>00039     HEX_CHAR,$/;"	a
l00039	html/read__nbt_8h-source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_CONT_MAX   0xBF<\/span>$/;"	a
l00039	html/trie_8h-source.html	/^<a name="l00039"><\/a>00039 $/;"	a
l00039	html/utf8_8h-source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor"><\/span>$/;"	a
l00040	html/hashtable_8h-source.html	/^<a name="l00040"><\/a>00040 <span class="comment"> * methods specialized to take known key and value types as parameters.<\/span>$/;"	a
l00040	html/hashtable__private_8h-source.html	/^<a name="l00040"><\/a>00040 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00040	html/level_8h-source.html	/^<a name="l00040"><\/a>00040 $/;"	a
l00040	html/nbt_8h-source.html	/^<a name="l00040"><\/a>00040     HEX_WCHAR_T,$/;"	a
l00040	html/patricia_8h-source.html	/^<a name="l00040"><\/a><a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705">00040<\/a> <span class="keyword">enum<\/span> <a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705" title="The return value of trie_insert().">trie_insert_results<\/a>$/;"	a
l00040	html/read__nbt_8h-source.html	/^<a name="l00040"><\/a>00040 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_DOUBLE_MIN 0xC2<\/span>$/;"	a
l00040	html/renderer_8h-source.html	/^<a name="l00040"><\/a><a class="code" href="structrenderer__funcs.html">00040<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>$/;"	a
l00040	html/utf8_8h-source.html	/^<a name="l00040"><\/a><a class="code" href="group__utf8flags.html#gba25fe5533198e7924b9318b66df5b42">00040<\/a> <span class="preprocessor">#define UTF8_SKIP_BOM                   0x02<\/span>$/;"	a
l00041	html/colors_8h-source.html	/^<a name="l00041"><\/a><a class="code" href="structcolor__map.html#5d2e5055afbc3a904b2a9c1e1a156f67">00041<\/a>     uint16_t block_count; $/;"	a
l00041	html/hashtable_8h-source.html	/^<a name="l00041"><\/a>00041 <span class="comment"> * <\/span>$/;"	a
l00041	html/nbt_8h-source.html	/^<a name="l00041"><\/a>00041 };$/;"	a
l00041	html/patricia_8h-source.html	/^<a name="l00041"><\/a>00041 {$/;"	a
l00041	html/read__nbt_8h-source.html	/^<a name="l00041"><\/a>00041 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_DOUBLE_MAX 0xDF<\/span>$/;"	a
l00041	html/renderer_8h-source.html	/^<a name="l00041"><\/a>00041 {$/;"	a
l00041	html/trie_8h-source.html	/^<a name="l00041"><\/a><a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705">00041<\/a> <span class="keyword">enum<\/span> <a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705" title="The return value of trie_insert().">trie_insert_results<\/a>$/;"	a
l00041	html/utf8_8h-source.html	/^<a name="l00041"><\/a>00041 <span class="preprocessor"><\/span>$/;"	a
l00042	html/hashtable_8h-source.html	/^<a name="l00042"><\/a>00042 <span class="comment"> * Example:<\/span>$/;"	a
l00042	html/hashtable__private_8h-source.html	/^<a name="l00042"><\/a>00042 <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>$/;"	a
l00042	html/nbt_8h-source.html	/^<a name="l00042"><\/a>00042 $/;"	a
l00042	html/patricia_8h-source.html	/^<a name="l00042"><\/a><a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9">00042<\/a>     <a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9" title="Inserting resulted in an error.">TRIE_INSERT_ERROR<\/a>,      $/;"	a
l00042	html/read__nbt_8h-source.html	/^<a name="l00042"><\/a>00042 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_TRIPLE_MIN 0xE0<\/span>$/;"	a
l00042	html/trie_8h-source.html	/^<a name="l00042"><\/a>00042 {$/;"	a
l00043	html/cache_8h-source.html	/^<a name="l00043"><\/a>00043 <span class="keywordtype">void<\/span> <a class="code" href="cache_8h.html#f143abe7701dbf79ce364b8a8b82b844" title="Free a cache and all its values.">cache_free<\/a>(<a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *doomed);$/;"	a
l00043	html/chunk_8h-source.html	/^<a name="l00043"><\/a><a class="code" href="structchunk.html">00043<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>$/;"	a
l00043	html/colors_8h-source.html	/^<a name="l00043"><\/a><a class="code" href="structcolor__map.html#5d67d050ec18207142cd2c24f774bfb1">00043<\/a>     uint8_t color_depth; $/;"	a
l00043	html/hashtable_8h-source.html	/^<a name="l00043"><\/a>00043 <span class="comment"> *<\/span>$/;"	a
l00043	html/hashtable__private_8h-source.html	/^<a name="l00043"><\/a>00043 <a class="code" href="hashtable__private_8h.html#600340dd9622835efbbd25876afae9ee" title="Produces a hash for a given key.">hash<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *<a class="code" href="structentry.html#f2dadc5fe4b54bb8e5e484eef76715dd" title="The hash value of this bucket.">h<\/a>, <span class="keywordtype">void<\/span> *<a class="code" href="structentry.html#9418993f76a8d9b7fa21e44f218566d1" title="The key of this entry.">k<\/a>);$/;"	a
l00043	html/linked__list_8h-source.html	/^<a name="l00043"><\/a>00043 $/;"	a
l00043	html/maths_8h-source.html	/^<a name="l00043"><\/a>00043 uint64_t <a class="code" href="maths_8h.html#475a2980460550121093110581e80db0" title="Performs a bitwise rotate right.">uint64_ror<\/a>(uint64_t number, <span class="keywordtype">int<\/span> count);$/;"	a
l00043	html/patricia_8h-source.html	/^<a name="l00043"><\/a><a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8">00043<\/a>     <a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8" title="This key was already found.">TRIE_INSERT_EXISTS<\/a>,     $/;"	a
l00043	html/read__nbt_8h-source.html	/^<a name="l00043"><\/a>00043 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_TRIPLE_MAX 0xEF<\/span>$/;"	a
l00043	html/renderer_8h-source.html	/^<a name="l00043"><\/a>00043     int (*dimensions)(<span class="keywordtype">int<\/span>*,<span class="keywordtype">int<\/span>*);$/;"	a
l00043	html/trie_8h-source.html	/^<a name="l00043"><\/a><a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9">00043<\/a>     <a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705e87f0f8e514069d70e25bc2426d59af9" title="Inserting resulted in an error.">TRIE_INSERT_ERROR<\/a>,      $/;"	a
l00044	html/cache_8h-source.html	/^<a name="l00044"><\/a>00044 $/;"	a
l00044	html/chunk_8h-source.html	/^<a name="l00044"><\/a>00044 {$/;"	a
l00044	html/hashtable_8h-source.html	/^<a name="l00044"><\/a>00044 <span class="comment"> * Insert this at the start of your file:<\/span>$/;"	a
l00044	html/hashtable__itr_8h-source.html	/^<a name="l00044"><\/a>00044 <span class="keyword">extern<\/span> <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> *$/;"	a
l00044	html/hashtable__private_8h-source.html	/^<a name="l00044"><\/a>00044 $/;"	a
l00044	html/maths_8h-source.html	/^<a name="l00044"><\/a>00044 $/;"	a
l00044	html/nbt_8h-source.html	/^<a name="l00044"><\/a><a class="code" href="nbt_8h.html#4f356e1e46b8d4c6a82fdb294fb355ef">00044<\/a> <span class="preprocessor">#define NBT_TAG_TYPE_MIN TAG_End<\/span>$/;"	a
l00044	html/patricia_8h-source.html	/^<a name="l00044"><\/a><a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b">00044<\/a>     <a class="code" href="patricia_8h.html#b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b" title="Successful insertion.">TRIE_INSERT_SUCCESS<\/a>,    $/;"	a
l00044	html/read__nbt_8h-source.html	/^<a name="l00044"><\/a>00044 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_QUAD_MIN   0xF0<\/span>$/;"	a
l00044	html/renderer_8h-source.html	/^<a name="l00044"><\/a>00044 $/;"	a
l00044	html/trie_8h-source.html	/^<a name="l00044"><\/a><a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8">00044<\/a>     <a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705a4b4f4cac0251e7b805055a710046ba8" title="This key was already found.">TRIE_INSERT_EXISTS<\/a>,     $/;"	a
l00045	html/chunk_8h-source.html	/^<a name="l00045"><\/a><a class="code" href="structchunk.html#814b6c9f6aaa9d0118f2223f83c2f604">00045<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *data;      $/;"	a
l00045	html/colors_8h-source.html	/^<a name="l00045"><\/a><a class="code" href="structcolor__map.html#8b2fd50e2fb15e5179f85a2f5addee76">00045<\/a>     <a class="code" href="colors_8h.html#b2d2f68ff3665f20d6a9a3824b0c1b5f" title="The expected format for the get function of a color map.">color_get_func<\/a> <span class="keyword">get<\/span>; $/;"	a
l00045	html/hashtable_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="comment"> *<\/span>$/;"	a
l00045	html/hashtable__itr_8h-source.html	/^<a name="l00045"><\/a><a class="code" href="hashtable__itr_8h.html#99d04096416dcce19c249879ddc413d4">00045<\/a> <a class="code" href="hashtable__itr_8h.html#99d04096416dcce19c249879ddc413d4" title="return the value of the (key,value) pair at the current position">hashtable_iterator_key<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a> *i)$/;"	a
l00045	html/hashtable__private_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00045	html/nbt_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="preprocessor"><\/span>$/;"	a
l00045	html/patricia_8h-source.html	/^<a name="l00045"><\/a>00045 };$/;"	a
l00045	html/read__nbt_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_QUAD_MAX   0xF4<\/span>$/;"	a
l00045	html/trie_8h-source.html	/^<a name="l00045"><\/a><a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b">00045<\/a>     <a class="code" href="trie_8h.html#b02ffd8a74878d2958a298d2b3cd0705849d8c6814cf5ab8bc8514efcdec101b" title="Successful insertion.">TRIE_INSERT_SUCCESS<\/a>,    $/;"	a
l00046	html/chunk_8h-source.html	/^<a name="l00046"><\/a><a class="code" href="structchunk.html#0a83029a7e6e663529322c95a940448f">00046<\/a>     int32_t coord_x;    $/;"	a
l00046	html/colors_8h-source.html	/^<a name="l00046"><\/a>00046 } <a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a>;$/;"	a
l00046	html/flat_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="keywordtype">void<\/span> <a class="code" href="flat_8h.html#2747cfcc5c1db389c8072a2566c3ab3c" title="Draws a single row of image data.">renderer_flat_draw_row<\/a>(<span class="keywordtype">void<\/span> *_r, png_bytep buffer, <span class="keywordtype">int<\/span> row_number);$/;"	a
l00046	html/generic__structs_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="keywordtype">void<\/span> <a class="code" href="generic__structs_8h.html#88ac8aeba8c37680a5d5337fbd74e86d" title="Frees memory allocated by a list and all its list_node children.">list_free<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *doomed);$/;"	a
l00046	html/hashtable_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="comment"> * DEFINE_HASHTABLE_INSERT(insert_some, struct some_key, struct some_value);<\/span>$/;"	a
l00046	html/hashtable__itr_8h-source.html	/^<a name="l00046"><\/a>00046 {$/;"	a
l00046	html/hashtable__private_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="comment">\/* indexFor *\/<\/span>$/;"	a
l00046	html/level_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="keywordtype">void<\/span> <a class="code" href="level_8h.html#d4ecd0d61d0fca55386756d88c09d90e" title="Frees a level.">level_free<\/a>(<a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *doomed);$/;"	a
l00046	html/nbt_8h-source.html	/^<a name="l00046"><\/a><a class="code" href="nbt_8h.html#8ccb9ce0cb75c4ac033c8045adec5dd5">00046<\/a> <span class="preprocessor">#define NBT_TAG_TYPE_MAX TAG_Compound<\/span>$/;"	a
l00046	html/patricia_8h-source.html	/^<a name="l00046"><\/a>00046 $/;"	a
l00046	html/read__nbt_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="preprocessor"><\/span>$/;"	a
l00046	html/renderer_8h-source.html	/^<a name="l00046"><\/a>00046     void (*draw_row)(<span class="keywordtype">void<\/span>*,png_bytep,int);$/;"	a
l00046	html/slab_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="keywordtype">int<\/span> <a class="code" href="slab_8h.html#93903160e0e77d592d689623417873b8" title="Store a chunk in the slab cache.">cache_slab_set<\/a>(<span class="keywordtype">void<\/span> *_cache, int64_t key, <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *payload);$/;"	a
l00046	html/trie_8h-source.html	/^<a name="l00046"><\/a>00046 };$/;"	a
l00047	html/chunk_8h-source.html	/^<a name="l00047"><\/a><a class="code" href="structchunk.html#69c40b5a695d062154c7ce7d7f9c7b42">00047<\/a>     int32_t coord_z;    $/;"	a
l00047	html/colors_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	html/config_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="keywordtype">int<\/span> <a class="code" href="config_8h.html#ada823a60e38919d0bda1c0863660e93" title="Parses commandline arguments and populates config struct.">parse_commandline_options<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span> **argv, <a class="code" href="structconfiguration.html" title="Contains configuration information.">configuration<\/a> *config);$/;"	a
l00047	html/flat_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	html/generic__structs_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	html/hashtable_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="comment"> * DEFINE_HASHTABLE_SEARCH(search_some, struct some_key, struct some_value);<\/span>$/;"	a
l00047	html/hashtable__itr_8h-source.html	/^<a name="l00047"><\/a>00047     <span class="keywordflow">return<\/span> i-&gt;<a class="code" href="structhashtable__itr.html#9d8ed6f67c20f29c9e695138dedc8fa3" title="The current hash entry.">e<\/a>-&gt;<a class="code" href="structentry.html#9418993f76a8d9b7fa21e44f218566d1" title="The key of this entry.">k<\/a>;$/;"	a
l00047	html/level_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	html/nbt_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="preprocessor"><\/span>$/;"	a
l00047	html/read__nbt_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="preprocessor">#define UTF8_MASK_DOUBLE  0x1F<\/span>$/;"	a
l00047	html/renderer_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	html/slab_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	html/trie_8h-source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00048	html/chunk_8h-source.html	/^<a name="l00048"><\/a><a class="code" href="structchunk.html#4d97a54e684f473f6c130f037bee91e0">00048<\/a>     uint64_t height;    $/;"	a
l00048	html/colors_8h-source.html	/^<a name="l00048"><\/a>00048 $/;"	a
l00048	html/config_8h-source.html	/^<a name="l00048"><\/a>00048 $/;"	a
l00048	html/hashtable_8h-source.html	/^<a name="l00048"><\/a>00048 <span class="comment"> * DEFINE_HASHTABLE_REMOVE(remove_some, struct some_key, struct some_value);<\/span>$/;"	a
l00048	html/hashtable__itr_8h-source.html	/^<a name="l00048"><\/a>00048 }$/;"	a
l00048	html/hashtable__private_8h-source.html	/^<a name="l00048"><\/a>00048 <span class="comment">\/\/static inline unsigned int<\/span>$/;"	a
l00048	html/nbt_8h-source.html	/^<a name="l00048"><\/a><a class="code" href="nbt_8h.html#df2c8020d23a647712969b71e7d707a3">00048<\/a> <span class="preprocessor">#define NBT_TAG_TYPE_SIMPLE_MIN TAG_Byte<\/span>$/;"	a
l00048	html/patricia_8h-source.html	/^<a name="l00048"><\/a><a class="code" href="patricia_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c">00048<\/a> <span class="keyword">enum<\/span> <a class="code" href="patricia_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c" title="Flags to affect the behavior of trie_insert().">trie_insert_flags<\/a>$/;"	a
l00048	html/read__nbt_8h-source.html	/^<a name="l00048"><\/a>00048 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_MASK_TRIPLE  0x0F<\/span>$/;"	a
l00048	html/renderer_8h-source.html	/^<a name="l00048"><\/a>00048 } <a class="code" href="structrenderer__funcs.html" title="Contains pointers to all the functions that a renderer must implement.">renderer_funcs<\/a>;$/;"	a
l00049	html/hashtable_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="comment"> *<\/span>$/;"	a
l00049	html/hashtable__itr_8h-source.html	/^<a name="l00049"><\/a>00049 $/;"	a
l00049	html/hashtable__private_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="hashtable__private_8h.html#ea45085e558c7cfc89f4a88760dd9c86" title="Returns an index for a given hash value.">indexFor<\/a>(<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> tablelength, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> hashvalue) ;$/;"	a
l00049	html/nbt_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor"><\/span>$/;"	a
l00049	html/patricia_8h-source.html	/^<a name="l00049"><\/a>00049 {$/;"	a
l00049	html/read__nbt_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_MASK_QUAD    0x07<\/span>$/;"	a
l00049	html/renderer_8h-source.html	/^<a name="l00049"><\/a>00049 $/;"	a
l00049	html/trie_8h-source.html	/^<a name="l00049"><\/a><a class="code" href="trie_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c">00049<\/a> <span class="keyword">enum<\/span> <a class="code" href="trie_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c" title="Flags to affect the behavior of trie_insert().">trie_insert_flags<\/a>$/;"	a
l00050	html/chunk_8h-source.html	/^<a name="l00050"><\/a><a class="code" href="structchunk.html#140f4698ea158f4f7f8880f0252e7d2f">00050<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *blocks;        $/;"	a
l00050	html/hashtable_8h-source.html	/^<a name="l00050"><\/a>00050 <span class="comment"> * This defines the functions 'insert_some', 'search_some' and 'remove_some'.<\/span>$/;"	a
l00050	html/hashtable__private_8h-source.html	/^<a name="l00050"><\/a>00050 $/;"	a
l00050	html/linked__list_8h-source.html	/^<a name="l00050"><\/a>00050 <a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *<a class="code" href="linked__list_8h.html#59eb5d88a02510eb1104ee68f6292aef" title="Creates a new list.">list_new<\/a>(<a class="code" href="linked__list_8h.html#bc386d72b631c5cb6ede642cc2f9c8f1" title="Used to typecast functions to the type expected by the data member data_free_func...">list_free_func<\/a> node_free_func);$/;"	a
l00050	html/maths_8h-source.html	/^<a name="l00050"><\/a>00050 <span class="keywordtype">int<\/span> <a class="code" href="maths_8h.html#789b42158b836bb5e2a1521b9920e02e" title="Performs a modulo between two numbers.">modulo<\/a>(<span class="keywordtype">int<\/span> number, <span class="keywordtype">int<\/span> divisor);$/;"	a
l00050	html/nbt_8h-source.html	/^<a name="l00050"><\/a><a class="code" href="nbt_8h.html#416ab588483346263a9fac324b52998c">00050<\/a> <span class="preprocessor">#define NBT_TAG_TYPE_SIMPLE_MAX TAG_Double<\/span>$/;"	a
l00050	html/patricia_8h-source.html	/^<a name="l00050"><\/a><a class="code" href="patricia_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5">00050<\/a>     <a class="code" href="patricia_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5">TRIE_INSERT_FLAG_SKIP<\/a>,      $/;"	a
l00050	html/read__nbt_8h-source.html	/^<a name="l00050"><\/a>00050 <span class="preprocessor"><\/span><span class="preprocessor">#define UTF8_MASK_PAYLOAD 0x3F<\/span>$/;"	a
l00050	html/trie_8h-source.html	/^<a name="l00050"><\/a>00050 {$/;"	a
l00051	html/cache_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="keywordtype">int<\/span> <a class="code" href="cache_8h.html#17c6c6e770ceba25da9b74c041939d30" title="Store a chunk in a chunk_cache.">cache_set<\/a>(<a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *cache, int64_t key, <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *payload);$/;"	a
l00051	html/chunk_8h-source.html	/^<a name="l00051"><\/a><a class="code" href="structchunk.html#37b687d3851398103c4c94f803787167">00051<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *heightmap;     $/;"	a
l00051	html/hashtable_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="comment"> * These operate just like hashtable_insert etc., with the same parameters,<\/span>$/;"	a
l00051	html/hashtable__private_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="comment">\/* Only works if tablelength == 2^N *\/<\/span>$/;"	a
l00051	html/linked__list_8h-source.html	/^<a name="l00051"><\/a>00051 $/;"	a
l00051	html/maths_8h-source.html	/^<a name="l00051"><\/a>00051 $/;"	a
l00051	html/nbt_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="preprocessor"><\/span>$/;"	a
l00051	html/patricia_8h-source.html	/^<a name="l00051"><\/a><a class="code" href="patricia_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673">00051<\/a>     <a class="code" href="patricia_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673">TRIE_INSERT_FLAG_OVERWRITE<\/a>, $/;"	a
l00051	html/read__nbt_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="preprocessor"><\/span>$/;"	a
l00051	html/trie_8h-source.html	/^<a name="l00051"><\/a><a class="code" href="trie_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5">00051<\/a>     <a class="code" href="trie_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c341c6e37c80e42df9a929fd2cdffb4f5">TRIE_INSERT_FLAG_SKIP<\/a>,      $/;"	a
l00051	html/utf8_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="keywordtype">size_t<\/span>          <a class="code" href="utf8_8h.html#f7e9ebab7b83f6bc8ae329959fb267dd" title="Converts a bytestream of utf8 data to wchar_t.">utf8_to_wchar<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *in, <span class="keywordtype">size_t<\/span> insize, <span class="keywordtype">wchar_t<\/span> *out,$/;"	a
l00052	html/cache_8h-source.html	/^<a name="l00052"><\/a>00052 $/;"	a
l00052	html/chunk_8h-source.html	/^<a name="l00052"><\/a><a class="code" href="structchunk.html#e8ac600aa8b9a12daa9c029c2ed8f645">00052<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *blockdata;     $/;"	a
l00052	html/hashtable_8h-source.html	/^<a name="l00052"><\/a>00052 <span class="comment"> * but their function signatures have 'struct some_key *' rather than<\/span>$/;"	a
l00052	html/hashtable__private_8h-source.html	/^<a name="l00052"><\/a>00052 <span class="comment">\/*static inline unsigned int<\/span>$/;"	a
l00052	html/maths_8h-source.html	/^<a name="l00052"><\/a>00052 <span class="preprocessor">#endif<\/span>$/;"	a
l00052	html/patricia_8h-source.html	/^<a name="l00052"><\/a>00052 };$/;"	a
l00052	html/renderer_8h-source.html	/^<a name="l00052"><\/a><a class="code" href="structrenderer.html">00052<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>$/;"	a
l00052	html/trie_8h-source.html	/^<a name="l00052"><\/a><a class="code" href="trie_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673">00052<\/a>     <a class="code" href="trie_8h.html#8fe8bfc748dfab9e0a9ed4664e9ac83c86e01c0b8801f82e5262336e9d303673">TRIE_INSERT_FLAG_OVERWRITE<\/a>, $/;"	a
l00052	html/utf8_8h-source.html	/^<a name="l00052"><\/a>00052                     <span class="keywordtype">size_t<\/span> outsize, <span class="keywordtype">int<\/span> flags);$/;"	a
l00053	html/chunk_8h-source.html	/^<a name="l00053"><\/a><a class="code" href="structchunk.html#907d520433e02e1ab4ca01467d803884">00053<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *skylight;      $/;"	a
l00053	html/hashtable_8h-source.html	/^<a name="l00053"><\/a>00053 <span class="comment"> * 'void *', and hence can generate compile time errors if your program is<\/span>$/;"	a
l00053	html/hashtable__private_8h-source.html	/^<a name="l00053"><\/a>00053 <span class="comment">indexFor(unsigned int tablelength, unsigned int hashvalue)<\/span>$/;"	a
l00053	html/nbt_8h-source.html	/^<a name="l00053"><\/a><a class="code" href="nbt_8h.html#048ef9e4ece0b81034cdc11d0e03950b">00053<\/a> <span class="preprocessor">#define NBT_TAG_HASH_BUCKETS 16<\/span>$/;"	a
l00053	html/patricia_8h-source.html	/^<a name="l00053"><\/a>00053 $/;"	a
l00053	html/renderer_8h-source.html	/^<a name="l00053"><\/a>00053 {$/;"	a
l00053	html/trie_8h-source.html	/^<a name="l00053"><\/a>00053 };$/;"	a
l00053	html/utf8_8h-source.html	/^<a name="l00053"><\/a>00053 $/;"	a
l00054	html/chunk_8h-source.html	/^<a name="l00054"><\/a><a class="code" href="structchunk.html#898cc0373b4c5fa43cdd77374c6b3ac3">00054<\/a>     <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *blocklight;    $/;"	a
l00054	html/hashtable_8h-source.html	/^<a name="l00054"><\/a>00054 <span class="comment"> * supplying incorrect data as a key (and similarly for value).<\/span>$/;"	a
l00054	html/hashtable__private_8h-source.html	/^<a name="l00054"><\/a>00054 <span class="comment">{<\/span>$/;"	a
l00054	html/nbt_8h-source.html	/^<a name="l00054"><\/a>00054 <span class="preprocessor"><\/span>$/;"	a
l00054	html/renderer_8h-source.html	/^<a name="l00054"><\/a><a class="code" href="structrenderer.html#aac2bac0c697ffd441029da81085ff01">00054<\/a>     <a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *lvl;             $/;"	a
l00054	html/trie_8h-source.html	/^<a name="l00054"><\/a>00054 $/;"	a
l00055	html/chunk_8h-source.html	/^<a name="l00055"><\/a>00055 } <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a>;$/;"	a
l00055	html/flat_8h-source.html	/^<a name="l00055"><\/a>00055 <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *<a class="code" href="flat_8h.html#01c63cfd495a5c0ad22047f8803a0b61" title="Retrieve a chunk at the given coordinates.">renderer_flat_get_chunk<\/a>(<a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a> *r, int32_t coord_x, int32_t coord_z);$/;"	a
l00055	html/generic__structs_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="keywordtype">void<\/span> <a class="code" href="generic__structs_8h.html#6b4a539a1bfe5f752b86b168b057261c" title="Frees memory allocated by the creation of a list_node.">list_node_free<\/a>(<a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *doomed, <span class="keywordtype">void<\/span> (*node_free_func)(<span class="keywordtype">void<\/span>*));$/;"	a
l00055	html/hashtable_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="comment"> *<\/span>$/;"	a
l00055	html/hashtable__itr_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="keyword">extern<\/span> <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> *$/;"	a
l00055	html/hashtable__private_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="comment">    return (hashvalue &amp; (tablelength - 1u));<\/span>$/;"	a
l00055	html/level_8h-source.html	/^<a name="l00055"><\/a>00055 <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *<a class="code" href="level_8h.html#2c37585a1de9793c997dbd21eb7b9395" title="Loads a chunk from the map.">level_get_chunk_at<\/a>(<a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *lvl, <span class="keywordtype">int<\/span> coord_x, <span class="keywordtype">int<\/span> coord_z);$/;"	a
l00055	html/renderer_8h-source.html	/^<a name="l00055"><\/a><a class="code" href="structrenderer.html#c9f2ccd031ffe02688e0b2d1b85c27b5">00055<\/a>     <span class="keywordtype">char<\/span> *output_path;      $/;"	a
l00056	html/chunk_8h-source.html	/^<a name="l00056"><\/a>00056 $/;"	a
l00056	html/flat_8h-source.html	/^<a name="l00056"><\/a>00056 $/;"	a
l00056	html/generic__structs_8h-source.html	/^<a name="l00056"><\/a>00056 $/;"	a
l00056	html/hashtable_8h-source.html	/^<a name="l00056"><\/a>00056 <span class="comment"> * Note that the hash and key equality functions passed to create_hashtable<\/span>$/;"	a
l00056	html/hashtable__itr_8h-source.html	/^<a name="l00056"><\/a><a class="code" href="hashtable__itr_8h.html#a4b919095fbe788bd47a6d374b44a844">00056<\/a> <a class="code" href="hashtable__itr_8h.html#a4b919095fbe788bd47a6d374b44a844" title="return the value of the (key,value) pair at the current position">hashtable_iterator_value<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a> *i)$/;"	a
l00056	html/hashtable__private_8h-source.html	/^<a name="l00056"><\/a>00056 <span class="comment">}<\/span>$/;"	a
l00056	html/level_8h-source.html	/^<a name="l00056"><\/a>00056 $/;"	a
l00056	html/nbt_8h-source.html	/^<a name="l00056"><\/a><a class="code" href="nbt_8h.html#7b8dd91935fe497408d7b5c8e6bd9489">00056<\/a> <span class="keyword">typedef<\/span> void(*<a class="code" href="nbt_8h.html#7b8dd91935fe497408d7b5c8e6bd9489" title="A void function pointer.">vfp<\/a>)(<span class="keywordtype">void<\/span>*);$/;"	a
l00056	html/patricia_8h-source.html	/^<a name="l00056"><\/a><a class="code" href="patricia_8h.html#0d78036d2c09dadc4c7afa5270ca5641">00056<\/a> <span class="keyword">typedef<\/span> void(*<a class="code" href="patricia_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a>)(<span class="keywordtype">void<\/span>*);$/;"	a
l00057	html/colors_8h-source.html	/^<a name="l00057"><\/a>00057 <a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *<a class="code" href="colors_8h.html#31126dd7e8f24b2f530d2e3f7a906406" title="constructs a new color map.">color_map_new<\/a>(png_byte *colors, uint16_t block_count, uint8_t color_depth, <a class="code" href="colors_8h.html#b2d2f68ff3665f20d6a9a3824b0c1b5f" title="The expected format for the get function of a color map.">color_get_func<\/a> <span class="keyword">get<\/span>);$/;"	a
l00057	html/config_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="keywordtype">void<\/span> <a class="code" href="config_8h.html#6f1a04d5d9a7d0dab3bceb3e16010263" title="Frees any memory that was allocated.">free_config<\/a>(<a class="code" href="structconfiguration.html" title="Contains configuration information.">configuration<\/a> *config);$/;"	a
l00057	html/flat_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="preprocessor">#endif<\/span>$/;"	a
l00057	html/hashtable_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="comment"> * still take 'void *' parameters instead of 'some key *'. This shouldn't be<\/span>$/;"	a
l00057	html/hashtable__itr_8h-source.html	/^<a name="l00057"><\/a>00057 {$/;"	a
l00057	html/hashtable__private_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="comment">*\/<\/span>$/;"	a
l00057	html/nbt_8h-source.html	/^<a name="l00057"><\/a>00057 $/;"	a
l00057	html/patricia_8h-source.html	/^<a name="l00057"><\/a>00057 $/;"	a
l00057	html/renderer_8h-source.html	/^<a name="l00057"><\/a><a class="code" href="structrenderer.html#8c2eaf6ef42a9ecd11b8e9c7451783b4">00057<\/a>     <a class="code" href="structrenderer__funcs.html" title="Contains pointers to all the functions that a renderer must implement.">renderer_funcs<\/a> *funcs;  $/;"	a
l00057	html/slab_8h-source.html	/^<a name="l00057"><\/a>00057 <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *<a class="code" href="slab_8h.html#3a169b438c335788a3a37814e7c7bc69" title="Retrieve a chunk from a slab cache.">cache_slab_get<\/a>(<span class="keywordtype">void<\/span> *_cache, int64_t key);$/;"	a
l00057	html/trie_8h-source.html	/^<a name="l00057"><\/a><a class="code" href="trie_8h.html#0d78036d2c09dadc4c7afa5270ca5641">00057<\/a> <span class="keyword">typedef<\/span> void(*<a class="code" href="trie_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a>)(<span class="keywordtype">void<\/span>*);$/;"	a
l00058	html/cache_8h-source.html	/^<a name="l00058"><\/a>00058 <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *<a class="code" href="cache_8h.html#bfcf4e206708a891378b74fa72bdfbce" title="Retrieve a chunk from a chunk_cache.">cache_get<\/a>(<a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *cache, int64_t key);$/;"	a
l00058	html/colors_8h-source.html	/^<a name="l00058"><\/a>00058 $/;"	a
l00058	html/config_8h-source.html	/^<a name="l00058"><\/a>00058 $/;"	a
l00058	html/hashtable_8h-source.html	/^<a name="l00058"><\/a>00058 <span class="comment"> * a difficult issue as they're only defined and passed once, and the other<\/span>$/;"	a
l00058	html/hashtable__itr_8h-source.html	/^<a name="l00058"><\/a>00058     <span class="keywordflow">return<\/span> i-&gt;<a class="code" href="structhashtable__itr.html#9d8ed6f67c20f29c9e695138dedc8fa3" title="The current hash entry.">e<\/a>-&gt;<a class="code" href="structentry.html#ce77d89f70f0f57ed6d7c4e490329749" title="The value of this entry.">v<\/a>;$/;"	a
l00058	html/hashtable__private_8h-source.html	/^<a name="l00058"><\/a>00058 $/;"	a
l00058	html/linked__list_8h-source.html	/^<a name="l00058"><\/a>00058 <span class="keywordtype">void<\/span> <a class="code" href="linked__list_8h.html#88ac8aeba8c37680a5d5337fbd74e86d" title="Frees memory allocated by a list and all its list_node children.">list_free<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *doomed);$/;"	a
l00058	html/slab_8h-source.html	/^<a name="l00058"><\/a>00058 $/;"	a
l00058	html/trie_8h-source.html	/^<a name="l00058"><\/a>00058 $/;"	a
l00059	html/cache_8h-source.html	/^<a name="l00059"><\/a>00059 $/;"	a
l00059	html/hashtable_8h-source.html	/^<a name="l00059"><\/a>00059 <span class="comment"> * functions will ensure that only valid keys are supplied to them.<\/span>$/;"	a
l00059	html/hashtable__itr_8h-source.html	/^<a name="l00059"><\/a>00059 }$/;"	a
l00059	html/hashtable__private_8h-source.html	/^<a name="l00059"><\/a>00059 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00059	html/linked__list_8h-source.html	/^<a name="l00059"><\/a>00059 $/;"	a
l00059	html/renderer_8h-source.html	/^<a name="l00059"><\/a><a class="code" href="structrenderer.html#129f8550c077a9757a82d2355c251db3">00059<\/a>     int32_t tile_x;         $/;"	a
l00060	html/hashtable_8h-source.html	/^<a name="l00060"><\/a>00060 <span class="comment"> *<\/span>$/;"	a
l00060	html/hashtable__itr_8h-source.html	/^<a name="l00060"><\/a>00060 $/;"	a
l00060	html/patricia_8h-source.html	/^<a name="l00060"><\/a><a class="code" href="patricia_8h.html#70205478af98a0cb4ccf5ae6c7bc8843">00060<\/a> <span class="keyword">typedef<\/span> void(<a class="code" href="patricia_8h.html#70205478af98a0cb4ccf5ae6c7bc8843" title="A function pointer to a function that performs an action on a trie_node.">trie_traverse_func<\/a>)(<a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a>*);$/;"	a
l00061	html/hashtable_8h-source.html	/^<a name="l00061"><\/a>00061 <span class="comment"> * The cost for this checking is increased code size and runtime overhead<\/span>$/;"	a
l00061	html/hashtable__private_8h-source.html	/^<a name="l00061"><\/a><a class="code" href="hashtable__private_8h.html#0fd8326c7027d07ed3ad87c00788f78f">00061<\/a> <span class="preprocessor">#define freekey(X) free(X)<\/span>$/;"	a
l00061	html/level_8h-source.html	/^<a name="l00061"><\/a>00061 <span class="keywordtype">void<\/span> <a class="code" href="level_8h.html#8e14c0f506875ddf721fb5ab0c89b7e3" title="Scans a world folder and derives its dimensions.">level_get_dimensions<\/a>(<a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *lvl);$/;"	a
l00061	html/patricia_8h-source.html	/^<a name="l00061"><\/a>00061 $/;"	a
l00061	html/renderer_8h-source.html	/^<a name="l00061"><\/a><a class="code" href="structrenderer.html#75ded253a17eb4c19eb91f3d210ad23b">00061<\/a>     int32_t tile_z;         $/;"	a
l00061	html/trie_8h-source.html	/^<a name="l00061"><\/a><a class="code" href="trie_8h.html#70205478af98a0cb4ccf5ae6c7bc8843">00061<\/a> <span class="keyword">typedef<\/span> void(<a class="code" href="trie_8h.html#70205478af98a0cb4ccf5ae6c7bc8843" title="A function pointer to a function that performs an action on a trie_node.">trie_traverse_func<\/a>)(<a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node<\/a>*);$/;"	a
l00062	html/colors_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="keywordtype">void<\/span> <a class="code" href="colors_8h.html#30d04c477aa911060758f5588090a6cb" title="Frees a color map.">color_map_free<\/a>(<a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *doomed);$/;"	a
l00062	html/hashtable_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="comment"> * - if performance is important, it may be worth switching back to the<\/span>$/;"	a
l00062	html/hashtable__private_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="preprocessor"><\/span><span class="comment">\/*define freekey(X) ; *\/<\/span>$/;"	a
l00062	html/level_8h-source.html	/^<a name="l00062"><\/a>00062 $/;"	a
l00062	html/read__nbt_8h-source.html	/^<a name="l00062"><\/a>00062 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="read__nbt_8h.html#5d411745629a5bee438464fe67e6b4fa" title="Read an NBT file and place its information into an nbt_tag.">nbt_read<\/a>(gzFile file, <span class="keywordtype">int<\/span> force_tag_type);$/;"	a
l00062	html/slab_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="keywordtype">void<\/span> <a class="code" href="slab_8h.html#a59c1c321a68ff9de5542e10d294804c" title="Remove all chunks from a slab cache.">cache_slab_empty<\/a>(<span class="keywordtype">void<\/span> *_cache);$/;"	a
l00062	html/trie_8h-source.html	/^<a name="l00062"><\/a>00062 $/;"	a
l00062	html/utf8_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="keywordtype">size_t<\/span>          <a class="code" href="utf8_8h.html#404f46f60845acdba5f470f9395cd925" title="Converts a wchar_t buffer to a utf8 bytestream.">wchar_to_utf8<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">wchar_t<\/span> *in, <span class="keywordtype">size_t<\/span> insize, <span class="keywordtype">char<\/span> *out,$/;"	a
l00063	html/cache_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="keywordtype">void<\/span> <a class="code" href="cache_8h.html#0d2799a9ed4fa60f1c2e66b14eaa26b9" title="Remove and free all values from a chunk_cache.">cache_empty<\/a>(<a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *cache);$/;"	a
l00063	html/chunk_8h-source.html	/^<a name="l00063"><\/a>00063 <a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *<a class="code" href="chunk_8h.html#2046cbb3e8acdab8ad02546cbbed0e54" title="Reads a chunk from a file.">chunk_new<\/a>(<span class="keywordtype">char<\/span> *filepath, int32_t coord_x, int32_t coord_z);$/;"	a
l00063	html/colors_8h-source.html	/^<a name="l00063"><\/a>00063 $/;"	a
l00063	html/config_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="keywordtype">char<\/span> *<a class="code" href="config_8h.html#9850aa13dae18be5e07407338bb6a9f7" title="Returns a message associated with an error code.">config_error_message<\/a>(<span class="keywordtype">int<\/span> error_code);$/;"	a
l00063	html/hashtable_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="comment"> * unsafe methods once your program has been debugged with the safe methods.<\/span>$/;"	a
l00063	html/hashtable__private_8h-source.html	/^<a name="l00063"><\/a>00063 $/;"	a
l00063	html/level_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="preprocessor">#endif<\/span>$/;"	a
l00063	html/read__nbt_8h-source.html	/^<a name="l00063"><\/a>00063 $/;"	a
l00063	html/renderer_8h-source.html	/^<a name="l00063"><\/a><a class="code" href="structrenderer.html#c7e0580b7968c20533672744e7cee11e">00063<\/a>     <a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *cache;     $/;"	a
l00063	html/slab_8h-source.html	/^<a name="l00063"><\/a>00063 $/;"	a
l00063	html/utf8_8h-source.html	/^<a name="l00063"><\/a>00063                     <span class="keywordtype">size_t<\/span> outsize, <span class="keywordtype">int<\/span> flags);$/;"	a
l00064	html/cache_8h-source.html	/^<a name="l00064"><\/a>00064 $/;"	a
l00064	html/chunk_8h-source.html	/^<a name="l00064"><\/a>00064 $/;"	a
l00064	html/config_8h-source.html	/^<a name="l00064"><\/a>00064 <span class="preprocessor">#endif<\/span>$/;"	a
l00064	html/hashtable_8h-source.html	/^<a name="l00064"><\/a>00064 <span class="comment"> * This just requires switching to some simple alternative defines - eg:<\/span>$/;"	a
l00064	html/hashtable__private_8h-source.html	/^<a name="l00064"><\/a>00064 $/;"	a
l00064	html/utf8_8h-source.html	/^<a name="l00064"><\/a>00064 $/;"	a
l00065	html/hashtable_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="comment"> * #define insert_some hashtable_insert<\/span>$/;"	a
l00065	html/hashtable__private_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="comment">\/*****************************************************************************\/<\/span>$/;"	a
l00065	html/nbt_8h-source.html	/^<a name="l00065"><\/a><a class="code" href="nbt_8h.html#577be03003c2e2f09203b620eb835506">00065<\/a> <span class="preprocessor">#define nbt_new_byte_tag(name,name_len,payload) nbt_new_simple_tag(TAG_Byte, name, name_len, (void*)&amp;payload)<\/span>$/;"	a
l00065	html/renderer_8h-source.html	/^<a name="l00065"><\/a><a class="code" href="structrenderer.html#395cd2a64f0e682a1396b8648230bbc5">00065<\/a>     <a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *map;         $/;"	a
l00065	html/slab_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="preprocessor">#endif<\/span>$/;"	a
l00065	html/utf8_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="preprocessor">#endif <\/span><span class="comment">\/* !_UTF8_H_ *\/<\/span>$/;"	a
l00066	html/hashtable_8h-source.html	/^<a name="l00066"><\/a>00066 <span class="comment"> *<\/span>$/;"	a
l00066	html/hashtable__private_8h-source.html	/^<a name="l00066"><\/a>00066 $/;"	a
l00066	html/nbt_8h-source.html	/^<a name="l00066"><\/a>00066 <span class="preprocessor"><\/span>$/;"	a
l00066	html/patricia_8h-source.html	/^<a name="l00066"><\/a>00066 $/;"	a
l00066	html/renderer_8h-source.html	/^<a name="l00066"><\/a>00066 <span class="preprocessor">#ifdef DO_BLOCK_COUNT<\/span>$/;"	a
l00067	html/hashtable_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="comment"> *\/<\/span>$/;"	a
l00067	html/hashtable__itr_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="keywordtype">int<\/span>$/;"	a
l00067	html/hashtable__private_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="preprocessor">#endif <\/span><span class="comment">\/* __HASHTABLE_PRIVATE_CWC22_H__*\/<\/span>$/;"	a
l00067	html/linked__list_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="keywordtype">void<\/span> <a class="code" href="linked__list_8h.html#8bce96b78b5e92b2701abfb884c1c183" title="Frees memory allocated by the creation of a list_node.">list_node_free<\/a>(<a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *doomed, <a class="code" href="linked__list_8h.html#bc386d72b631c5cb6ede642cc2f9c8f1" title="Used to typecast functions to the type expected by the data member data_free_func...">list_free_func<\/a> node_free_func);$/;"	a
l00067	html/nbt_8h-source.html	/^<a name="l00067"><\/a><a class="code" href="nbt_8h.html#231f3a0856354a4351f981cb76c72f49">00067<\/a> <span class="preprocessor">#define nbt_new_short_tag(name,name_len,payload) nbt_new_simple_tag(TAG_Short, name, name_len, (void*)&amp;payload)<\/span>$/;"	a
l00067	html/renderer_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="preprocessor"><\/span>    uint8_t block_count[256]; $/;"	a
l00067	html/trie_8h-source.html	/^<a name="l00067"><\/a>00067 $/;"	a
l00068	html/chunk_8h-source.html	/^<a name="l00068"><\/a>00068 <span class="keywordtype">void<\/span> <a class="code" href="chunk_8h.html#3ec2f63fdfb5d7946eb6188091e9bea0" title="Destroy a chunk, freeing its memory.">chunk_free<\/a>(<span class="keywordtype">void<\/span> *doomed);$/;"	a
l00068	html/hashtable_8h-source.html	/^<a name="l00068"><\/a>00068 $/;"	a
l00068	html/hashtable__itr_8h-source.html	/^<a name="l00068"><\/a>00068 <a class="code" href="hashtable__itr_8h.html#ba4670bb0ddd8c2cfae9cff2a6a8054a" title="advance the iterator to the next element">hashtable_iterator_advance<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a> *itr);$/;"	a
l00068	html/hashtable__private_8h-source.html	/^<a name="l00068"><\/a>00068 $/;"	a
l00068	html/linked__list_8h-source.html	/^<a name="l00068"><\/a>00068 $/;"	a
l00068	html/nbt_8h-source.html	/^<a name="l00068"><\/a>00068 <span class="preprocessor"><\/span>$/;"	a
l00068	html/renderer_8h-source.html	/^<a name="l00068"><\/a>00068 <span class="preprocessor">#endif<\/span>$/;"	a
l00069	html/chunk_8h-source.html	/^<a name="l00069"><\/a>00069 $/;"	a
l00069	html/hashtable__itr_8h-source.html	/^<a name="l00069"><\/a>00069 $/;"	a
l00069	html/hashtable__private_8h-source.html	/^<a name="l00069"><\/a>00069 <span class="comment">\/*<\/span>$/;"	a
l00069	html/nbt_8h-source.html	/^<a name="l00069"><\/a><a class="code" href="nbt_8h.html#f6ea86764340f68f4aff42ff30d280b4">00069<\/a> <span class="preprocessor">#define nbt_new_int_tag(name,name_len,payload) nbt_new_simple_tag(TAG_Int, name, name_len, (void*)&amp;payload)<\/span>$/;"	a
l00069	html/renderer_8h-source.html	/^<a name="l00069"><\/a>00069 <span class="preprocessor"><\/span>} <a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a>;$/;"	a
l00070	html/colors_8h-source.html	/^<a name="l00070"><\/a>00070 <span class="keywordtype">int<\/span> <a class="code" href="colors_8h.html#b54d81ab78b9ea441137b4d630312e49" title="Finds the color of a requested block type and write it to a buffer.">color_map_write<\/a>(<a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *map, png_byte *destination, uint16_t block_type);$/;"	a
l00070	html/hashtable__private_8h-source.html	/^<a name="l00070"><\/a>00070 <span class="comment"> * Copyright (c) 2002, Christopher Clark<\/span>$/;"	a
l00070	html/nbt_8h-source.html	/^<a name="l00070"><\/a>00070 <span class="preprocessor"><\/span>$/;"	a
l00070	html/renderer_8h-source.html	/^<a name="l00070"><\/a>00070 $/;"	a
l00071	html/colors_8h-source.html	/^<a name="l00071"><\/a>00071 $/;"	a
l00071	html/generic__structs_8h-source.html	/^<a name="l00071"><\/a>00071 <span class="keywordtype">int<\/span>        <a class="code" href="generic__structs_8h.html#6689714c868285a8ff4e7d1110361e0f" title="Pushes a list_node onto the end of a list.">list_push_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *needle);$/;"	a
l00071	html/hashtable__private_8h-source.html	/^<a name="l00071"><\/a>00071 <span class="comment"> * All rights reserved.<\/span>$/;"	a
l00071	html/nbt_8h-source.html	/^<a name="l00071"><\/a><a class="code" href="nbt_8h.html#defebee36864b5b0e4dbadeaae1065ba">00071<\/a> <span class="preprocessor">#define nbt_new_long_tag(name,name_len,payload) nbt_new_simple_tag(TAG_Long, name, name_len, (void*)&amp;payload)<\/span>$/;"	a
l00071	html/patricia_8h-source.html	/^<a name="l00071"><\/a>00071 <a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *<a class="code" href="group__trieconstruct.html#gcca35d000d1c934b3c87577bc2758b36" title="Creates a new, empty PATRICIA trie.">trie_new<\/a>(<a class="code" href="patricia_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a> free_func);$/;"	a
l00072	html/generic__structs_8h-source.html	/^<a name="l00072"><\/a>00072 $/;"	a
l00072	html/hashtable__private_8h-source.html	/^<a name="l00072"><\/a>00072 <span class="comment"> * <\/span>$/;"	a
l00072	html/nbt_8h-source.html	/^<a name="l00072"><\/a>00072 <span class="preprocessor"><\/span>$/;"	a
l00072	html/patricia_8h-source.html	/^<a name="l00072"><\/a>00072 $/;"	a
l00072	html/trie_8h-source.html	/^<a name="l00072"><\/a>00072 <a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *<a class="code" href="group__trieconstruct.html#gcca35d000d1c934b3c87577bc2758b36" title="Creates a new, empty trie.">trie_new<\/a>(<a class="code" href="trie_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a> free_func);$/;"	a
l00073	html/hashtable__private_8h-source.html	/^<a name="l00073"><\/a>00073 <span class="comment"> * Redistribution and use in source and binary forms, with or without<\/span>$/;"	a
l00073	html/nbt_8h-source.html	/^<a name="l00073"><\/a><a class="code" href="nbt_8h.html#887414574e7a8af38766fd5203f9e7c2">00073<\/a> <span class="preprocessor">#define nbt_new_float_tag(name,name_len,payload) nbt_new_simple_tag(TAG_Float, name, name_len, (void*)&amp;payload)<\/span>$/;"	a
l00074	html/hashtable__private_8h-source.html	/^<a name="l00074"><\/a>00074 <span class="comment"> * modification, are permitted provided that the following conditions<\/span>$/;"	a
l00074	html/nbt_8h-source.html	/^<a name="l00074"><\/a>00074 <span class="preprocessor"><\/span>$/;"	a
l00074	html/read__nbt_8h-source.html	/^<a name="l00074"><\/a>00074 <span class="keywordtype">int<\/span> <a class="code" href="read__nbt_8h.html#47064c4c60c646e284f33520d61f6bbf" title="Wraps gzread in zlib.h and does error checking.">nbt_read_gzread<\/a>(gzFile file, <span class="keywordtype">void<\/span> *buffer, <span class="keywordtype">int<\/span> length);$/;"	a
l00075	html/hashtable__private_8h-source.html	/^<a name="l00075"><\/a>00075 <span class="comment"> * are met:<\/span>$/;"	a
l00075	html/nbt_8h-source.html	/^<a name="l00075"><\/a><a class="code" href="nbt_8h.html#8390ec3b88a7f840dbc5c80dbc15d1a8">00075<\/a> <span class="preprocessor">#define nbt_new_double_tag(name,name_len,payload) nbt_new_simple_tag(TAG_Double, name, name_len, (void*)&amp;payload)<\/span>$/;"	a
l00075	html/read__nbt_8h-source.html	/^<a name="l00075"><\/a>00075 $/;"	a
l00076	html/hashtable__private_8h-source.html	/^<a name="l00076"><\/a>00076 <span class="comment"> * <\/span>$/;"	a
l00076	html/nbt_8h-source.html	/^<a name="l00076"><\/a>00076 <span class="preprocessor"><\/span>$/;"	a
l00077	html/chunk_8h-source.html	/^<a name="l00077"><\/a>00077 <span class="keywordtype">int<\/span> <a class="code" href="chunk_8h.html#03ea45110967b845fe3c509e6b26940f" title="Parse a chunk&amp;#39;s filename and retrieve the coordinates from it.">chunk_get_coords_from_filename<\/a>(<span class="keywordtype">char<\/span> *filename, int32_t *x_coord, int32_t *z_coord);$/;"	a
l00077	html/colors_8h-source.html	/^<a name="l00077"><\/a>00077 png_byte *<a class="code" href="colors_8h.html#f2812194d7afd2b3bcbc26770b0f87ee" title="Retrieves a color from the color map.">color_map_get<\/a>(<a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *map, uint16_t block_type);$/;"	a
l00077	html/hashtable_8h-source.html	/^<a name="l00077"><\/a>00077 <span class="keyword">struct <\/span><a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *$/;"	a
l00077	html/hashtable__private_8h-source.html	/^<a name="l00077"><\/a>00077 <span class="comment"> * * Redistributions of source code must retain the above copyright<\/span>$/;"	a
l00078	html/chunk_8h-source.html	/^<a name="l00078"><\/a>00078 $/;"	a
l00078	html/colors_8h-source.html	/^<a name="l00078"><\/a>00078 <span class="preprocessor">#endif<\/span>$/;"	a
l00078	html/hashtable_8h-source.html	/^<a name="l00078"><\/a>00078 <a class="code" href="hashtable_8h.html#0129c9f37aa20931a2c54a337af06161" title="create_hashtable">create_hashtable<\/a>(<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> minsize,$/;"	a
l00078	html/hashtable__itr_8h-source.html	/^<a name="l00078"><\/a>00078 <span class="keywordtype">int<\/span>$/;"	a
l00078	html/hashtable__private_8h-source.html	/^<a name="l00078"><\/a>00078 <span class="comment"> * notice, this list of conditions and the following disclaimer.<\/span>$/;"	a
l00079	html/cache_8h-source.html	/^<a name="l00079"><\/a>00079 <a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *<a class="code" href="cache_8h.html#47be2cc0ef8ac47221e4aaf9892d8836" title="Allocates a new cache.">cache_new<\/a>();$/;"	a
l00079	html/generic__structs_8h-source.html	/^<a name="l00079"><\/a>00079 <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *<a class="code" href="generic__structs_8h.html#673332bfd02dd1f1840c6ba8309cf4d1" title="Pops a list_node off of the end of a list.">list_pop_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00079	html/hashtable_8h-source.html	/^<a name="l00079"><\/a>00079                  <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> (*hashfunction) (<span class="keywordtype">void<\/span>*),$/;"	a
l00079	html/hashtable__itr_8h-source.html	/^<a name="l00079"><\/a>00079 <a class="code" href="hashtable__itr_8h.html#81b57695f6d3fd01342e3f81be595855" title="remove current element and advance the iterator to the next element">hashtable_iterator_remove<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a> *itr);$/;"	a
l00079	html/hashtable__private_8h-source.html	/^<a name="l00079"><\/a>00079 <span class="comment"> * <\/span>$/;"	a
l00079	html/nbt_8h-source.html	/^<a name="l00079"><\/a><a class="code" href="unionu__tag__payload.html">00079<\/a> <span class="keyword">typedef<\/span> <span class="keyword">union <\/span>{$/;"	a
l00079	html/patricia_8h-source.html	/^<a name="l00079"><\/a>00079 <a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a> *<a class="code" href="group__trieconstruct.html#g26d51df64a8c1a9b2458bd78d723323d" title="Creates a new trie_node.">trie_new_node<\/a>(<span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>, <span class="keywordtype">void<\/span> *<a class="code" href="structtrie__node__s.html#2a1a02be2666c6a25a4e08cd10bd6896" title="The payload for this node.">payload<\/a>, uint32_t <a class="code" href="structtrie__node__s.html#9b70c26d9f0e58da9540b19bd29793b3" title="The byte index of this node.">byte_index<\/a>);$/;"	a
l00080	html/generic__structs_8h-source.html	/^<a name="l00080"><\/a>00080 $/;"	a
l00080	html/hashtable_8h-source.html	/^<a name="l00080"><\/a>00080                  <span class="keywordtype">int<\/span> (*key_eq_fn) (<span class="keywordtype">void<\/span>*,<span class="keywordtype">void<\/span>*),$/;"	a
l00080	html/hashtable__itr_8h-source.html	/^<a name="l00080"><\/a>00080 $/;"	a
l00080	html/hashtable__private_8h-source.html	/^<a name="l00080"><\/a>00080 <span class="comment"> * * Redistributions in binary form must reproduce the above copyright<\/span>$/;"	a
l00080	html/nbt_8h-source.html	/^<a name="l00080"><\/a><a class="code" href="unionu__tag__payload.html#aa2c2f250a6437d4b1fb1c8c3de576bd">00080<\/a>     int8_t  byte_payload;        $/;"	a
l00081	html/hashtable_8h-source.html	/^<a name="l00081"><\/a>00081                  <span class="keywordtype">void<\/span> (*vff)(<span class="keywordtype">void<\/span>*));$/;"	a
l00081	html/hashtable__private_8h-source.html	/^<a name="l00081"><\/a>00081 <span class="comment"> * notice, this list of conditions and the following disclaimer in the<\/span>$/;"	a
l00081	html/nbt_8h-source.html	/^<a name="l00081"><\/a><a class="code" href="unionu__tag__payload.html#4b1002fd4f7d5376d63b3bb39d2e37ba">00081<\/a>     int16_t short_payload;       $/;"	a
l00082	html/cache_8h-source.html	/^<a name="l00082"><\/a>00082 <span class="preprocessor">#endif<\/span>$/;"	a
l00082	html/hashtable_8h-source.html	/^<a name="l00082"><\/a>00082 $/;"	a
l00082	html/hashtable__private_8h-source.html	/^<a name="l00082"><\/a>00082 <span class="comment"> * documentation and\/or other materials provided with the distribution.<\/span>$/;"	a
l00082	html/nbt_8h-source.html	/^<a name="l00082"><\/a><a class="code" href="unionu__tag__payload.html#1ff81f826c5618c761e991aae07195d8">00082<\/a>     int32_t int_payload;         $/;"	a
l00082	html/read__nbt_8h-source.html	/^<a name="l00082"><\/a>00082 <span class="keywordtype">int<\/span> <a class="code" href="read__nbt_8h.html#e17508a7a608530430c468da6a07200e" title="Reads a utf8 string from a gzFile.">nbt_read_gzread_utf8<\/a>(gzFile file, <span class="keywordtype">wchar_t<\/span> *wchar_buffer, <span class="keywordtype">int<\/span> length);$/;"	a
l00083	html/hashtable__private_8h-source.html	/^<a name="l00083"><\/a>00083 <span class="comment"> * <\/span>$/;"	a
l00083	html/linked__list_8h-source.html	/^<a name="l00083"><\/a>00083 <span class="keywordtype">int<\/span>        <a class="code" href="linked__list_8h.html#6689714c868285a8ff4e7d1110361e0f" title="Pushes a list_node onto the end of a list.">list_push_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *needle);$/;"	a
l00083	html/nbt_8h-source.html	/^<a name="l00083"><\/a><a class="code" href="unionu__tag__payload.html#fb4c676f4580f98862da4ea98de899b9">00083<\/a>     int64_t long_payload;        $/;"	a
l00083	html/read__nbt_8h-source.html	/^<a name="l00083"><\/a>00083 $/;"	a
l00083	html/renderer_8h-source.html	/^<a name="l00083"><\/a>00083 <a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a> *<a class="code" href="renderer_8h.html#9a5213c3908ba24e300f6106c86f1d5b" title="Creates a new renderer.">renderer_new<\/a>(<a class="code" href="structlevel.html" title="Contains information about the level.">level<\/a> *lvl, <span class="keywordtype">char<\/span> *output_path, <a class="code" href="structcolor__map.html" title="Holds a map of blocks to colors.">color_map<\/a> *map, <a class="code" href="structrenderer__funcs.html" title="Contains pointers to all the functions that a renderer must implement.">renderer_funcs<\/a> *funcs, <a class="code" href="structchunk__cache.html" title="The base object for a chunk cache.">chunk_cache<\/a> *cache);$/;"	a
l00084	html/chunk_8h-source.html	/^<a name="l00084"><\/a>00084 uint64_t <a class="code" href="chunk_8h.html#3bbfd653343e8d54e3ff8403acc718a4" title="Generate a 64-bit key for the chunk using its coordinates.">chunk_generate_key<\/a>(<a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *c);$/;"	a
l00084	html/hashtable__private_8h-source.html	/^<a name="l00084"><\/a>00084 <span class="comment"> * * Neither the name of the original author; nor the names of any contributors<\/span>$/;"	a
l00084	html/linked__list_8h-source.html	/^<a name="l00084"><\/a>00084 $/;"	a
l00084	html/nbt_8h-source.html	/^<a name="l00084"><\/a><a class="code" href="unionu__tag__payload.html#a7068febe3e135e043af0a1ab5180028">00084<\/a>     <span class="keywordtype">float<\/span>   float_payload;       $/;"	a
l00084	html/read__nbt_8h-source.html	/^<a name="l00084"><\/a>00084 <span class="preprocessor">#endif<\/span>$/;"	a
l00084	html/renderer_8h-source.html	/^<a name="l00084"><\/a>00084 $/;"	a
l00085	html/chunk_8h-source.html	/^<a name="l00085"><\/a>00085 $/;"	a
l00085	html/hashtable__private_8h-source.html	/^<a name="l00085"><\/a>00085 <span class="comment"> * may be used to endorse or promote products derived from this software<\/span>$/;"	a
l00085	html/nbt_8h-source.html	/^<a name="l00085"><\/a><a class="code" href="unionu__tag__payload.html#4ca5ae296697d4ce9248c484d2e86fd0">00085<\/a>     <span class="keywordtype">double<\/span>  double_payload;      $/;"	a
l00086	html/hashtable__private_8h-source.html	/^<a name="l00086"><\/a>00086 <span class="comment"> * without specific prior written permission.<\/span>$/;"	a
l00086	html/nbt_8h-source.html	/^<a name="l00086"><\/a><a class="code" href="unionu__tag__payload.html#1c06d20b99fa830f7ea72b59a1badea0">00086<\/a>     uint8_t *byte_array_payload; $/;"	a
l00087	html/hashtable__private_8h-source.html	/^<a name="l00087"><\/a>00087 <span class="comment"> * <\/span>$/;"	a
l00087	html/nbt_8h-source.html	/^<a name="l00087"><\/a><a class="code" href="unionu__tag__payload.html#ba912e7c556e85bef6af2528ddc103f3">00087<\/a>     <span class="keywordtype">wchar_t<\/span> *string_payload;     $/;"	a
l00087	html/trie_8h-source.html	/^<a name="l00087"><\/a>00087 <span class="keywordtype">int<\/span> <a class="code" href="group__triemanip.html#g05e0b1fcc12f456f69a4985dcf0f8b6d" title="Inserts a key \/ payload pair into the trie.">trie_insert<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *key, <span class="keywordtype">void<\/span> *payload, <span class="keywordtype">int<\/span> flags);$/;"	a
l00088	html/generic__structs_8h-source.html	/^<a name="l00088"><\/a>00088 <span class="keywordtype">int<\/span>        <a class="code" href="generic__structs_8h.html#d98772f7ac5b2fca9a1bac6b60f850fc" title="Adds a list_node to the front of a list.">list_unshift_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *needle);$/;"	a
l00088	html/hashtable__itr_8h-source.html	/^<a name="l00088"><\/a>00088 <span class="keywordtype">int<\/span>$/;"	a
l00088	html/hashtable__private_8h-source.html	/^<a name="l00088"><\/a>00088 <span class="comment"> * <\/span>$/;"	a
l00088	html/nbt_8h-source.html	/^<a name="l00088"><\/a><a class="code" href="unionu__tag__payload.html#92e734bbcafc3535c3b34cbdc188b8a3">00088<\/a>     <a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a>    *list_payload;       $/;"	a
l00088	html/trie_8h-source.html	/^<a name="l00088"><\/a>00088 $/;"	a
l00089	html/generic__structs_8h-source.html	/^<a name="l00089"><\/a>00089 $/;"	a
l00089	html/hashtable__itr_8h-source.html	/^<a name="l00089"><\/a>00089 <a class="code" href="hashtable__itr_8h.html#0e90aaebd6c01dd33adcb8c28172bfda" title="overwrite the supplied iterator, to point to the entry matching the supplied key...">hashtable_iterator_search<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable__itr.html" title="An iterator for a hash table.">hashtable_itr<\/a> *itr,$/;"	a
l00089	html/hashtable__private_8h-source.html	/^<a name="l00089"><\/a>00089 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS<\/span>$/;"	a
l00089	html/nbt_8h-source.html	/^<a name="l00089"><\/a><a class="code" href="unionu__tag__payload.html#d4eec58b7aaba2513c9dbe8da5e6bdbd">00089<\/a>     <span class="keyword">struct <\/span><a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *compound_payload; $/;"	a
l00090	html/hashtable__itr_8h-source.html	/^<a name="l00090"><\/a>00090                           <span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *<a class="code" href="structhashtable__itr.html#feb5f8e7593d50fc3ce781ab0d9fd7e7" title="The hash table to iterate over.">h<\/a>, <span class="keywordtype">void<\/span> *k);$/;"	a
l00090	html/hashtable__private_8h-source.html	/^<a name="l00090"><\/a>00090 <span class="comment"> * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT<\/span>$/;"	a
l00090	html/nbt_8h-source.html	/^<a name="l00090"><\/a>00090 } <a class="code" href="unionu__tag__payload.html" title="Contains the payload for an nbt_tag.">u_tag_payload<\/a>;$/;"	a
l00091	html/hashtable__itr_8h-source.html	/^<a name="l00091"><\/a>00091 $/;"	a
l00091	html/hashtable__private_8h-source.html	/^<a name="l00091"><\/a>00091 <span class="comment"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR<\/span>$/;"	a
l00091	html/linked__list_8h-source.html	/^<a name="l00091"><\/a>00091 <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *<a class="code" href="linked__list_8h.html#673332bfd02dd1f1840c6ba8309cf4d1" title="Pops a list_node off of the end of a list.">list_pop_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00091	html/nbt_8h-source.html	/^<a name="l00091"><\/a>00091 $/;"	a
l00092	html/chunk_8h-source.html	/^<a name="l00092"><\/a>00092 uint64_t <a class="code" href="chunk_8h.html#456d09a77fa2de3c732fd9c7c0c04ebe" title="Generate a 64-bit key for a chunk using provided coordinates.">chunk_generate_key_from_coords<\/a>(int32_t coord_x, int32_t coord_z);$/;"	a
l00092	html/hashtable__itr_8h-source.html	/^<a name="l00092"><\/a>00092 $/;"	a
l00092	html/hashtable__private_8h-source.html	/^<a name="l00092"><\/a>00092 <span class="comment"> * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER<\/span>$/;"	a
l00092	html/linked__list_8h-source.html	/^<a name="l00092"><\/a>00092 $/;"	a
l00092	html/renderer_8h-source.html	/^<a name="l00092"><\/a>00092 <span class="keywordtype">int<\/span> <a class="code" href="renderer_8h.html#a95511247cb321a02bc95a3eedfc3dd5" title="Perform the render.">renderer_perform<\/a>(<a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a> *r, int32_t tile_x, int32_t tile_z);$/;"	a
l00093	html/chunk_8h-source.html	/^<a name="l00093"><\/a>00093 $/;"	a
l00093	html/hashtable__itr_8h-source.html	/^<a name="l00093"><\/a>00093 <span class="preprocessor">#endif <\/span><span class="comment">\/* __HASHTABLE_ITR_CWC22__*\/<\/span>$/;"	a
l00093	html/hashtable__private_8h-source.html	/^<a name="l00093"><\/a>00093 <span class="comment"> * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,<\/span>$/;"	a
l00093	html/nbt_8h-source.html	/^<a name="l00093"><\/a><a class="code" href="unionu__tag__meta.html">00093<\/a> <span class="keyword">typedef<\/span> <span class="keyword">union <\/span>{$/;"	a
l00093	html/renderer_8h-source.html	/^<a name="l00093"><\/a>00093 $/;"	a
l00094	html/hashtable__itr_8h-source.html	/^<a name="l00094"><\/a>00094 $/;"	a
l00094	html/hashtable__private_8h-source.html	/^<a name="l00094"><\/a>00094 <span class="comment"> * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,<\/span>$/;"	a
l00094	html/nbt_8h-source.html	/^<a name="l00094"><\/a><a class="code" href="unionu__tag__meta.html#56ec61bd74ef140252909e9f568b232f">00094<\/a>     int32_t length;         $/;"	a
l00094	html/patricia_8h-source.html	/^<a name="l00094"><\/a>00094 <span class="keywordtype">int<\/span> <a class="code" href="group__triemanip.html#g05e0b1fcc12f456f69a4985dcf0f8b6d" title="Inserts a key \/ payload pair into the trie.">trie_insert<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>, <span class="keywordtype">void<\/span> *<a class="code" href="structtrie__node__s.html#2a1a02be2666c6a25a4e08cd10bd6896" title="The payload for this node.">payload<\/a>, <span class="keywordtype">int<\/span> flags);$/;"	a
l00094	html/trie_8h-source.html	/^<a name="l00094"><\/a>00094 <span class="keywordtype">int<\/span> <a class="code" href="group__triemanip.html#g0367b85362296186facad3312fdf3f90" title="Deletes a node in the trie with a given key.">trie_delete<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *key);$/;"	a
l00095	html/hashtable__itr_8h-source.html	/^<a name="l00095"><\/a>00095 <span class="comment">\/*<\/span>$/;"	a
l00095	html/hashtable__private_8h-source.html	/^<a name="l00095"><\/a>00095 <span class="comment"> * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR<\/span>$/;"	a
l00095	html/nbt_8h-source.html	/^<a name="l00095"><\/a><a class="code" href="unionu__tag__meta.html#452bd87ae4cf3e94f7735762ced90e8a">00095<\/a>     int8_t  child_tag_type; $/;"	a
l00095	html/patricia_8h-source.html	/^<a name="l00095"><\/a>00095 $/;"	a
l00096	html/generic__structs_8h-source.html	/^<a name="l00096"><\/a>00096 <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *<a class="code" href="generic__structs_8h.html#a6b21427d10b9c5a9a38339d19f57acd" title="Removes the first list_node from a list.">list_shift_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00096	html/hashtable__itr_8h-source.html	/^<a name="l00096"><\/a>00096 <span class="comment"> * Copyright (c) 2002, 2004, Christopher Clark<\/span>$/;"	a
l00096	html/hashtable__private_8h-source.html	/^<a name="l00096"><\/a>00096 <span class="comment"> * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF<\/span>$/;"	a
l00096	html/nbt_8h-source.html	/^<a name="l00096"><\/a>00096 } <a class="code" href="unionu__tag__meta.html" title="Contains meta-information for an nbt_tag.">u_tag_meta<\/a>;$/;"	a
l00097	html/hashtable__itr_8h-source.html	/^<a name="l00097"><\/a>00097 <span class="comment"> * All rights reserved.<\/span>$/;"	a
l00097	html/hashtable__private_8h-source.html	/^<a name="l00097"><\/a>00097 <span class="comment"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING<\/span>$/;"	a
l00097	html/nbt_8h-source.html	/^<a name="l00097"><\/a>00097 $/;"	a
l00098	html/hashtable__itr_8h-source.html	/^<a name="l00098"><\/a>00098 <span class="comment"> * <\/span>$/;"	a
l00098	html/hashtable__private_8h-source.html	/^<a name="l00098"><\/a>00098 <span class="comment"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS<\/span>$/;"	a
l00098	html/renderer_8h-source.html	/^<a name="l00098"><\/a>00098 <span class="keywordtype">int<\/span> <a class="code" href="renderer_8h.html#9481de9684a4d9bfe92d551a5485f2ec" title="Sanity checks the renderer, ensuring that vital information exists.">renderer_sanity_check<\/a>(<a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a> *r);$/;"	a
l00099	html/hashtable_8h-source.html	/^<a name="l00099"><\/a>00099 <span class="keywordtype">int<\/span> $/;"	a
l00099	html/hashtable__itr_8h-source.html	/^<a name="l00099"><\/a>00099 <span class="comment"> * Redistribution and use in source and binary forms, with or without<\/span>$/;"	a
l00099	html/hashtable__private_8h-source.html	/^<a name="l00099"><\/a>00099 <span class="comment"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.<\/span>$/;"	a
l00099	html/renderer_8h-source.html	/^<a name="l00099"><\/a>00099 $/;"	a
l00100	html/chunk_8h-source.html	/^<a name="l00100"><\/a>00100 uint32_t <a class="code" href="chunk_8h.html#859f05e031ec6ba684f019f96ac50d57" title="Generate a hash key for a chunk.">chunk_hash<\/a>(<span class="keywordtype">void<\/span> *_c);$/;"	a
l00100	html/hashtable_8h-source.html	/^<a name="l00100"><\/a>00100 <a class="code" href="hashtable_8h.html#05bc9b9456318d1018d17729894a7b45" title="hashtable_insert">hashtable_insert<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *h, <span class="keywordtype">void<\/span> *k, <span class="keywordtype">void<\/span> *v);$/;"	a
l00100	html/hashtable__itr_8h-source.html	/^<a name="l00100"><\/a>00100 <span class="comment"> * modification, are permitted provided that the following conditions<\/span>$/;"	a
l00100	html/hashtable__private_8h-source.html	/^<a name="l00100"><\/a>00100 <span class="comment">*\/<\/span>$/;"	a
l00100	html/linked__list_8h-source.html	/^<a name="l00100"><\/a>00100 <span class="keywordtype">int<\/span>        <a class="code" href="linked__list_8h.html#d98772f7ac5b2fca9a1bac6b60f850fc" title="Adds a list_node to the front of a list.">list_unshift_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *needle);$/;"	a
l00100	html/nbt_8h-source.html	/^<a name="l00100"><\/a><a class="code" href="structnbt__tag.html">00100<\/a> <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>$/;"	a
l00101	html/chunk_8h-source.html	/^<a name="l00101"><\/a>00101 $/;"	a
l00101	html/hashtable_8h-source.html	/^<a name="l00101"><\/a>00101 $/;"	a
l00101	html/hashtable__itr_8h-source.html	/^<a name="l00101"><\/a>00101 <span class="comment"> * are met:<\/span>$/;"	a
l00101	html/linked__list_8h-source.html	/^<a name="l00101"><\/a>00101 $/;"	a
l00101	html/nbt_8h-source.html	/^<a name="l00101"><\/a>00101 {$/;"	a
l00101	html/patricia_8h-source.html	/^<a name="l00101"><\/a>00101 <span class="keywordtype">int<\/span> <a class="code" href="group__triemanip.html#g0367b85362296186facad3312fdf3f90" title="Deletes a node in the trie with a given key.">trie_delete<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>);$/;"	a
l00102	html/hashtable__itr_8h-source.html	/^<a name="l00102"><\/a>00102 <span class="comment"> * <\/span>$/;"	a
l00102	html/nbt_8h-source.html	/^<a name="l00102"><\/a><a class="code" href="structnbt__tag.html#8610b367574a788031fac919b1952e3e">00102<\/a>     uint8_t         type;     $/;"	a
l00103	html/hashtable__itr_8h-source.html	/^<a name="l00103"><\/a>00103 <span class="comment"> * * Redistributions of source code must retain the above copyright<\/span>$/;"	a
l00103	html/nbt_8h-source.html	/^<a name="l00103"><\/a><a class="code" href="structnbt__tag.html#5a58d322e3c60fb8f0de95f1ce574795">00103<\/a>     <span class="keywordtype">wchar_t<\/span>        *name;     $/;"	a
l00103	html/renderer_8h-source.html	/^<a name="l00103"><\/a>00103 <span class="keywordtype">void<\/span> <a class="code" href="renderer_8h.html#4148a70349dd98b751115408a51fde62" title="Free a renderer&amp;#39;s allocated memory.">renderer_free<\/a>(<a class="code" href="structrenderer.html" title="Holds information about a renderer.">renderer<\/a> *doomed);$/;"	a
l00104	html/hashtable__itr_8h-source.html	/^<a name="l00104"><\/a>00104 <span class="comment"> * notice, this list of conditions and the following disclaimer.<\/span>$/;"	a
l00104	html/nbt_8h-source.html	/^<a name="l00104"><\/a><a class="code" href="structnbt__tag.html#df8ad77bb15c430adf0d333d504ff806">00104<\/a>     uint16_t        name_len; $/;"	a
l00104	html/renderer_8h-source.html	/^<a name="l00104"><\/a>00104 $/;"	a
l00105	html/hashtable__itr_8h-source.html	/^<a name="l00105"><\/a>00105 <span class="comment"> * <\/span>$/;"	a
l00105	html/nbt_8h-source.html	/^<a name="l00105"><\/a><a class="code" href="structnbt__tag.html#8755dff8d2db5747742fb63f1aec6ff7">00105<\/a>     <a class="code" href="unionu__tag__meta.html" title="Contains meta-information for an nbt_tag.">u_tag_meta<\/a>     *meta;     $/;"	a
l00106	html/hashtable__itr_8h-source.html	/^<a name="l00106"><\/a>00106 <span class="comment"> * * Redistributions in binary form must reproduce the above copyright<\/span>$/;"	a
l00106	html/nbt_8h-source.html	/^<a name="l00106"><\/a><a class="code" href="structnbt__tag.html#73fe02a5a9c40e4b88da35367b415be8">00106<\/a>     <a class="code" href="unionu__tag__payload.html" title="Contains the payload for an nbt_tag.">u_tag_payload<\/a>  *payload;  $/;"	a
l00107	html/chunk_8h-source.html	/^<a name="l00107"><\/a>00107 <span class="keywordtype">int<\/span> <a class="code" href="chunk_8h.html#070d5cd330993d497bc24fedc80a5aac" title="Determine if two chunk hash keys are equal.">chunk_key_eqfn<\/a>(<span class="keywordtype">void<\/span> *key1, <span class="keywordtype">void<\/span> *key2);$/;"	a
l00107	html/hashtable__itr_8h-source.html	/^<a name="l00107"><\/a>00107 <span class="comment"> * notice, this list of conditions and the following disclaimer in the<\/span>$/;"	a
l00107	html/nbt_8h-source.html	/^<a name="l00107"><\/a>00107 } <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a>;$/;"	a
l00107	html/trie_8h-source.html	/^<a name="l00107"><\/a>00107 <span class="keywordtype">void<\/span> *<a class="code" href="group__triesearch.html#ge496f117566016dc8750c37e46ed776e" title="Searches the trie for a given key, returning a payload if successful.">trie_search<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *key);$/;"	a
l00108	html/chunk_8h-source.html	/^<a name="l00108"><\/a>00108 $/;"	a
l00108	html/hashtable_8h-source.html	/^<a name="l00108"><\/a>00108 <span class="keywordtype">void<\/span> *$/;"	a
l00108	html/hashtable__itr_8h-source.html	/^<a name="l00108"><\/a>00108 <span class="comment"> * documentation and\/or other materials provided with the distribution.<\/span>$/;"	a
l00108	html/linked__list_8h-source.html	/^<a name="l00108"><\/a>00108 <a class="code" href="structlist__node__s.html" title="A node for a simple linked list.">list_node<\/a> *<a class="code" href="linked__list_8h.html#a6b21427d10b9c5a9a38339d19f57acd" title="Removes the first list_node from a list.">list_shift_node<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00108	html/nbt_8h-source.html	/^<a name="l00108"><\/a>00108 $/;"	a
l00108	html/trie_8h-source.html	/^<a name="l00108"><\/a>00108 $/;"	a
l00109	html/hashtable_8h-source.html	/^<a name="l00109"><\/a>00109 <a class="code" href="hashtable_8h.html#edee8784569397cb9f42a46055c959d0" title="hashtable_search">hashtable_search<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *h, <span class="keywordtype">void<\/span> *k);$/;"	a
l00109	html/hashtable__itr_8h-source.html	/^<a name="l00109"><\/a>00109 <span class="comment"> * <\/span>$/;"	a
l00110	html/hashtable_8h-source.html	/^<a name="l00110"><\/a>00110 $/;"	a
l00110	html/hashtable__itr_8h-source.html	/^<a name="l00110"><\/a>00110 <span class="comment"> * * Neither the name of the original author; nor the names of any contributors<\/span>$/;"	a
l00110	html/renderer_8h-source.html	/^<a name="l00110"><\/a>00110 <span class="keywordtype">void<\/span> <a class="code" href="renderer_8h.html#b6889f3c6b2d21c8d9b719ad9dd90bb5" title="Blend color2 into color1.">renderer_blend_color<\/a>(png_bytep pixel1, png_bytep pixel2);$/;"	a
l00111	html/generic__structs_8h-source.html	/^<a name="l00111"><\/a>00111 <span class="keywordtype">int<\/span>  <a class="code" href="generic__structs_8h.html#bd89a76bf3680f45a06e3329dece7d23" title="Pushes data onto the end of a list.">list_push<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <span class="keywordtype">void<\/span> *data);$/;"	a
l00111	html/hashtable__itr_8h-source.html	/^<a name="l00111"><\/a>00111 <span class="comment"> * may be used to endorse or promote products derived from this software<\/span>$/;"	a
l00111	html/renderer_8h-source.html	/^<a name="l00111"><\/a>00111 $/;"	a
l00112	html/generic__structs_8h-source.html	/^<a name="l00112"><\/a>00112 $/;"	a
l00112	html/hashtable__itr_8h-source.html	/^<a name="l00112"><\/a>00112 <span class="comment"> * without specific prior written permission.<\/span>$/;"	a
l00113	html/hashtable__itr_8h-source.html	/^<a name="l00113"><\/a>00113 <span class="comment"> * <\/span>$/;"	a
l00114	html/hashtable__itr_8h-source.html	/^<a name="l00114"><\/a>00114 <span class="comment"> * <\/span>$/;"	a
l00114	html/patricia_8h-source.html	/^<a name="l00114"><\/a>00114 <span class="keywordtype">void<\/span> *<a class="code" href="group__triesearch.html#ge496f117566016dc8750c37e46ed776e" title="Searches the trie for a given key, returning a payload if successful.">trie_search<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>);$/;"	a
l00115	html/hashtable__itr_8h-source.html	/^<a name="l00115"><\/a>00115 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS<\/span>$/;"	a
l00115	html/patricia_8h-source.html	/^<a name="l00115"><\/a>00115 $/;"	a
l00115	html/trie_8h-source.html	/^<a name="l00115"><\/a>00115 <a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node<\/a> *<a class="code" href="group__triesearch.html#gd21dcd7119414b41ba45f3010de4d35a" title="Searches the trie for a given key, returning a node if successful.">trie_search_node<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *key);$/;"	a
l00116	html/hashtable__itr_8h-source.html	/^<a name="l00116"><\/a>00116 <span class="comment"> * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT<\/span>$/;"	a
l00116	html/trie_8h-source.html	/^<a name="l00116"><\/a>00116 $/;"	a
l00117	html/hashtable_8h-source.html	/^<a name="l00117"><\/a>00117 <span class="keywordtype">void<\/span> * <span class="comment">\/* returns value *\/<\/span>$/;"	a
l00117	html/hashtable__itr_8h-source.html	/^<a name="l00117"><\/a>00117 <span class="comment"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR<\/span>$/;"	a
l00118	html/hashtable_8h-source.html	/^<a name="l00118"><\/a>00118 <a class="code" href="hashtable_8h.html#d5218c8af6f68f926ae0e2f6b9d89143" title="hashtable_remove">hashtable_remove<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *h, <span class="keywordtype">void<\/span> *k);$/;"	a
l00118	html/hashtable__itr_8h-source.html	/^<a name="l00118"><\/a>00118 <span class="comment"> * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER<\/span>$/;"	a
l00119	html/generic__structs_8h-source.html	/^<a name="l00119"><\/a>00119 <span class="keywordtype">void<\/span> *<a class="code" href="generic__structs_8h.html#bbe6c60c63edff6eabbf8252f9aa5180" title="Pops data off the end of a list.">list_pop<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00119	html/hashtable_8h-source.html	/^<a name="l00119"><\/a>00119 $/;"	a
l00119	html/hashtable__itr_8h-source.html	/^<a name="l00119"><\/a>00119 <span class="comment"> * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,<\/span>$/;"	a
l00119	html/nbt_8h-source.html	/^<a name="l00119"><\/a>00119 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#eab608613a274d5b8f591d00d78358b3" title="Create a new nbt_tag. Do not call.">nbt_new_tag<\/a>(uint8_t tag_type, <span class="keywordtype">wchar_t<\/span> *name, uint16_t name_len, <a class="code" href="unionu__tag__meta.html" title="Contains meta-information for an nbt_tag.">u_tag_meta<\/a> *meta, <a class="code" href="unionu__tag__payload.html" title="Contains the payload for an nbt_tag.">u_tag_payload<\/a> *payload);$/;"	a
l00120	html/generic__structs_8h-source.html	/^<a name="l00120"><\/a>00120 $/;"	a
l00120	html/hashtable_8h-source.html	/^<a name="l00120"><\/a>00120 $/;"	a
l00120	html/hashtable__itr_8h-source.html	/^<a name="l00120"><\/a>00120 <span class="comment"> * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,<\/span>$/;"	a
l00120	html/nbt_8h-source.html	/^<a name="l00120"><\/a>00120 $/;"	a
l00121	html/hashtable__itr_8h-source.html	/^<a name="l00121"><\/a>00121 <span class="comment"> * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR<\/span>$/;"	a
l00122	html/hashtable__itr_8h-source.html	/^<a name="l00122"><\/a>00122 <span class="comment"> * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF<\/span>$/;"	a
l00122	html/patricia_8h-source.html	/^<a name="l00122"><\/a>00122 <a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a> *<a class="code" href="group__triesearch.html#gd21dcd7119414b41ba45f3010de4d35a" title="Searches the trie for a given key, returning a node if successful.">trie_search_node<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>);$/;"	a
l00123	html/hashtable__itr_8h-source.html	/^<a name="l00123"><\/a>00123 <span class="comment"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING<\/span>$/;"	a
l00123	html/linked__list_8h-source.html	/^<a name="l00123"><\/a>00123 <span class="keywordtype">int<\/span>  <a class="code" href="linked__list_8h.html#bd89a76bf3680f45a06e3329dece7d23" title="Pushes data onto the end of a list.">list_push<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <span class="keywordtype">void<\/span> *<a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056" title="The data payload for this node.">data<\/a>);$/;"	a
l00123	html/patricia_8h-source.html	/^<a name="l00123"><\/a>00123 $/;"	a
l00124	html/hashtable__itr_8h-source.html	/^<a name="l00124"><\/a>00124 <span class="comment"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS<\/span>$/;"	a
l00124	html/linked__list_8h-source.html	/^<a name="l00124"><\/a>00124 $/;"	a
l00124	html/renderer_8h-source.html	/^<a name="l00124"><\/a>00124 <span class="keywordtype">float<\/span> <a class="code" href="renderer_8h.html#97569901695c7cfff25c7669e0899ef9" title="Calculates the gamma for a block based on the map&amp;#39;s light values.">renderer_calc_gamma<\/a>(<a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *c, int16_t coord_x, int16_t coord_y, int16_t coord_z, <span class="keywordtype">float<\/span> sky_percent, <span class="keywordtype">float<\/span> block_percent);$/;"	a
l00125	html/hashtable_8h-source.html	/^<a name="l00125"><\/a>00125 <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>$/;"	a
l00125	html/hashtable__itr_8h-source.html	/^<a name="l00125"><\/a>00125 <span class="comment"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.<\/span>$/;"	a
l00125	html/nbt_8h-source.html	/^<a name="l00125"><\/a>00125 <span class="keywordtype">void<\/span> <a class="code" href="nbt_8h.html#7f36b09abe5227e25436c83fcd07d6e3" title="Frees a tag, its payload, and its metadata.">nbt_free_tag<\/a>(<a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *doomed);$/;"	a
l00125	html/renderer_8h-source.html	/^<a name="l00125"><\/a>00125 $/;"	a
l00126	html/chunk_8h-source.html	/^<a name="l00126"><\/a>00126 int32_t <a class="code" href="chunk_8h.html#cc398833e609bea40b0766f54287b8a9" title="Generates an array offset for the 8-bit per block data arrays.">chunk_generate_8bit_offset<\/a>(<a class="code" href="structchunk.html" title="Contains data about a chunk.">chunk<\/a> *c, uint8_t coord_x, uint8_t coord_y, uint8_t coord_z, uint32_t max_offset);$/;"	a
l00126	html/hashtable_8h-source.html	/^<a name="l00126"><\/a>00126 <a class="code" href="hashtable_8h.html#9938119d6ca963d593ead701bb9d5add" title="hashtable_count">hashtable_count<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *h);$/;"	a
l00126	html/hashtable__itr_8h-source.html	/^<a name="l00126"><\/a>00126 <span class="comment">*\/<\/span>$/;"	a
l00126	html/nbt_8h-source.html	/^<a name="l00126"><\/a>00126 $/;"	a
l00126	html/renderer_8h-source.html	/^<a name="l00126"><\/a>00126 <span class="preprocessor">#endif<\/span>$/;"	a
l00126	html/trie_8h-source.html	/^<a name="l00126"><\/a>00126 <span class="keywordtype">int<\/span> <a class="code" href="group__triesearch.html#g8398803c8d85f51a3b6a6cb627836ab9" title="Searches the trie for a given key, returning the node closest to or equal to the...">trie_search_node_closest<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *key, <a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node<\/a> **result, <span class="keywordtype">int<\/span> *string_index);$/;"	a
l00127	html/chunk_8h-source.html	/^<a name="l00127"><\/a>00127 $/;"	a
l00127	html/hashtable_8h-source.html	/^<a name="l00127"><\/a>00127 $/;"	a
l00127	html/renderer_8h-source.html	/^<a name="l00127"><\/a>00127 <span class="preprocessor"><\/span>$/;"	a
l00127	html/trie_8h-source.html	/^<a name="l00127"><\/a>00127 $/;"	a
l00128	html/chunk_8h-source.html	/^<a name="l00128"><\/a>00128 <span class="preprocessor">#endif<\/span>$/;"	a
l00128	html/generic__structs_8h-source.html	/^<a name="l00128"><\/a>00128 <span class="keywordtype">int<\/span>  <a class="code" href="generic__structs_8h.html#536667b5f09c38442ac97c21ab69f535" title="Pushes data onto the beginning of a list.">list_unshift<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <span class="keywordtype">void<\/span> *data);$/;"	a
l00128	html/hashtable_8h-source.html	/^<a name="l00128"><\/a>00128 $/;"	a
l00128	html/renderer_8h-source.html	/^<a name="l00128"><\/a>00128 $/;"	a
l00129	html/generic__structs_8h-source.html	/^<a name="l00129"><\/a>00129 $/;"	a
l00129	html/renderer_8h-source.html	/^<a name="l00129"><\/a>00129 $/;"	a
l00130	html/renderer_8h-source.html	/^<a name="l00130"><\/a>00130 $/;"	a
l00131	html/linked__list_8h-source.html	/^<a name="l00131"><\/a>00131 <span class="keywordtype">void<\/span> *<a class="code" href="linked__list_8h.html#bbe6c60c63edff6eabbf8252f9aa5180" title="Pops data off the end of a list.">list_pop<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00131	html/patricia_8h-source.html	/^<a name="l00131"><\/a>00131 <span class="keywordtype">int<\/span> <a class="code" href="group__triesearch.html#gfba0f3de395a60a1c563c7053e56530a" title="Searches the trie, returning the node closest to the key given.">trie_search_node_closest<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>, <a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a> **result);$/;"	a
l00131	html/renderer_8h-source.html	/^<a name="l00131"><\/a>00131 $/;"	a
l00132	html/linked__list_8h-source.html	/^<a name="l00132"><\/a>00132 $/;"	a
l00132	html/renderer_8h-source.html	/^<a name="l00132"><\/a>00132 $/;"	a
l00133	html/renderer_8h-source.html	/^<a name="l00133"><\/a>00133 $/;"	a
l00134	html/hashtable_8h-source.html	/^<a name="l00134"><\/a>00134 <span class="keywordtype">void<\/span>$/;"	a
l00134	html/renderer_8h-source.html	/^<a name="l00134"><\/a>00134 $/;"	a
l00134	html/trie_8h-source.html	/^<a name="l00134"><\/a>00134 $/;"	a
l00135	html/hashtable_8h-source.html	/^<a name="l00135"><\/a>00135 <a class="code" href="hashtable_8h.html#3e50020eb23b7deeaf64eb1c52405dd0" title="hashtable_destroy">hashtable_destroy<\/a>(<span class="keyword">struct<\/span> <a class="code" href="structhashtable.html" title="A hashtable.">hashtable<\/a> *h, <span class="keywordtype">int<\/span> free_values);$/;"	a
l00135	html/nbt_8h-source.html	/^<a name="l00135"><\/a>00135 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#322d6ab30c77b6eee312ede8a1f080c6" title="Creates a new simple tag. Used in macros.">nbt_new_simple_tag<\/a>(uint8_t tag_type, <span class="keywordtype">wchar_t<\/span> *name, uint16_t name_len, <span class="keywordtype">void<\/span> *payload_value);$/;"	a
l00135	html/renderer_8h-source.html	/^<a name="l00135"><\/a>00135 $/;"	a
l00136	html/generic__structs_8h-source.html	/^<a name="l00136"><\/a>00136 <span class="keywordtype">void<\/span> *<a class="code" href="generic__structs_8h.html#e472b078bcae3ed70ddac077cf8f573c" title="Pops data off the front of a list.">list_shift<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00136	html/hashtable_8h-source.html	/^<a name="l00136"><\/a>00136 $/;"	a
l00136	html/nbt_8h-source.html	/^<a name="l00136"><\/a>00136 $/;"	a
l00136	html/renderer_8h-source.html	/^<a name="l00136"><\/a>00136 $/;"	a
l00137	html/hashtable_8h-source.html	/^<a name="l00137"><\/a>00137 <span class="preprocessor">#endif <\/span><span class="comment">\/* __HASHTABLE_CWC22_H__ *\/<\/span>$/;"	a
l00137	html/renderer_8h-source.html	/^<a name="l00137"><\/a>00137 $/;"	a
l00138	html/hashtable_8h-source.html	/^<a name="l00138"><\/a>00138 $/;"	a
l00138	html/patricia_8h-source.html	/^<a name="l00138"><\/a>00138 $/;"	a
l00138	html/renderer_8h-source.html	/^<a name="l00138"><\/a>00138 $/;"	a
l00139	html/generic__structs_8h-source.html	/^<a name="l00139"><\/a>00139 <span class="preprocessor">#endif<\/span>$/;"	a
l00139	html/hashtable_8h-source.html	/^<a name="l00139"><\/a>00139 <span class="comment">\/*<\/span>$/;"	a
l00139	html/trie_8h-source.html	/^<a name="l00139"><\/a>00139 <span class="keywordtype">void<\/span> <a class="code" href="group__triemisc.html#gd9b42b61f67acc3803ef15528bf1528c" title="Traverses the trie, performing a callback on each node.">trie_traverse<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, tree_traverse_func traverse_func);$/;"	a
l00140	html/hashtable_8h-source.html	/^<a name="l00140"><\/a>00140 <span class="comment"> * Copyright (c) 2002, Christopher Clark<\/span>$/;"	a
l00140	html/linked__list_8h-source.html	/^<a name="l00140"><\/a>00140 <span class="keywordtype">int<\/span>  <a class="code" href="linked__list_8h.html#536667b5f09c38442ac97c21ab69f535" title="Pushes data onto the beginning of a list.">list_unshift<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack, <span class="keywordtype">void<\/span> *<a class="code" href="structlist__node__s.html#4f80c61446146946a1f06507182a2056" title="The data payload for this node.">data<\/a>);$/;"	a
l00140	html/trie_8h-source.html	/^<a name="l00140"><\/a>00140 $/;"	a
l00141	html/hashtable_8h-source.html	/^<a name="l00141"><\/a>00141 <span class="comment"> * All rights reserved.<\/span>$/;"	a
l00141	html/linked__list_8h-source.html	/^<a name="l00141"><\/a>00141 $/;"	a
l00142	html/hashtable_8h-source.html	/^<a name="l00142"><\/a>00142 <span class="comment"> * <\/span>$/;"	a
l00143	html/hashtable_8h-source.html	/^<a name="l00143"><\/a>00143 <span class="comment"> * Redistribution and use in source and binary forms, with or without<\/span>$/;"	a
l00143	html/patricia_8h-source.html	/^<a name="l00143"><\/a>00143 <span class="keywordtype">void<\/span> <a class="code" href="group__triemisc.html#gd9b42b61f67acc3803ef15528bf1528c" title="Traverses the trie, performing a callback on each node.">trie_traverse<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, tree_traverse_func traverse_func);$/;"	a
l00144	html/hashtable_8h-source.html	/^<a name="l00144"><\/a>00144 <span class="comment"> * modification, are permitted provided that the following conditions<\/span>$/;"	a
l00144	html/nbt_8h-source.html	/^<a name="l00144"><\/a>00144 <a class="code" href="unionu__tag__payload.html" title="Contains the payload for an nbt_tag.">u_tag_payload<\/a> *<a class="code" href="nbt_8h.html#df0d97325ef8b29a7ca3b9884f83f5d8" title="Generates a u_tag_payload for a simple type. Used in macros.">nbt_new_simple_payload<\/a>(uint8_t tag_type, <span class="keywordtype">void<\/span> *payload_value);$/;"	a
l00144	html/patricia_8h-source.html	/^<a name="l00144"><\/a>00144 $/;"	a
l00144	html/trie_8h-source.html	/^<a name="l00144"><\/a>00144 <span class="keywordtype">int<\/span> <a class="code" href="group__triemisc.html#gb8ca6edb590c2dd9b31d8bc1c8292ab2" title="Checks the parameters passed to see if they are valid.">trie_sanity_check<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *key);$/;"	a
l00145	html/hashtable_8h-source.html	/^<a name="l00145"><\/a>00145 <span class="comment"> * are met:<\/span>$/;"	a
l00145	html/nbt_8h-source.html	/^<a name="l00145"><\/a>00145 $/;"	a
l00146	html/hashtable_8h-source.html	/^<a name="l00146"><\/a>00146 <span class="comment"> * <\/span>$/;"	a
l00147	html/hashtable_8h-source.html	/^<a name="l00147"><\/a>00147 <span class="comment"> * * Redistributions of source code must retain the above copyright<\/span>$/;"	a
l00148	html/hashtable_8h-source.html	/^<a name="l00148"><\/a>00148 <span class="comment"> * notice, this list of conditions and the following disclaimer.<\/span>$/;"	a
l00148	html/linked__list_8h-source.html	/^<a name="l00148"><\/a>00148 <span class="keywordtype">void<\/span> *<a class="code" href="linked__list_8h.html#e472b078bcae3ed70ddac077cf8f573c" title="Pops data off the front of a list.">list_shift<\/a>(<a class="code" href="structlist.html" title="The container for a simple linked list.">list<\/a> *haystack);$/;"	a
l00148	html/patricia_8h-source.html	/^<a name="l00148"><\/a>00148 <span class="keywordtype">int<\/span> <a class="code" href="group__triemisc.html#gb8ca6edb590c2dd9b31d8bc1c8292ab2" title="Checks the parameters passed to see if they are valid.">trie_sanity_check<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *haystack, <span class="keywordtype">wchar_t<\/span> *<a class="code" href="structtrie__node__s.html#724ed8ae623557157e7276573f6dcc5a" title="The key of this node.">key<\/a>);$/;"	a
l00149	html/hashtable_8h-source.html	/^<a name="l00149"><\/a>00149 <span class="comment"> * <\/span>$/;"	a
l00150	html/hashtable_8h-source.html	/^<a name="l00150"><\/a>00150 <span class="comment"> * * Redistributions in binary form must reproduce the above copyright<\/span>$/;"	a
l00150	html/nbt_8h-source.html	/^<a name="l00150"><\/a>00150 uint8_t <a class="code" href="nbt_8h.html#0be01e38a1018d07b10f96a38e9bfd4c" title="Gets the size of a payload for a simple tag type.">nbt_get_payload_size<\/a>(uint8_t tag_type);$/;"	a
l00151	html/hashtable_8h-source.html	/^<a name="l00151"><\/a>00151 <span class="comment"> * notice, this list of conditions and the following disclaimer in the<\/span>$/;"	a
l00151	html/linked__list_8h-source.html	/^<a name="l00151"><\/a>00151 <span class="preprocessor">#endif<\/span>$/;"	a
l00151	html/nbt_8h-source.html	/^<a name="l00151"><\/a>00151 $/;"	a
l00152	html/hashtable_8h-source.html	/^<a name="l00152"><\/a>00152 <span class="comment"> * documentation and\/or other materials provided with the distribution.<\/span>$/;"	a
l00153	html/hashtable_8h-source.html	/^<a name="l00153"><\/a>00153 <span class="comment"> * <\/span>$/;"	a
l00154	html/hashtable_8h-source.html	/^<a name="l00154"><\/a>00154 <span class="comment"> * * Neither the name of the original author; nor the names of any contributors<\/span>$/;"	a
l00155	html/hashtable_8h-source.html	/^<a name="l00155"><\/a>00155 <span class="comment"> * may be used to endorse or promote products derived from this software<\/span>$/;"	a
l00156	html/hashtable_8h-source.html	/^<a name="l00156"><\/a>00156 <span class="comment"> * without specific prior written permission.<\/span>$/;"	a
l00156	html/nbt_8h-source.html	/^<a name="l00156"><\/a>00156 uint8_t <a class="code" href="nbt_8h.html#436d4d9bef1f9b3182cd6dd2e34a275e" title="Checks a tag type to see if it is valid.">nbt_is_valid_tag_type<\/a>(uint8_t tag_type);$/;"	a
l00156	html/trie_8h-source.html	/^<a name="l00156"><\/a>00156 <span class="keywordtype">void<\/span> <a class="code" href="group__triedeconstruct.html#g9d8f42737863d11f881081d0ee22daec" title="Frees a trie_node.">trie_free_node<\/a>(<a class="code" href="structtrie__node__s.html" title="Structure for a node in a trie.">trie_node<\/a> *doomed, <a class="code" href="trie_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a> free_func);$/;"	a
l00157	html/hashtable_8h-source.html	/^<a name="l00157"><\/a>00157 <span class="comment"> * <\/span>$/;"	a
l00157	html/nbt_8h-source.html	/^<a name="l00157"><\/a>00157 $/;"	a
l00157	html/trie_8h-source.html	/^<a name="l00157"><\/a>00157 $/;"	a
l00158	html/hashtable_8h-source.html	/^<a name="l00158"><\/a>00158 <span class="comment"> * <\/span>$/;"	a
l00159	html/hashtable_8h-source.html	/^<a name="l00159"><\/a>00159 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS<\/span>$/;"	a
l00160	html/hashtable_8h-source.html	/^<a name="l00160"><\/a>00160 <span class="comment"> * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT<\/span>$/;"	a
l00160	html/patricia_8h-source.html	/^<a name="l00160"><\/a>00160 <span class="keywordtype">void<\/span> <a class="code" href="group__triedeconstruct.html#g9d8f42737863d11f881081d0ee22daec" title="Frees a trie_node.">trie_free_node<\/a>(<a class="code" href="structtrie__node__s.html" title="Structure for a node in a PATRICIA trie.">trie_node<\/a> *doomed, <a class="code" href="patricia_8h.html#0d78036d2c09dadc4c7afa5270ca5641" title="A function pointer to a function that frees a payload of a trie_node.">trie_free_func<\/a> free_func);$/;"	a
l00161	html/hashtable_8h-source.html	/^<a name="l00161"><\/a>00161 <span class="comment"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR<\/span>$/;"	a
l00161	html/patricia_8h-source.html	/^<a name="l00161"><\/a>00161 $/;"	a
l00161	html/trie_8h-source.html	/^<a name="l00161"><\/a>00161 <span class="keywordtype">void<\/span> <a class="code" href="group__triedeconstruct.html#gfc62b472233ea0704a31c3657e0df6a8" title="Frees an entire trie.">trie_free<\/a>(<a class="code" href="structtrie.html" title="The container for a trie and its nodes.">trie<\/a> *doomed);$/;"	a
l00162	html/hashtable_8h-source.html	/^<a name="l00162"><\/a>00162 <span class="comment"> * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER<\/span>$/;"	a
l00162	html/nbt_8h-source.html	/^<a name="l00162"><\/a>00162 uint8_t <a class="code" href="nbt_8h.html#e0dbdbbdb09558997cbedcf405c2a92c" title="Checks a tag type to see if it is a valid simple tag type.">nbt_is_simple_tag_type<\/a>(uint8_t tag_type);$/;"	a
l00163	html/hashtable_8h-source.html	/^<a name="l00163"><\/a>00163 <span class="comment"> * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,<\/span>$/;"	a
l00163	html/nbt_8h-source.html	/^<a name="l00163"><\/a>00163 $/;"	a
l00164	html/hashtable_8h-source.html	/^<a name="l00164"><\/a>00164 <span class="comment"> * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,<\/span>$/;"	a
l00164	html/trie_8h-source.html	/^<a name="l00164"><\/a>00164 <span class="preprocessor">#endif<\/span>$/;"	a
l00165	html/hashtable_8h-source.html	/^<a name="l00165"><\/a>00165 <span class="comment"> * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR<\/span>$/;"	a
l00165	html/patricia_8h-source.html	/^<a name="l00165"><\/a>00165 <span class="keywordtype">void<\/span> <a class="code" href="group__triedeconstruct.html#gfc62b472233ea0704a31c3657e0df6a8" title="Frees an entire trie.">trie_free<\/a>(<a class="code" href="structtrie.html" title="The container for a PATRICIA trie and its nodes.">trie<\/a> *doomed);$/;"	a
l00166	html/hashtable_8h-source.html	/^<a name="l00166"><\/a>00166 <span class="comment"> * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF<\/span>$/;"	a
l00167	html/hashtable_8h-source.html	/^<a name="l00167"><\/a>00167 <span class="comment"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING<\/span>$/;"	a
l00168	html/hashtable_8h-source.html	/^<a name="l00168"><\/a>00168 <span class="comment"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS<\/span>$/;"	a
l00168	html/patricia_8h-source.html	/^<a name="l00168"><\/a>00168 <span class="preprocessor">#endif<\/span>$/;"	a
l00169	html/hashtable_8h-source.html	/^<a name="l00169"><\/a>00169 <span class="comment"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.<\/span>$/;"	a
l00170	html/hashtable_8h-source.html	/^<a name="l00170"><\/a>00170 <span class="comment">*\/<\/span>$/;"	a
l00176	html/nbt_8h-source.html	/^<a name="l00176"><\/a>00176 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#56bb73a7bab874a202282bae04328ee4" title="Creates a new NBT_Byte_Array tag.">nbt_new_byte_array_tag<\/a>(uint8_t *payload_value, <span class="keywordtype">wchar_t<\/span> *name, uint16_t name_len, int32_t length);$/;"	a
l00177	html/nbt_8h-source.html	/^<a name="l00177"><\/a>00177 $/;"	a
l00184	html/nbt_8h-source.html	/^<a name="l00184"><\/a>00184 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#f6aea929d4a2c290a519b44f515ac40c" title="Creates a new NBT_String tag.">nbt_new_string_tag<\/a>(<span class="keywordtype">wchar_t<\/span> *payload_value, <span class="keywordtype">wchar_t<\/span> *name, uint16_t name_len, int32_t length);$/;"	a
l00185	html/nbt_8h-source.html	/^<a name="l00185"><\/a>00185 $/;"	a
l00191	html/nbt_8h-source.html	/^<a name="l00191"><\/a>00191 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#515d0328f8692060cc53589399760803" title="Creates a new NBT_List tag.">nbt_new_list_tag<\/a>(<span class="keywordtype">wchar_t<\/span> *name, uint16_t name_len, int8_t child_tag_type);$/;"	a
l00192	html/nbt_8h-source.html	/^<a name="l00192"><\/a>00192 $/;"	a
l00197	html/nbt_8h-source.html	/^<a name="l00197"><\/a>00197 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#4272021273ee6ce86c74a572eaa97bb4" title="Creates a new NBT_Compound tag.">nbt_new_compound_tag<\/a>(<span class="keywordtype">wchar_t<\/span> *name, uint16_t name_len);$/;"	a
l00211	html/nbt_8h-source.html	/^<a name="l00211"><\/a>00211 <span class="keywordtype">void<\/span> *<a class="code" href="nbt_8h.html#55f4cfe55e9a0e4b75672ff71bbc2f70" title="Retrieve the payload.">nbt_payload<\/a>(<a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *tag, uint8_t expected_type);$/;"	a
l00212	html/nbt_8h-source.html	/^<a name="l00212"><\/a>00212 $/;"	a
l00219	html/nbt_8h-source.html	/^<a name="l00219"><\/a>00219 <a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *<a class="code" href="nbt_8h.html#d2c61ec9870fac1d027815ac602a037d" title="Search a TAG_Compound hash for a given key.">nbt_hash_search<\/a>(<a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *tag, <span class="keywordtype">wchar_t<\/span> *key);$/;"	a
l00226	html/nbt_8h-source.html	/^<a name="l00226"><\/a>00226 $/;"	a
l00230	html/nbt_8h-source.html	/^<a name="l00230"><\/a>00230 <span class="keywordtype">void<\/span> <a class="code" href="nbt_8h.html#3bcea62cc9ade95d90667fb16741c793" title="Prints an nbt_tag to stdout.">nbt_print<\/a>(<a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *tag);$/;"	a
l00231	html/nbt_8h-source.html	/^<a name="l00231"><\/a>00231 $/;"	a
l00236	html/nbt_8h-source.html	/^<a name="l00236"><\/a>00236 <span class="keywordtype">void<\/span> <a class="code" href="nbt_8h.html#4cbe18fb31214c5ba8d5402fc057ccde" title="Prints a single nbt_tag with a leading indent.">nbt_print_single<\/a>(<a class="code" href="structnbt__tag.html" title="Contains a single NBT tag entry.">nbt_tag<\/a> *tag, <span class="keywordtype">int<\/span> indent);$/;"	a
l00237	html/nbt_8h-source.html	/^<a name="l00237"><\/a>00237 $/;"	a
l00241	html/nbt_8h-source.html	/^<a name="l00241"><\/a>00241 <span class="keywordtype">void<\/span> <a class="code" href="nbt_8h.html#0c004f2a440b956639119bff50f3a32a" title="Prints multiple spaces.">print_indent<\/a>(<span class="keywordtype">int<\/span> indent);$/;"	a
l00242	html/nbt_8h-source.html	/^<a name="l00242"><\/a>00242 $/;"	a
l00249	html/nbt_8h-source.html	/^<a name="l00249"><\/a>00249 <span class="keywordtype">void<\/span> <a class="code" href="nbt_8h.html#158df4421c0c60d8064ff580870ab0bd" title="Prints a hex dump of a *char or a *wchar_t.">hex_dump<\/a>(<span class="keywordtype">void<\/span> *<span class="keywordtype">string<\/span>, <span class="keywordtype">int<\/span> string_length, <span class="keywordtype">int<\/span> indent, <span class="keywordtype">int<\/span> flags);$/;"	a
l00260	html/nbt_8h-source.html	/^<a name="l00260"><\/a>00260 <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> <a class="code" href="nbt_8h.html#1bc531c663ef76cb4f5e2541170c2e6a" title="Generates a hash value for a Named Binary Tag.">nbt_hash_fn<\/a>(<span class="keywordtype">void<\/span> *name);$/;"	a
l00261	html/nbt_8h-source.html	/^<a name="l00261"><\/a>00261 $/;"	a
l00267	html/nbt_8h-source.html	/^<a name="l00267"><\/a>00267 <span class="keywordtype">int<\/span> <a class="code" href="nbt_8h.html#4bf450c82e5ba696ff273889183f77ad" title="Compares two tags to see if their names match.">nbt_name_eq<\/a>(<span class="keywordtype">void<\/span> *name1, <span class="keywordtype">void<\/span> *name2);$/;"	a
l00270	html/nbt_8h-source.html	/^<a name="l00270"><\/a>00270 <span class="preprocessor">#endif<\/span>$/;"	a
largest_x	includes/level.h	/^    int32_t largest_x;      \/**< \\brief The largest X coordinate of the level $/;"	m	struct:__anon4
largest_z	includes/level.h	/^    int32_t largest_z;      \/**< \\brief The largest Z coordinate of the level $/;"	m	struct:__anon4
length	includes/nbt.h	/^    int32_t length;         \/**< \\brief The length of a TAG_Byte_Array or TAG_String tag. *\/$/;"	m	union:__anon6
letter_C	html/classes.html	/^<tr><td><a name="letter_C"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;C&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
letter_E	html/classes.html	/^<\/td><td><a class="el" href="structrenderer__funcs.html">renderer_funcs<\/a>&nbsp;&nbsp;&nbsp;<\/td><\/tr><tr><td><a class="el" href="structcache__slab.html">cache_slab<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a name="letter_E"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;E&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
letter_H	html/classes.html	/^<\/td><td><a class="el" href="unionu__tag__meta.html">u_tag_meta<\/a>&nbsp;&nbsp;&nbsp;<\/td><\/tr><tr><td><a class="el" href="structchunk__cache.html">chunk_cache<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a name="letter_H"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;H&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
letter_L	html/classes.html	/^<\/td><td><a name="letter_L"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;L&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
letter_N	html/classes.html	/^<\/td><td><a class="el" href="structconfiguration.html">configuration<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="structhashtable__itr.html">hashtable_itr<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a name="letter_N"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;N&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
letter_R	html/classes.html	/^<\/td><\/tr><tr><td><a class="el" href="structchunk.html">chunk<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="structentry.html">entry<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a class="el" href="structlevel.html">level<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a name="letter_R"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;R&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
letter_U	html/classes.html	/^<\/td><td><a class="el" href="structnbt__tag.html">nbt_tag<\/a>&nbsp;&nbsp;&nbsp;<\/td><td><a name="letter_U"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;U&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
level	includes/level.h	/^} level;$/;"	t	typeref:struct:__anon4
level_free	level.c	/^void level_free(level *doomed)$/;"	f
level_get_chunk_at	level.c	/^chunk *level_get_chunk_at(level *lvl, int coord_x, int coord_z)$/;"	f
level_get_dimensions	level.c	/^void level_get_dimensions(level *lvl)$/;"	f
level_load	level.c	/^level *level_load(char *path)$/;"	f
linked_list_errors	includes/linked_list.h	/^enum linked_list_errors$/;"	g
list	includes/linked_list.h	/^} list;$/;"	t	typeref:struct:__anon3
list_free	linked_list.c	/^void list_free(list *doomed)$/;"	f
list_free_func	includes/linked_list.h	/^typedef void (*list_free_func)(void*);$/;"	t
list_new	linked_list.c	/^list *list_new(list_free_func node_free_func)$/;"	f
list_node	includes/linked_list.h	/^} list_node;$/;"	t	typeref:struct:list_node_s
list_node_free	linked_list.c	/^void list_node_free(list_node *doomed, list_free_func node_free_func)$/;"	f
list_node_s	includes/linked_list.h	/^typedef struct list_node_s$/;"	s
list_payload	includes/nbt.h	/^    list    *list_payload;       \/**< \\brief Payload for TAG_List tags. *\/$/;"	m	union:__anon5
list_pop	linked_list.c	/^void *list_pop(list *haystack)$/;"	f
list_pop_node	linked_list.c	/^list_node *list_pop_node(list *haystack)$/;"	f
list_push	linked_list.c	/^int list_push(list *haystack, void *data)$/;"	f
list_push_node	linked_list.c	/^int list_push_node(list *haystack, list_node *needle)$/;"	f
list_shift	linked_list.c	/^void *list_shift(list *haystack)$/;"	f
list_shift_node	linked_list.c	/^list_node *list_shift_node(list *haystack)$/;"	f
list_unshift	linked_list.c	/^int list_unshift(list *haystack, void *data)$/;"	f
list_unshift_node	linked_list.c	/^int list_unshift_node(list *haystack, list_node *needle)$/;"	f
loadlimit	includes/hashtable_private.h	/^    unsigned int loadlimit;             \/**< \\brief The load limit of the table$/;"	m	struct:hashtable
long_payload	includes/nbt.h	/^    int64_t long_payload;        \/**< \\brief Payload for TAG_Long tags. *\/$/;"	m	union:__anon5
lvl	includes/renderer.h	/^    level *lvl;             \/**< \\brief The level to render. *\/$/;"	m	struct:__anon10
main	main.c	/^int main (int argc, char **argv)$/;"	f
map	includes/renderer.h	/^    color_map *map;         \/**< \\brief A color_map used by this %renderer *\/$/;"	m	struct:__anon10
max_load_factor	hashtable.c	/^const float max_load_factor = 0.65;$/;"	v
meta	includes/nbt.h	/^    u_tag_meta     *meta;     \/**< \\brief The meta-information for a tag. *\/$/;"	m	struct:__anon7
modulo	maths.c	/^int modulo(int number, int divisor)$/;"	f
name	includes/nbt.h	/^    wchar_t        *name;     \/**< \\brief The name of the tag. Omitted for TAG_End tags. *\/$/;"	m	struct:__anon7
name_len	includes/nbt.h	/^    uint16_t        name_len; \/**< \\brief The length of the name in characters *\/$/;"	m	struct:__anon7
nbt_free_tag	nbt.c	/^void nbt_free_tag(nbt_tag *doomed)$/;"	f
nbt_get_payload_size	nbt.c	/^uint8_t nbt_get_payload_size(uint8_t tag_type)$/;"	f
nbt_hash_fn	nbt.c	/^unsigned int nbt_hash_fn(void *name)$/;"	f
nbt_hash_search	nbt.c	/^nbt_tag *nbt_hash_search(nbt_tag *tag, wchar_t *key)$/;"	f
nbt_is_simple_tag_type	nbt.c	/^uint8_t nbt_is_simple_tag_type(uint8_t tag_type)$/;"	f
nbt_is_valid_tag_type	nbt.c	/^uint8_t nbt_is_valid_tag_type(uint8_t tag_type)$/;"	f
nbt_name_eq	nbt.c	/^int nbt_name_eq(void *name1, void *name2)$/;"	f
nbt_new_byte_array_tag	nbt.c	/^nbt_tag *nbt_new_byte_array_tag(uint8_t *payload_value, wchar_t *name, uint16_t name_len, int32_t length)$/;"	f
nbt_new_byte_tag	includes/nbt.h	65;"	d
nbt_new_compound_tag	nbt.c	/^nbt_tag *nbt_new_compound_tag(wchar_t *name, uint16_t name_len)$/;"	f
nbt_new_double_tag	includes/nbt.h	75;"	d
nbt_new_float_tag	includes/nbt.h	73;"	d
nbt_new_int_tag	includes/nbt.h	69;"	d
nbt_new_list_tag	nbt.c	/^nbt_tag *nbt_new_list_tag(wchar_t *name, uint16_t name_len, int8_t child_tag_type)$/;"	f
nbt_new_long_tag	includes/nbt.h	71;"	d
nbt_new_short_tag	includes/nbt.h	67;"	d
nbt_new_simple_payload	nbt.c	/^u_tag_payload *nbt_new_simple_payload(uint8_t tag_type, void *payload_value)$/;"	f
nbt_new_simple_tag	nbt.c	/^nbt_tag *nbt_new_simple_tag(uint8_t tag_type, wchar_t *name, uint16_t name_len, void *payload_value)$/;"	f
nbt_new_string_tag	nbt.c	/^nbt_tag *nbt_new_string_tag(wchar_t *payload_value, wchar_t *name, uint16_t name_len, int32_t length)$/;"	f
nbt_new_tag	nbt.c	/^nbt_tag *nbt_new_tag(uint8_t tag_type, wchar_t *name, uint16_t name_len, u_tag_meta *meta, u_tag_payload *payload)$/;"	f
nbt_payload	nbt.c	/^void *nbt_payload(nbt_tag *tag, uint8_t expected_type)$/;"	f
nbt_print	nbt.c	/^void nbt_print(nbt_tag *tag)$/;"	f
nbt_print_single	nbt.c	/^void nbt_print_single(nbt_tag *tag, int indent)$/;"	f
nbt_read	read_nbt.c	/^nbt_tag *nbt_read(gzFile file, int force_tag_type)$/;"	f
nbt_read_error	read_nbt.c	/^int nbt_read_error;$/;"	v
nbt_read_errors	includes/read_nbt.h	/^enum nbt_read_errors$/;"	g
nbt_read_gzread	read_nbt.c	/^int nbt_read_gzread(gzFile file, void *buffer, int length)$/;"	f
nbt_read_gzread_utf8	read_nbt.c	/^int nbt_read_gzread_utf8(gzFile file, wchar_t *wchar_buffer, int length)$/;"	f
nbt_tag	includes/nbt.h	/^} nbt_tag;$/;"	t	typeref:struct:__anon7
nbt_tag_types	includes/nbt.h	/^enum nbt_tag_types$/;"	g
next	includes/hashtable_private.h	/^    struct entry *next; \/**< \\brief The next value in the bucket *\/$/;"	m	struct:entry	typeref:struct:entry::entry
next	includes/linked_list.h	/^    struct list_node_s *next;   \/**< \\brief The next item in the %list. *\/$/;"	m	struct:list_node_s	typeref:struct:list_node_s::list_node_s
output_filename	includes/config.h	/^    char          *output_filename;       \/**< The name of the file which will hold the final rendered image. Will be autogenerated if missing. *\/$/;"	m	struct:__anon8
output_path	includes/renderer.h	/^    char *output_path;      \/**< \\brief The place where the image should be $/;"	m	struct:__anon10
parent	includes/hashtable_itr.h	/^    struct entry *parent;   \/**< \\brief The parent of the current hash entry. *\/$/;"	m	struct:hashtable_itr	typeref:struct:hashtable_itr::entry
parse_commandline_options	config.c	/^int parse_commandline_options(int argc, char **argv, configuration *config)$/;"	f
payload	includes/nbt.h	/^    u_tag_payload  *payload;  \/**< \\brief The payload for this tag. *\/$/;"	m	struct:__anon7
prev	includes/linked_list.h	/^    struct list_node_s *prev;   \/**< \\brief The previous item in the %list. *\/$/;"	m	struct:list_node_s	typeref:struct:list_node_s::list_node_s
prime_table_length	hashtable.c	/^const unsigned int prime_table_length = sizeof(primes)\/sizeof(primes[0]);$/;"	v
primeindex	includes/hashtable_private.h	/^    unsigned int primeindex;            \/**< \\brief The prime index of the $/;"	m	struct:hashtable
primes	hashtable.c	/^static const unsigned int primes[] = {$/;"	v	file:
print_help	main.c	/^void print_help(void)$/;"	f
print_indent	nbt.c	/^void print_indent(int indent)$/;"	f
renderer	includes/renderer.h	/^} renderer;$/;"	t	typeref:struct:__anon10
renderer_blend_color	renderer.c	/^void renderer_blend_color(png_bytep pixel1, png_bytep pixel2, float gamma)$/;"	f
renderer_calc_gamma	renderer.c	/^float renderer_calc_gamma(chunk *c, int16_t coord_x, int16_t coord_y, int16_t coord_z, float sky_percent, float block_percent)$/;"	f
renderer_errors	includes/renderer.h	/^enum renderer_errors$/;"	g
renderer_flat_dimensions	renderers/flat.c	/^int renderer_flat_dimensions(int *width, int *height)$/;"	f
renderer_flat_draw_row	renderers/flat.c	/^void renderer_flat_draw_row(void *_r, png_bytep buffer, int row_number)$/;"	f
renderer_flat_get_chunk	renderers/flat.c	/^chunk *renderer_flat_get_chunk(renderer *r, int32_t coord_x, int32_t coord_z)$/;"	f
renderer_flat_new	renderers/flat.c	/^renderer *renderer_flat_new(level *lvl, color_map *map, char *output_path)$/;"	f
renderer_free	renderer.c	/^void renderer_free(renderer *doomed)$/;"	f
renderer_funcs	includes/renderer.h	/^} renderer_funcs;$/;"	t	typeref:struct:__anon9
renderer_new	renderer.c	/^renderer *renderer_new(level *lvl, char *output_path, color_map *map, renderer_funcs *funcs, chunk_cache *cache)$/;"	f
renderer_perform	renderer.c	/^int renderer_perform(renderer *r, int32_t tile_x, int32_t tile_z)$/;"	f
renderer_sanity_check	renderer.c	/^int renderer_sanity_check(renderer *r)$/;"	f
set	includes/cache.h	/^    int (*set)(void*,int64_t,chunk*);$/;"	m	struct:__anon12
short_payload	includes/nbt.h	/^    int16_t short_payload;       \/**< \\brief Payload for TAG_Short tags. *\/$/;"	m	union:__anon5
size	includes/caches/slab.h	/^    uint32_t size;  \/**< \\brief How large the slab is *\/$/;"	m	struct:__anon2
skylight	includes/chunk.h	/^    uint8_t *skylight;      \/**< \\brief The skylight of this chunk *\/$/;"	m	struct:__anon1
smallest_x	includes/level.h	/^    int32_t smallest_x;     \/**< \\brief The smallest X coordinate of the level$/;"	m	struct:__anon4
smallest_z	includes/level.h	/^    int32_t smallest_z;     \/**< \\brief The smallest Z coordinate of the level$/;"	m	struct:__anon4
start	includes/linked_list.h	/^    list_node *start;   \/**< \\brief The start node of the %list. *\/$/;"	m	struct:__anon3
string_payload	includes/nbt.h	/^    wchar_t *string_payload;     \/**< \\brief Payload for TAG_String tags. *\/$/;"	m	union:__anon5
table	includes/hashtable_private.h	/^    struct entry **table;               \/**< \\brief The buckets of the table *\/$/;"	m	struct:hashtable	typeref:struct:hashtable::entry
tablelength	includes/hashtable_private.h	/^    unsigned int tablelength;           \/**< \\brief The size of the table *\/$/;"	m	struct:hashtable
tile_x	includes/config.h	/^    int32_t       tile_x;                 \/**< The X coordinate of the desired tile. *\/$/;"	m	struct:__anon8
tile_x	includes/renderer.h	/^    int32_t tile_x;         \/**< \\brief The X coordinate of the tile being$/;"	m	struct:__anon10
tile_z	includes/config.h	/^    int32_t       tile_z;                 \/**< The Z coordinate of the desired tile. *\/$/;"	m	struct:__anon8
tile_z	includes/renderer.h	/^    int32_t tile_z;         \/**< \\brief The Z coordinate of the tile being$/;"	m	struct:__anon10
type	includes/nbt.h	/^    uint8_t         type;     \/**< \\brief The tag type, which must be a member of #nbt_tag_types. *\/$/;"	m	struct:__anon7
u_tag_meta	includes/nbt.h	/^} u_tag_meta;$/;"	t	typeref:union:__anon6
u_tag_payload	includes/nbt.h	/^} u_tag_payload;$/;"	t	typeref:union:__anon5
uint64_ror	maths.c	/^uint64_t uint64_ror(uint64_t number, int count)$/;"	f
utf8_to_wchar	utf8.c	/^utf8_to_wchar(const char *in, size_t insize, wchar_t *out, size_t outsize,$/;"	f
v	includes/hashtable_private.h	/^    void *v;            \/**< \\brief The value of this entry *\/$/;"	m	struct:entry
value_free_func	includes/hashtable_private.h	/^    void (*value_free_func)(void*);     \/**< \\brief Function to free values *\/$/;"	m	struct:hashtable
vfp	includes/nbt.h	/^typedef void(*vfp)(void*);$/;"	t
wchar_to_utf8	utf8.c	/^wchar_to_utf8(const wchar_t *in, size_t insize, char *out, size_t outsize,$/;"	f
